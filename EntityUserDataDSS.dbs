<data name="identity.user-data.ds" serviceNamespace="centra-id.com" enableBatchRequests="true" enableBoxcarring="true" transports="https" disableLegacyBoxcarringMode="true">
    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- Seleccionar usuario para service now -->
    <query id="select_user_for_service_now_query" useConfig="default">
        <sql>
            SELECT 
                t1.USERNAME,
                t1.IDENTIFICATION IDENTIFICACION,
                t1.EMPLOYEE_COMPLETE_NAME NOMBRES,
                T1.EMPLOYEE_STATUS ESTADO,
                t2.IDENTIFICATION SUPERVISOR_IDENTIFICACION,
                t2.EMPLOYEE_COMPLETE_NAME SUPERVISOR_NOMBRES,
                t3.IDENTIFICATION CONTRAPARTE_IDENTIFICACION,
                t3.EMPLOYEE_COMPLETE_NAME CONTRAPARTE_NOMBRES,
                t4.IDENTIFICATION RESPONSABLE_IDENTIFICACION,
                t4.EMPLOYEE_COMPLETE_NAME RESPONSABLE_NOMBRES,
                t5.CODE COMPANIA_CODIGO,
                t5.BUSINESS_NAME COMPANIA_NOMBRE,
                t6.CODE DIVISION_CODIGO,
                t6.NAME DIVISION_NOMBRE,
                t7.CODE AREA_CODIGO,
                t7.NAME AREA_NOMBRE,
                t8.CODE DEPARAMENTO_CODIGO,
                t8.NAME DEPARTAMENTO_NOMBRE,
                t9.CODE CARGO_CODIGO,
                t9.NAME CARGO_NOMBRE,
                t10.CODE PERFIL_GLOBAL_CODIGO,
                t10.NAME PERFIL_GLOBAL_NOMBRE,
                t11.NAME PERFIL_GLOBAL_CARGO_DUENIO_NOMBRE,
                t11.ID PERFIL_GLOBAL_CARGO_DUENIO_ID
            FROM SCH_CENTRA_ID.USERDATA t1 
                LEFT JOIN SCH_CENTRA_ID.USERDATA t2 ON t1.USERDATA_SUPERVISOR_ID = t2.ID
                LEFT JOIN SCH_CENTRA_ID.USERDATA t3 ON t1.USERDATA_BANK_COUNTERPART_ID = t3.ID
                LEFT JOIN SCH_CENTRA_ID.USERDATA t4 ON t1.USERDATA_RESPONSIBLE_USER_ID = t4.ID
                LEFT JOIN SCH_CENTRA_ID.COMPANIES t5 ON t1.COMPANY_ID = t5.ID
                LEFT JOIN SCH_CENTRA_ID.CATALOGS t6 ON t1.CATALOG_DIVISION_ID = t6.ID
                LEFT JOIN SCH_CENTRA_ID.CATALOGS t7 ON t1.CATALOG_AREA_ID = t7.ID
                LEFT JOIN SCH_CENTRA_ID.CATALOGS t8 ON t1.CATALOG_DEPARTMENT_ID = t8.ID
                LEFT JOIN SCH_CENTRA_ID.CATALOGS t9 ON t1.CATALOG_POSITION_ID = t9.ID
                LEFT JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t10 ON t1.GLOBAL_PROFILE_ID = t10.ID
                LEFT JOIN SCH_CENTRA_ID.CATALOGS t11 ON t10.CATALOG_POSITION_OWNER_ID = t11.ID
            WHERE 
            t1.USERNAME=:username</sql>
        <param name="username" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="usuario" >
            <element column="USERNAME" name="userid" />
            <element column="IDENTIFICACION" name="identificacion" />
            <element column="NOMBRES" name="nombres" />
            <element column="ESTADO" name="estado" />
            <element column="SUPERVISOR_IDENTIFICACION" name="supervisor_identificacion" />
            <element column="SUPERVISOR_NOMBRES" name="supervisor_nombres" />
            <element column="CONTRAPARTE_IDENTIFICACION" name="contraparte_identificacion" />
            <element column="CONTRAPARTE_NOMBRES" name="contraparte_nombres" />
            <element column="RESPONSABLE_IDENTIFICACION" name="responsable_identificacion" />
            <element column="RESPONSABLE_NOMBRES" name="responsable_nombres" />
            <element column="COMPANIA_CODIGO" name="compania_codigo" />
            <element column="COMPANIA_NOMBRE" name="compania_nombre" />
            <element column="DIVISION_CODIGO" name="division_codigo" />
            <element column="DIVISION_NOMBRE" name="division_nombre" />
            <element column="AREA_CODIGO" name="area_codigo" />
            <element column="AREA_NOMBRE" name="area_nombre" />
            <element column="DEPARAMENTO_CODIGO" name="departamento_codigo" />
            <element column="DEPARTAMENTO_NOMBRE" name="departamento_nombre" />
            <element column="CARGO_CODIGO" name="cargo_codigo" />
            <element column="CARGO_NOMBRE" name="cargo_nombre" />
            <element column="PERFIL_GLOBAL_CODIGO" name="perfil_global_codigo" />
            <element column="PERFIL_GLOBAL_NOMBRE" name="perfil_global_nombre" />
            <element column="PERFIL_GLOBAL_CARGO_DUENIO_NOMBRE" name="perfil_global_cargo_duenio_nombre" />
            <call-query href="select_responsibles_for_service_now_query">
                <with-param column="PERFIL_GLOBAL_CARGO_DUENIO_ID" name="perfil_global_cargo_duenio_id"/>
            </call-query>
        </result>
    </query>  
    <query id="select_responsibles_for_service_now_query" useConfig="default">
        <sql>
            SELECT 
            t1.USERNAME,
            t1.IDENTIFICATION,
            t1.EMPLOYEE_COMPLETE_NAME NOMBRES,
            t2.CODE CARGO_CODIGO,
            T2.NAME CARGO_NOMBRE
            FROM SCH_CENTRA_ID.USERDATA t1
            LEFT JOIN SCH_CENTRA_ID.CATALOGS t2 ON t1.CATALOG_POSITION_ID = t2.ID
            WHERE 
            t1.EMPLOYEE_STATUS='ACTIVO' AND
            t1.CATALOG_POSITION_ID=:perfil_global_cargo_duenio_id AND
            t1.VALID=1</sql>
        <param name="perfil_global_cargo_duenio_id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="responsables" rowName="responsable">
            <element column="USERNAME" name="username" />
            <element column="IDENTIFICATION" name="identification" />
            <element column="NOMBRES" name="nombres" />
            <element column="CARGO_CODIGO" name="cargo_codigo" />
            <element column="CARGO_NOMBRE" name="cargo_nombre" />
        </result>
    </query>  
    <!-- Seleccionar Ticket -->
    <query id="select_ticket_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.TICKETS
            SET 
                DATE_PLANNED = DATEADD(MINUTE, 1, GETDATE())
            OUTPUT 
                INSERTED.ID,
                INSERTED.GUID,
                INSERTED.UUIDS,
                INSERTED.USERNAME,
                INSERTED.ENDPOINT,
                INSERTED.PAYLOAD,
                INSERTED.DESCRIPTION
            WHERE 
                ID = (
                    SELECT TOP 1 ID
                    FROM SCH_CENTRA_ID.TICKETS
                    WHERE STATUS = 'ABIERTO' AND GETDATE() &gt; DATE_PLANNED 
                    ORDER BY DATE_PLANNED
                )</sql>
        <result element="item" >
            <element column="ID" name="id" />
            <element column="GUID" name="guid" />
            <element column="UUIDS" name="uuids" />
            <element column="USERNAME" name="username" />
            <element column="ENDPOINT" name="endpoint" />
            <element column="PAYLOAD" name="payload" />
            <element column="DESCRIPTION" name="description" />
        </result>
    </query>  
    <!-- Crear Tickets -->
    <query id="create_ticket_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TICKETS
                (
                    GUID,
                    UUIDS,
                    USERNAME,
                    ENDPOINT,
                    PAYLOAD,
                    DESCRIPTION,
                    STATUS,
                    DATE_CREATED,
                    DATE_PLANNED
                )
                VALUES
                (
                    NEWID(),
                    :uuids,
                    :username,
                    :endpoint,
                    :payload,
                    :description,
                    'ABIERTO',
                    GETDATE(),
                    GETDATE()
                )</sql>
        <param name="uuids" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="username" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="endpoint" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="payload" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="description" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>  
    <!-- Actualizar Tickets OK -->
    <query id="update_ticket_ok_query" useConfig="default">
        <sql>
            UPDATE 
                SCH_CENTRA_ID.TICKETS
            SET
                STATUS = 'CERRADO',
                DATE_EXECUTE = GETDATE()
            WHERE
                GUID = :guid</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query> 
    <!-- Crear Historico de Tickets  -->
    <query id="create_ticket_history_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TICKETS_HISTORY
                (
                    GUID,
                    DATE_EXECUTE,
                    RESPONSE,
                    HTTP_RESPONSE
                )
                VALUES
                (
                    :guid,
                    GETDATE(),
                    :response,
                    :http_response
                )</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="response" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="http_response" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>  
    <!-- Crear usuarios para provision con rpa -->
    <query id="create_rpa_user_provisioning_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.RPA_USER_PROVISIONING
                (
                    GUID,
                    ORIGEN,
                    USERNAME,
                    IDENTIFICACION,
                    APELLIDOS,
                    NOMBRES,
                    COD_CENTRO_COSTO,
                    NOM_CENTRO_COSTO,
                    COD_COMPANIA,
                    NOM_COMPANIA,
                    COD_PERFIL_GLOBAL,
                    NOM_PERFIL_GLOBAL,
                    CELULAR,
                    CARGO,
                    ESTADO,
                    FECHA_REGISTRO,
                    VALID
                )
                OUTPUT 
                    INSERTED.GUID    
                VALUES
                (
                    NEWID(),
                    :origen,
                    :username,
                    :identificacion,
                    :apellidos,
                    :nombres,
                    :cod_centro_costo,
                    :nom_centro_costo,
                    :cod_compania,
                    :nom_compania,
                    :cod_perfil_global,
                    :nom_perfil_global,
                    :celular,
                    :cargo,
                    'REGISTRADO',
                    GETDATE(),
                    1                    
                )</sql>
        <param name="origen" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="username" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="identificacion" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="apellidos" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nombres" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cod_centro_costo" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nom_centro_costo" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cod_compania" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nom_compania" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cod_perfil_global" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nom_perfil_global" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="celular" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cargo" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Item" >
            <element column="GUID" name="guid" xsdType="xs:string"/>
        </result>
    </query>  
    <!-- Crear aplicaciones / PT de  usuarios para provision con rpa -->
    <query id="create_rpa_user_provisioning_detail_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL
                (
                    RPA_USER_PROVISIONING_ID,
                    UUID,
                    TYPE_ACTION,
                    COD_APPLICATION,
                    COD_PERFIL_TRANSACCTIONAL,
                    ESTADO,
                    VALID
                )
            VALUES
                (
                    (SELECT ID FROM SCH_CENTRA_ID.RPA_USER_PROVISIONING WHERE GUID = :guid),
                    :uuid,
                    :type_action,
                    :cod_application,
                    :cod_perfil_transacctional,
                    'REGISTRADO',
                    1                    
                )</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="uuid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="type_action" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cod_application" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="cod_perfil_transacctional" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query> 
    <!-- Selecciona todos los usuarios para ser provisionados con rpa -->
    <query id="list_rpa_user_provisioning_pending_query" useConfig="default">
        <sql>
            SELECT
                a.GUID,
                a.ORIGEN,
                a.USERNAME,
                a.IDENTIFICACION,
                a.APELLIDOS,
                a.NOMBRES,
                a.COD_CENTRO_COSTO,
                a.NOM_CENTRO_COSTO,
                a.COD_COMPANIA,
                a.NOM_COMPANIA,
                a.COD_PERFIL_GLOBAL,
                a.NOM_PERFIL_GLOBAL,
                a.CELULAR,
                a.CARGO,
                a.FECHA_REGISTRO,
                b.CORREO_ELECTRONICO,
                b.CORREO_ELECTRONICO_PERSONAL,
                b.ESTADO_EMPLEADO
            FROM
                SCH_CENTRA_ID.RPA_USER_PROVISIONING a
            LEFT JOIN 
               SCH_CENTRA_ID.USERDATA_VW b ON a.USERNAME = b.USERNAME
            WHERE
               a.ESTADO = 'REGISTRADO'
            ORDER BY a.ID</sql>
        <result element="userList" rowName="user">
            <element column="GUID" name="guid" xsdType="xs:string"/>
            <element column="ORIGEN" name="origen" xsdType="xs:string"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICACION" name="identificacion" xsdType="xs:string"/>
            <element column="APELLIDOS" name="apellidos" xsdType="xs:string"/>
            <element column="NOMBRES" name="nombres" xsdType="xs:string"/>
            <element column="COD_CENTRO_COSTO" name="cod_centro_costo" xsdType="xs:string"/>
            <element column="NOM_CENTRO_COSTO" name="nom_centro_costo" xsdType="xs:string"/>
            <element column="NOM_COMPANIA" name="nom_compania" xsdType="xs:string"/>
            <element column="COD_PERFIL_GLOBAL" name="cod_perfil_global" xsdType="xs:string"/>
            <element column="NOM_PERFIL_GLOBAL" name="nom_perfil_global" xsdType="xs:string"/>
            <element column="CELULAR" name="celular" xsdType="xs:string"/>
            <element column="CARGO" name="cargo" xsdType="xs:string"/>
            <element column="CORREO_ELECTRONICO" name="correo_electronico" xsdType="xs:string"/>
            <element column="CORREO_ELECTRONICO_PERSONAL" name="correo_electronico_personal" xsdType="xs:string"/>
            <element column="ESTADO_EMPLEADO" name="estado_empleado" xsdType="xs:string"/>
            <element column="FECHA_REGISTRO" name="fecha_registro" xsdType="xs:datetime"/>
            <call-query href="list_detail_rpa_user_provisioning_pending_query">
                <with-param column="GUID" name="guid"/>
            </call-query>
        </result>
    </query>   
    <!-- Selecciona todas las aplicaciones de un usuarios para ser provisionados con rpa -->
    <query id="list_detail_rpa_user_provisioning_pending_query" useConfig="default">
        <sql>
            SELECT
                UUID,
                TYPE_ACTION,
                COD_APPLICATION,
                COD_PERFIL_TRANSACCTIONAL
            FROM
                SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL
            WHERE 
                RPA_USER_PROVISIONING_ID IN (SELECT ID FROM SCH_CENTRA_ID.RPA_USER_PROVISIONING WHERE GUID=:guid)</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="applicationList" rowName="application">
            <element column="UUID" name="uuid" xsdType="xs:string"/>
            <element column="TYPE_ACTION" name="type_action" xsdType="xs:string"/>
            <element column="COD_APPLICATION" name="cod_application" xsdType="xs:string"/>
            <element column="COD_PERFIL_TRANSACCTIONAL" name="cod_perfil_transacctional" xsdType="xs:string"/>
        </result>
    </query> 
    <!-- Registra a un usuario que inicio se procedo de provisionamiento manual con rpa -->
    <query id="start_rpa_user_provisioning_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.RPA_USER_PROVISIONING
            SET
                ESTADO = 'ENVIADO RPA',
                FECHA_PROCESAMIENTO = GETDATE()
            OUTPUT INSERTED.id                
            WHERE
                GUID = :guid AND ESTADO='REGISTRADO'</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Item" >
            <element column="ID" name="id" xsdType="xs:integer"/>
        </result>
    </query> 
    <!-- Registra las tareas como enviadas para su procesamiento, provisionamiento manual con rpa -->
    <query id="start_rpa_user_provisioning_task_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TAKS_PROVISIONING_HISTORY
                (
                    TASK_PROVISIONING_ID,
                    STATUS,
                    CREATION_DATE,
                    VALID,
                    COMPLETED
                )
                    SELECT 
                        ID,
                        'ENVIADO RPA',
                        GETDATE(),
                        1,
                        0   
                    FROM SCH_CENTRA_ID.TAKS_PROVISIONING WHERE UUID IN (
                        SELECT b.UUID 
                        FROM SCH_CENTRA_ID.RPA_USER_PROVISIONING a
                        join SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL b ON a.ID = b.RPA_USER_PROVISIONING_ID
                        WHERE 
                        a.VALID=1 AND
                        b.VALID=1 AND 
                        a.GUID = :guid AND
                        a.ESTADO = 'REGISTRADO'
                    )</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query> 
    <!-- Registra las tareas con el resultado, provisionamiento manual con rpa -->
    <query id="result_rpa_user_provisioning_task_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TAKS_PROVISIONING_HISTORY
                (
                    TASK_PROVISIONING_ID,
                    STATUS,
                    CREATION_DATE,
                    VALID,
                    COMPLETED,
                    TICKET_NUMBER,
                    TICKET_CONTENT,
                    TICKET_DATE
                )
                    SELECT 
                        ID,
                        :status,
                        GETDATE(),
                        1,
                        1,
                        :ticket_number,
                        :ticket_content,
                        CASE 
                            WHEN :status = 'ERROR' THEN GETDATE() ELSE NULL
                        END   
                    FROM SCH_CENTRA_ID.TAKS_PROVISIONING 
                    WHERE UUID = :uuid</sql>
        <param name="uuid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="status" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="ticket_number" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="ticket_content" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query> 
    <!-- Valida si los UUID enviados estan completos. -->
    <query id="validate_uuid_rpa_user_provisioning_query" useConfig="default">
        <sql>
            SELECT
                UUID
            FROM
                SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL
            WHERE
                RPA_USER_PROVISIONING_ID IN
                (
                    SELECT
                        ID
                    FROM
                        SCH_CENTRA_ID.RPA_USER_PROVISIONING
                    WHERE
                        GUID = :guid
                    AND UUID NOT IN :uuids 
                )</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="uuids" sqlType="QUERY_STRING"/>
        <result element="list" rowName="item">
            <element column="UUID" name="uuid" xsdType="xs:string"/>
        </result>
    </query>  
    <!-- Registra el resultado del proceso de provisionamiento manual con rpa de un usuariou -->
    <query id="result_rpa_user_provisioning_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.RPA_USER_PROVISIONING
            SET
                ESTADO = :estado,
                FECHA_RESULTADO = GETDATE(),
                ERROR = :error
            OUTPUT INSERTED.id                
            WHERE
                GUID = :guid</sql>
        <param name="guid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="estado" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="error" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Item" >
            <element column="ID" name="id" xsdType="xs:integer"/>
        </result>
    </query>  
    <!-- Registra el resultado del proceso de provisionamiento manual con rpa de una aplicacion -->
    <query id="result_rpa_application_provisioning_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL
            SET
                ESTADO = :estado,
                ERROR = :error
            WHERE
                UUID = :uuid</sql>
        <param name="uuid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="estado" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="error" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>   
    <!-- Selecciona datos del provisionamiento manual rpa -->
    <query id="select_rpa_provisioning_query" useConfig="default">
        <sql>
            SELECT
                a.TYPE_ACTION,
                a.COD_APPLICATION,
                a.COD_PERFIL_TRANSACCTIONAL,
                b.ORIGEN,
                b.USERNAME,
                b.IDENTIFICACION,
                b.APELLIDOS,
                b.NOMBRES,
                b.COD_CENTRO_COSTO,
                b.NOM_CENTRO_COSTO,
                b.COD_COMPANIA,
                b.NOM_COMPANIA,
                b.COD_PERFIL_GLOBAL,
                b.NOM_PERFIL_GLOBAL,
                b.CELULAR,
                b.CARGO
            FROM
                SCH_CENTRA_ID.RPA_USER_PROVISIONING_DETAIL a
            JOIN
                SCH_CENTRA_ID.RPA_USER_PROVISIONING b ON  a.RPA_USER_PROVISIONING_ID = b.ID
            WHERE 
                a.uuid = :uuid</sql>
        <param name="uuid" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="item">
            <element column="TYPE_ACTION" name="type_action" />
            <element column="COD_APPLICATION" name="cod_application" />
            <element column="COD_PERFIL_TRANSACCTIONAL" name="cod_perfil_transacctional" />
            <element column="ORIGEN" name="origen" />
            <element column="USERNAME" name="username" />
            <element column="IDENTIFICACION" name="identificacion" />
            <element column="APELLIDOS" name="apellidos" />
            <element column="NOMBRES" name="nombres" />
            <element column="COD_CENTRO_COSTO" name="cod_centro_costo" />
            <element column="NOM_CENTRO_COSTO" name="nom_centro_costo" />
            <element column="COD_COMPANIA" name="cod_compania" />
            <element column="NOM_COMPANIA" name="nom_compania" />
            <element column="COD_PERFIL_GLOBAL" name="cod_perfil_global" />
            <element column="NOM_PERFIL_GLOBAL" name="nom_perfil_global" />
            <element column="CELULAR" name="celular" />
            <element column="CARGO" name="cargo" />
        </result>
    </query>        
    <!-- Selecciona todos los responsables de perfiles globales -->
    <query id="userDataGlobalProfileResponsibles_Query" useConfig="default">
        <sql>
            SELECT ID, USERNAME, IDENTIFICATION, EMPLOYEE_COMPLETE_NAME,MAIL 
            FROM SCH_CENTRA_ID.USERDATA WHERE EMPLOYEE_STATUS='ACTIVO' AND 
            CATALOG_POSITION_ID IN (
              SELECT CATALOG_POSITION_OWNER_ID FROM SCH_CENTRA_ID.GLOBAL_PROFILES WHERE VALID=1 AND STATUS='ACTIVO'   
            )</sql>
        <result element="userDataList" rowName="userData">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="employeeCompleteName" xsdType="xs:string"/>
            <element column="MAIL" name="mail" xsdType="xs:string"/>
        </result>
    </query>        
    <!-- QUERY USERDATA INFO PROFILE -->
    <query id="userDataInfoProfileQuery" useConfig="default">
        <sql>
            SELECT 
                T2.CODE AS CODIGO_PERFIL_GLOBAL,
                T2.NAME AS NOMBRE_PERFIL_GLOBAL,
                T3.NAME AS CARGO_PROPIETARIO,
                T1.EXPIRATION_DATE_GLOBAL_PROFILE AS FECHA_CADUCIDAD_PERFIL_GLOBAL,
                T8.CODE AS CODIGO_CENTRO_COSTO,
                T8.NAME AS NOMBRE_CENTRO_COSTO,
                (SELECT COUNT(*) FROM SCH_CENTRA_ID.USERDATA WHERE EMPLOYEE_STATUS='ACTIVO' AND GLOBAL_PROFILE_ID=T1.GLOBAL_PROFILE_ID) AS TOTAL_USUARIOS,
                T7.GROUP_AD AS GRUPOS_AD
            FROM SCH_CENTRA_ID.USERDATA T1
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T2 ON T1.GLOBAL_PROFILE_ID=T2.ID
            JOIN SCH_CENTRA_ID.CATALOGS T3 ON T2.CATALOG_POSITION_OWNER_ID=T3.ID
            JOIN SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES T4 ON T4.GLOBAL_PROFILE_ID=T2.ID
            JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES T5 ON T4.TRANSACTIONAL_PROFILE_ID=T5.ID
            JOIN SCH_CENTRA_ID.APPLICATIONS T6 ON T5.APPLICATION_ID=T6.ID
            LEFT JOIN SCH_CENTRA_ID.TEMPLATE_PROFILES_AD T7 ON T5.ID=T7.TRANSACTIONAL_PROFILE_ID
            JOIN SCH_CENTRA_ID.COSTS_CENTERS T8 ON T1.COST_CENTER_ID=T8.ID
            WHERE LOWER(T1.USERNAME) = LOWER(?) AND T1.EMPLOYEE_STATUS='ACTIVO' AND T4.VALID=1 AND T6.CODE='AD'</sql>
        <result element="userDataList" rowName="userData">
            <element column="CODIGO_PERFIL_GLOBAL" name="codigoPerfilGlobal" xsdType="xs:string"/>
            <element column="NOMBRE_PERFIL_GLOBAL" name="nombrePerfilGlobal" xsdType="xs:string"/>
            <element column="CARGO_PROPIETARIO" name="cargoPropietario" xsdType="xs:string"/>
            <element column="FECHA_CADUCIDAD_PERFIL_GLOBAL" name="fechaCaducidadPerfilGlobal" xsdType="xs:date"/>
            <element column="CODIGO_CENTRO_COSTO" name="codigoCentroCosto" xsdType="xs:string"/>
            <element column="NOMBRE_CENTRO_COSTO" name="nombreCentroCosto" xsdType="xs:string"/>
            <element column="TOTAL_USUARIOS" name="totalUsuarios" xsdType="xs:string"/>
            <element column="GRUPOS_AD" name="gruposAd" xsdType="xs:string"/>
        </result>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <!-- QUERY USERDATA LISTA COUNT -->
    <query id="userDataListCountQuery" useConfig="default">
        <sql>
          SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.USERDATA t1 WITH (NOLOCK)
            JOIN SCH_CENTRA_ID.COMPANIES t2 WITH (NOLOCK) ON t1.COMPANY_ID=t2.ID
            join SCH_CENTRA_ID.TYPE_USERS t3 WITH (NOLOCK) ON t1.TYPE_USER_ID = t3.ID
            JOIN SCH_CENTRA_ID.TYPE_USERS t4 WITH (NOLOCK) ON t1.SUBTYPE_USER_ID =t4.ID
            WHERE :whereclause</sql>
        <result element="userDataList">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- QUERY USERDATA LISTA -->
    <query id="userDataListQuery" useConfig="default">
        <sql>
            SELECT 
                t1.ID,
                t1.USERNAME,
                t1.IDENTIFICATION,
                t1.EMPLOYEE_COMPLETE_NAME,
                t1.EMPLOYEE_STATUS,
                t3.NAME AS TYPE_USER, 
                t4.NAME AS SUBTYPE_USER,
                t2.BUSINESS_NAME AS COMPANY_NAME,
                CASE
                  WHEN t3.CODE='PER' AND t4.CODE IN ('EMP','FIL') THEN 'INT'
                  WHEN t3.CODE='PER' AND t4.CODE IN ('EXT') THEN 'EXT'
                  WHEN t3.CODE='PER' AND t4.CODE NOT IN ('EMP','FIL','EXT') AND t2.CODE NOT IN ('TCS') THEN 'EXT'
                  WHEN t3.CODE='PER' AND t4.CODE NOT IN ('EMP','FIL','EXT') AND t2.CODE  IN ('TCS') THEN 'INT'
                  WHEN t3.CODE='GEN' THEN 'GEN'
                  ELSE 'XXX'
                END TYPE,
                t1.FILTER
            FROM SCH_CENTRA_ID.USERDATA t1 WITH (NOLOCK)
            JOIN SCH_CENTRA_ID.COMPANIES t2 WITH (NOLOCK) ON t1.COMPANY_ID=t2.ID
            join SCH_CENTRA_ID.TYPE_USERS t3 WITH (NOLOCK) ON t1.TYPE_USER_ID = t3.ID
            JOIN SCH_CENTRA_ID.TYPE_USERS t4 WITH (NOLOCK) ON t1.SUBTYPE_USER_ID =t4.ID
            WHERE :whereclause
            ORDER BY :orderby
            OFFSET :from ROWS FETCH NEXT :size ROWS ONLY</sql>
        <result element="userDataList" rowName="userData">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="employeeCompleteName" xsdType="xs:string"/>
            <element column="EMPLOYEE_STATUS" name="employeeStatus" xsdType="xs:string"/>
            <element column="TYPE_USER" name="typeUser" xsdType="xs:string"/>
            <element column="SUBTYPE_USER" name="subtypeUser" xsdType="xs:string"/>
            <element column="COMPANY_NAME" name="companyName" xsdType="xs:string"/>
            <element column="TYPE" name="type" xsdType="xs:string"/>
            <element column="FILTER" name="filter" xsdType="xs:string"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="size" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="from" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="orderby" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC QUERY USERDATA -->
    <query id="dynamicQuery_userData" useConfig="default">
        <sql>
           SELECT
               userData.id,
               userData.username,
               userData.employee_first_surname,
               userData.employee_second_surname,
               userData.employee_first_name,
               userData.employee_second_name,
               userData.employee_complete_name,
               userData.identification,
               userData.company_id,
               userData.catalog_division_id,
               userData.catalog_area_id,
               userData.catalog_department_id,
               userData.catalog_position_id,
               userData.grouping_code,
               userData.subsidiary_code,
               userData.subsidiary_name,
               userData.cost_center_id,
               userData.location_name,
               userData.hierarchical_level,
               userData.deposit_account_number,
               userData.employee_income_date,
               userData.employee_departure_date,
               userData.employee_status,
               userData.employee_code,
               userData.type_user_id,
               userData.subtype_user_id,
               userData.registration_date,
               userData.guid,
               userData.type_event,
               userData.data_date,
               userData.uuid,
               userData.provision_date,
               userData.mobile,
               userData.suspension_start_date,
               userData.suspension_end_date,
               userData.suspension_reason,
               userData.suspension_type,
               userData.validation_start_date,
               userData.validation_end_date,
               userData.ending_work_date,
               userData.catalog_identification_type_id,
               userData.global_profile_id,
               userData.mail,
               userData.effective_date,
               userData.username_view,
               userData.userdata_supervisor_id,
               userData.userdata_responsible_user_id,
               userData.userdata_bank_counterpart_id,
               userData.worker_code,
               userData.justification_elimination,
               userData.justification_change_cost_center,
               userData.justification_change_global_profile,
               userData.filter,
               userData.type_rotary,
               userData.counter_generic_rotary,
               userData.counter_generic_mail,
               userData.valid,
               userData.EXPIRATION_DATE_USER,
               userData.EXPIRATION_DATE_GLOBAL_PROFILE,
               userData.GLOBAL_PROFILE_ORIGINAL_ID,
               userData.ALIAS,
               userData.OBSERVATION,
               userData.TIER,
               userData.MAILBOX,
               userData.JUSTIFICATION,
               userData.DESCRIPTION,
               userData.RESPONSIBLE_ADM,
               userData.NO_TICKET,
               userData.APPLICATION_ID,
               userData.CATALOG_TECHNOLOGY_ID,
               userData.CATALOG_ENVIRONMENT_ID,
               userData.SERVER_NAME,
               userData.SERVER_IP,
               userData.DATABASE_NAME
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby :fromto</sql>
        <result element="userDataList" rowName="userData">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="username" name="username" xsdType="xs:string"/>
            <element column="employee_first_surname" name="employeeFirstSurname" xsdType="xs:string"/>
            <element column="employee_second_surname" name="employeeSecondSurname" xsdType="xs:string"/>
            <element column="employee_first_name" name="employeeFirstName" xsdType="xs:string"/>
            <element column="employee_second_name" name="employeeSecondName" xsdType="xs:string"/>
            <element column="employee_complete_name" name="employeeCompleteName" xsdType="xs:string"/>
            <element column="identification" name="identification" xsdType="xs:string"/>
            <call-query href="queryReferenceById__userData_company">
                <with-param column="company_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogDivision">
                <with-param column="catalog_division_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogArea">
                <with-param column="catalog_area_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogDepartment">
                <with-param column="catalog_department_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogPosition">
                <with-param column="catalog_position_id" name="id"/>
            </call-query>
            <element column="grouping_code" name="groupingCode" xsdType="xs:string"/>
            <element column="subsidiary_code" name="subsidiaryCode" xsdType="xs:string"/>
            <element column="subsidiary_name" name="subsidiaryName" xsdType="xs:string"/>
            <call-query href="queryReferenceById__userData_costCenter">
                <with-param column="cost_center_id" name="id"/>
            </call-query>
            <element column="location_name" name="locationName" xsdType="xs:string"/>
            <element column="hierarchical_level" name="hierarchicalLevel" xsdType="xs:string"/>
            <element column="deposit_account_number" name="depositAccountNumber" xsdType="xs:string"/>
            <element column="employee_income_date" name="employeeIncomeDate" xsdType="xs:date"/>
            <element column="employee_departure_date" name="employeeDepartureDate" xsdType="xs:date"/>
            <element column="employee_status" name="employeeStatus" xsdType="xs:string"/>
            <element column="employee_code" name="employeeCode" xsdType="xs:string"/>
            <call-query href="queryReferenceById__userData_typeUser">
                <with-param column="type_user_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_subtypeUser">
                <with-param column="subtype_user_id" name="id"/>
            </call-query>
            <element column="registration_date" name="registrationDate" xsdType="xs:date"/>
            <element column="guid" name="guid" xsdType="xs:string"/>
            <element column="type_event" name="typeEvent" xsdType="xs:string"/>
            <element column="data_date" name="dataDate" xsdType="xs:datetime"/>
            <element column="uuid" name="uuid" xsdType="xs:string"/>
            <element column="provision_date" name="provisionDate" xsdType="xs:date"/>
            <element column="mobile" name="mobile" xsdType="xs:string"/>
            <element column="suspension_start_date" name="suspensionStartDate" xsdType="xs:date"/>
            <element column="suspension_end_date" name="suspensionEndDate" xsdType="xs:date"/>
            <element column="suspension_reason" name="suspensionReason" xsdType="xs:string"/>
            <element column="suspension_type" name="suspensionType" xsdType="xs:string"/>
            <element column="validation_start_date" name="validationStartDate" xsdType="xs:date"/>
            <element column="validation_end_date" name="validationEndDate" xsdType="xs:date"/>
            <element column="ending_work_date" name="endingWorkDate" xsdType="xs:date"/>
            <call-query href="queryReferenceById__userData_catalogIdentificationType">
                <with-param column="catalog_identification_type_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_globalProfile">
                <with-param column="global_profile_id" name="id"/>
            </call-query>
            <element column="mail" name="mail" xsdType="xs:string"/>
            <element column="effective_date" name="effectiveDate" xsdType="xs:date"/>
            <element column="username_view" name="usernameView" xsdType="xs:string"/>
            <element column="userdata_supervisor_id" name="userdataSupervisorId" xsdType="xs:integer"/>
            <element column="userdata_responsible_user_id" name="userdataResponsibleUserId" xsdType="xs:integer"/>
            <element column="userdata_bank_counterpart_id" name="userdataBankCounterpartId" xsdType="xs:integer"/>
            <element column="worker_code" name="workerCode" xsdType="xs:string"/>
            <element column="justification_elimination" name="justificationElimination" xsdType="xs:string"/>
            <element column="justification_change_cost_center" name="justificationChangeCostCenter" xsdType="xs:string"/>
            <element column="justification_change_global_profile" name="justificationChangeGlobalProfile" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="type_rotary" name="typeRotary" xsdType="xs:string"/>
            <element column="counter_generic_rotary" name="counterGenericRotary" xsdType="xs:integer"/>
            <element column="counter_generic_mail" name="counterGenericMail" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="EXPIRATION_DATE_USER" name="expirationDateUser" xsdType="xs:date"/>
            <element column="EXPIRATION_DATE_GLOBAL_PROFILE" name="expirationDateGlobalProfile" xsdType="xs:date"/>
            <element column="GLOBAL_PROFILE_ORIGINAL_ID" name="globalProfileOriginalId" xsdType="xs:integer"/>
            <element column="ALIAS" name="alias" xsdType="xs:string"/>
            <element column="OBSERVATION" name="observation" xsdType="xs:string"/>
            <element column="TIER" name="tier" xsdType="xs:string"/>
            <element column="MAILBOX" name="mailbox" xsdType="xs:string"/>
            <element column="JUSTIFICATION" name="justification" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="RESPONSIBLE_ADM" name="responsibleAdm" xsdType="xs:integer"/>
            <element column="NO_TICKET" name="noTicket" xsdType="xs:string"/>
            <call-query href="queryReferenceById__application">
                <with-param column="APPLICATION_ID" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogTechnology">
                <with-param column="CATALOG_TECHNOLOGY_ID" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__userData_catalogEnvironment">
                <with-param column="CATALOG_ENVIRONMENT_ID" name="id"/>
            </call-query>                        
            <element column="SERVER_NAME" name="serverName" xsdType="xs:string"/>
            <element column="SERVER_IP" name="serverIp" xsdType="xs:string"/>
            <element column="DATABASE_NAME" name="databaseName" xsdType="xs:string"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Company-->
    <query id="dynamicDistinctQuery_userData_company" useConfig="default">
        <sql>
           SELECT DISTINCT
               company.id,
               company.code,
               company.identifier,
               company.business_name,
               company.catalog_company_type_id,
               company.domain_name,
               company.status,
               company.logon,
               company.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="companyList" rowName="company">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="identifier" name="identifier" xsdType="xs:string"/>
            <element column="business_name" name="businessName" xsdType="xs:string"/>
            <call-query href="queryReferenceById__company_company_catalogCompanyType">
                <with-param column="catalog_company_type_id" name="id"/>
            </call-query>
            <element column="domain_name" name="domainName" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="logon" name="logon" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Catalog-->
    <query id="dynamicDistinctQuery_userData_catalog" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogDivision.id,
               catalogDivision.code,
               catalogDivision.name,
               catalogDivision.predetermined,
               catalogDivision.ordinal,
               catalogDivision.value_text,
               catalogDivision.value_number,
               catalogDivision.value_date,
               catalogDivision.value_boolean,
               catalogDivision.catalog_type_id,
               catalogDivision.filter,
               catalogDivision.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogDivision_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Catalog-->
    <query id="dynamicDistinctQuery_userData_catalog" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogArea.id,
               catalogArea.code,
               catalogArea.name,
               catalogArea.predetermined,
               catalogArea.ordinal,
               catalogArea.value_text,
               catalogArea.value_number,
               catalogArea.value_date,
               catalogArea.value_boolean,
               catalogArea.catalog_type_id,
               catalogArea.filter,
               catalogArea.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogArea_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Catalog-->
    <query id="dynamicDistinctQuery_userData_catalog" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogDepartment.id,
               catalogDepartment.code,
               catalogDepartment.name,
               catalogDepartment.predetermined,
               catalogDepartment.ordinal,
               catalogDepartment.value_text,
               catalogDepartment.value_number,
               catalogDepartment.value_date,
               catalogDepartment.value_boolean,
               catalogDepartment.catalog_type_id,
               catalogDepartment.filter,
               catalogDepartment.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogDepartment_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Catalog-->
    <query id="dynamicDistinctQuery_userData_catalog" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogPosition.id,
               catalogPosition.code,
               catalogPosition.name,
               catalogPosition.predetermined,
               catalogPosition.ordinal,
               catalogPosition.value_text,
               catalogPosition.value_number,
               catalogPosition.value_date,
               catalogPosition.value_boolean,
               catalogPosition.catalog_type_id,
               catalogPosition.filter,
               catalogPosition.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogPosition_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA CostCenter-->
    <query id="dynamicDistinctQuery_userData_costCenter" useConfig="default">
        <sql>
           SELECT DISTINCT
               costCenter.id,
               costCenter.code,
               costCenter.name,
               costCenter.status,
               costCenter.valid,
               costCenter.filter,
               costCenter.parent_id,
               costCenter.company_id
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="costCenterList" rowName="costCenter">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__costCenter_costCenter_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__costCenter_costCenter_company">
                <with-param column="company_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA TypeUser-->
    <query id="dynamicDistinctQuery_userData_typeUser" useConfig="default">
        <sql>
           SELECT DISTINCT
               typeUser.id,
               typeUser.parent_id,
               typeUser.code,
               typeUser.name,
               typeUser.type,
               typeUser.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="typeUserList" rowName="typeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__typeUser_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA TypeUser-->
    <query id="dynamicDistinctQuery_userData_typeUser" useConfig="default">
        <sql>
           SELECT DISTINCT
               subtypeUser.id,
               subtypeUser.parent_id,
               subtypeUser.code,
               subtypeUser.name,
               subtypeUser.type,
               subtypeUser.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="typeUserList" rowName="typeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__subtypeUser_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA Catalog-->
    <query id="dynamicDistinctQuery_userData_catalog" useConfig="default">
        <sql>
           SELECT DISTINCT
               catalogIdentificationType.id,
               catalogIdentificationType.code,
               catalogIdentificationType.name,
               catalogIdentificationType.predetermined,
               catalogIdentificationType.ordinal,
               catalogIdentificationType.value_text,
               catalogIdentificationType.value_number,
               catalogIdentificationType.value_date,
               catalogIdentificationType.value_boolean,
               catalogIdentificationType.catalog_type_id,
               catalogIdentificationType.filter,
               catalogIdentificationType.valid
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="catalogList" rowName="catalog">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogIdentificationType_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY USERDATA GlobalProfile-->
    <query id="dynamicDistinctQuery_userData_globalProfile" useConfig="default">
        <sql>
           SELECT DISTINCT
               globalProfile.id,
               globalProfile.code,
               globalProfile.name,
               globalProfile.is_birth,
               globalProfile.is_birth_tcs,
               globalProfile.employee_code_owner,
               globalProfile.valid,
               globalProfile.associated_ticket_number,
               globalProfile.status,
               globalProfile.created_date,
               globalProfile.approval_date,
               globalProfile.employee_code_approval,
               globalProfile.observation,
               globalProfile.scope_rules_who,
               globalProfile.scope_rules_that,
               globalProfile.filter,
               globalProfile.catalog_position_owner_id
           FROM sch_centra_id.USERDATA userData WITH (NOLOCK) :innerjoinclause :whereclause ORDER BY :orderby</sql>
        <result element="globalProfileList" rowName="globalProfile">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="is_birth" name="isBirth" xsdType="xs:integer"/>
            <element column="is_birth_tcs" name="isBirthTcs" xsdType="xs:integer"/>
            <element column="employee_code_owner" name="employeeCodeOwner" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="associated_ticket_number" name="associatedTicketNumber" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="created_date" name="createdDate" xsdType="xs:dateTime"/>
            <element column="approval_date" name="approvalDate" xsdType="xs:dateTime"/>
            <element column="employee_code_approval" name="employeeCodeApproval" xsdType="xs:string"/>
            <element column="observation" name="observation" xsdType="xs:string"/>
            <element column="scope_rules_who" name="scopeRulesWho" xsdType="xs:string"/>
            <element column="scope_rules_that" name="scopeRulesThat" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner">
                <with-param column="catalog_position_owner_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT UserData -->
    <query id="insertQuery_userData" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.USERDATA(
               username,
               employee_first_surname,
               employee_second_surname,
               employee_first_name,
               employee_second_name,
               employee_complete_name,
               identification,
               company_id,
               catalog_division_id,
               catalog_area_id,
               catalog_department_id,
               catalog_position_id,
               grouping_code,
               subsidiary_code,
               subsidiary_name,
               cost_center_id,
               location_name,
               hierarchical_level,
               deposit_account_number,
               employee_income_date,
               employee_departure_date,
               employee_status,
               employee_code,
               type_user_id,
               subtype_user_id,
               registration_date,
               guid,
               type_event,
               data_date,
               uuid,
               provision_date,
               mobile,
               suspension_start_date,
               suspension_end_date,
               suspension_reason,
               suspension_type,
               validation_start_date,
               validation_end_date,
               ending_work_date,
               catalog_identification_type_id,
               global_profile_id,
               mail,
               effective_date,
               username_view,
               userdata_supervisor_id,
               userdata_responsible_user_id,
               userdata_bank_counterpart_id,
               worker_code,
               justification_elimination,
               justification_change_cost_center,
               justification_change_global_profile,
               filter,
               type_rotary,
               counter_generic_rotary,
               counter_generic_mail,
               EXPIRATION_DATE_USER,
               EXPIRATION_DATE_GLOBAL_PROFILE,
               GLOBAL_PROFILE_ORIGINAL_ID,
               ALIAS,
               OBSERVATION,
               JUSTIFICATION,
               DESCRIPTION,
               RESPONSIBLE_ADM,
               NO_TICKET,
               APPLICATION_ID,
               CATALOG_TECHNOLOGY_ID,
               CATALOG_ENVIRONMENT_ID,
               SERVER_NAME,
               SERVER_IP,
               DATABASE_NAME,
               VALID
        ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeFirstSurname" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeSecondSurname" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeFirstName" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeSecondName" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeCompleteName" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="identification" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="companyId" ordinal="8" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="catalogDivisionId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogAreaId" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogDepartmentId" ordinal="11" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogPositionId" ordinal="12" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="groupingCode" ordinal="13" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="subsidiaryCode" ordinal="14" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="subsidiaryName" ordinal="15" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="costCenterId" ordinal="16" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="locationName" ordinal="17" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="hierarchicalLevel" ordinal="18" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="depositAccountNumber" ordinal="19" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeIncomeDate" ordinal="20" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeDepartureDate" ordinal="21" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeStatus" ordinal="22" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeCode" ordinal="23" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="typeUserId" ordinal="24" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="subtypeUserId" ordinal="25" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="registrationDate" ordinal="26" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="guid" ordinal="27" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="typeEvent" ordinal="28" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="dataDate" ordinal="29" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="uuid" ordinal="30" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="provisionDate" ordinal="31" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="mobile" ordinal="32" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionStartDate" ordinal="33" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionEndDate" ordinal="34" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionReason" ordinal="35" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionType" ordinal="36" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="validationStartDate" ordinal="37" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="validationEndDate" ordinal="38" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="endingWorkDate" ordinal="39" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogIdentificationTypeId" ordinal="40" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileId" ordinal="41" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="mail" ordinal="42" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="effectiveDate" ordinal="43" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="usernameView" ordinal="44" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataSupervisorId" ordinal="45" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataResponsibleUserId" ordinal="46" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataBankCounterpartId" ordinal="47" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="workerCode" ordinal="48" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationElimination" ordinal="49" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationChangeCostCenter" ordinal="50" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationChangeGlobalProfile" ordinal="51" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="filter" ordinal="52" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="typeRotary" ordinal="53" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="counterGenericRotary" ordinal="54" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="counterGenericMail" ordinal="55" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="expirationDateUser" ordinal="56" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="expirationDateGlobalProfile" ordinal="57" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileOriginalId" ordinal="58" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="alias" ordinal="59" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="observation" ordinal="60" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justification" ordinal="61" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="description" ordinal="62" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="responsibleAdm" ordinal="63" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="noTicket" ordinal="64" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationId" ordinal="65" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogTechnologyId" ordinal="66" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogEnvironmentId" ordinal="67" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="serverName" ordinal="68" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="serverIp" ordinal="69" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="databaseName" ordinal="70" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="valid" ordinal="71" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
    </query>
    <!-- UPDATE UserData -->
    <query id="updateQuery_userData" useConfig="default">
        <sql>
           UPDATE sch_centra_id.USERDATA SET username=?, employee_first_surname=?, employee_second_surname=?, employee_first_name=?, employee_second_name=?, employee_complete_name=?, identification=?, company_id=?, catalog_division_id=?, catalog_area_id=?, catalog_department_id=?, catalog_position_id=?, grouping_code=?, subsidiary_code=?, subsidiary_name=?, cost_center_id=?, location_name=?, hierarchical_level=?, deposit_account_number=?, employee_income_date=?, employee_departure_date=?, employee_status=?, employee_code=?, type_user_id=?, subtype_user_id=?, registration_date=?, guid=?, type_event=?, data_date=?, uuid=?, provision_date=?, mobile=?, suspension_start_date=?, suspension_end_date=?, suspension_reason=?, suspension_type=?, validation_start_date=?, validation_end_date=?, ending_work_date=?, catalog_identification_type_id=?, global_profile_id=?, mail=?, effective_date=?, username_view=?, userdata_supervisor_id=?, userdata_responsible_user_id=?, userdata_bank_counterpart_id=?, worker_code=?, justification_elimination=?, justification_change_cost_center=?, justification_change_global_profile=?, filter=?, type_rotary=?, counter_generic_rotary=?, counter_generic_mail=?, EXPIRATION_DATE_USER=?, EXPIRATION_DATE_GLOBAL_PROFILE=?, GLOBAL_PROFILE_ORIGINAL_ID=?, ALIAS=?, OBSERVATION=?, MAILBOX=?, TIER=?,VALID=1,
                JUSTIFICATION=?,DESCRIPTION=?,RESPONSIBLE_ADM=?,NO_TICKET=?,APPLICATION_ID=?,CATALOG_TECHNOLOGY_ID=?,CATALOG_ENVIRONMENT_ID=?,SERVER_NAME=?,SERVER_IP=?,DATABASE_NAME=?
            WHERE id=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeFirstSurname" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeSecondSurname" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeFirstName" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeSecondName" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeCompleteName" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="identification" ordinal="7" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="companyId" ordinal="8" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="catalogDivisionId" ordinal="9" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogAreaId" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogDepartmentId" ordinal="11" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogPositionId" ordinal="12" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="groupingCode" ordinal="13" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="subsidiaryCode" ordinal="14" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="subsidiaryName" ordinal="15" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="costCenterId" ordinal="16" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="locationName" ordinal="17" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="hierarchicalLevel" ordinal="18" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="depositAccountNumber" ordinal="19" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeIncomeDate" ordinal="20" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeDepartureDate" ordinal="21" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeStatus" ordinal="22" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="employeeCode" ordinal="23" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="typeUserId" ordinal="24" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="subtypeUserId" ordinal="25" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="registrationDate" ordinal="26" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="guid" ordinal="27" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="typeEvent" ordinal="28" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="dataDate" ordinal="29" paramType="SCALAR" sqlType="TIMESTAMP" type="IN"/>
        <param name="uuid" ordinal="30" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="provisionDate" ordinal="31" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="mobile" ordinal="32" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionStartDate" ordinal="33" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionEndDate" ordinal="34" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionReason" ordinal="35" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="suspensionType" ordinal="36" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="validationStartDate" ordinal="37" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="validationEndDate" ordinal="38" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="endingWorkDate" ordinal="39" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogIdentificationTypeId" ordinal="40" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileId" ordinal="41" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="mail" ordinal="42" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="effectiveDate" ordinal="43" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="usernameView" ordinal="44" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataSupervisorId" ordinal="45" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataResponsibleUserId" ordinal="46" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="userdataBankCounterpartId" ordinal="47" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="workerCode" ordinal="48" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationElimination" ordinal="49" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationChangeCostCenter" ordinal="50" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justificationChangeGlobalProfile" ordinal="51" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="filter" ordinal="52" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="typeRotary" ordinal="53" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="counterGenericRotary" ordinal="54" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="counterGenericMail" ordinal="55" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="expirationDateUser" ordinal="56" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="expirationDateGlobalProfile" ordinal="57" paramType="SCALAR" sqlType="TIMESTAMP" type="IN" defaultValue="#{NULL}"/>
        <param name="globalProfileOriginalId" ordinal="58" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="alias" ordinal="59" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="observation" ordinal="60" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="mailbox" ordinal="61" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="tier" ordinal="62" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="justification" ordinal="63" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="description" ordinal="64" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="responsibleAdm" ordinal="65" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="noTicket" ordinal="66" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="applicationId" ordinal="67" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogTechnologyId" ordinal="68" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="catalogEnvironmentId" ordinal="69" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="#{NULL}"/>
        <param name="serverName" ordinal="70" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="serverIp" ordinal="71" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="databaseName" ordinal="72" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="id" ordinal="73" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- QUERY REFERENCE UserData Company 0-->
    <query id="queryReferenceById__userData_company" useConfig="default">
        <sql>
           SELECT 
               company.id,
               company.code,
               company.identifier,
               company.business_name,
               company.catalog_company_type_id,
               company.domain_name,
               company.status,
               company.logon,
               company.valid
           FROM sch_centra_id.COMPANIES company WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="company">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="identifier" name="identifier" xsdType="xs:string"/>
            <element column="business_name" name="businessName" xsdType="xs:string"/>
            <call-query href="queryReferenceById__company_company_catalogCompanyType">
                <with-param column="catalog_company_type_id" name="id"/>
            </call-query>
            <element column="domain_name" name="domainName" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="logon" name="logon" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 1-->
    <query id="queryReferenceById__company_company_catalogCompanyType" useConfig="default">
        <sql>
           SELECT 
               catalogCompanyType.id,
               catalogCompanyType.code,
               catalogCompanyType.name,
               catalogCompanyType.predetermined,
               catalogCompanyType.ordinal,
               catalogCompanyType.value_text,
               catalogCompanyType.value_number,
               catalogCompanyType.value_date,
               catalogCompanyType.value_boolean,
               catalogCompanyType.catalog_type_id,
               catalogCompanyType.filter,
               catalogCompanyType.valid
           FROM sch_centra_id.CATALOGS catalogCompanyType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogCompanyType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__company_catalogCompanyType_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 2-->
    <query id="queryReferenceById__company_catalogCompanyType_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 0-->
    <query id="queryReferenceById__userData_catalogDivision" useConfig="default">
        <sql>
           SELECT 
               catalogDivision.id,
               catalogDivision.code,
               catalogDivision.name,
               catalogDivision.predetermined,
               catalogDivision.ordinal,
               catalogDivision.value_text,
               catalogDivision.value_number,
               catalogDivision.value_date,
               catalogDivision.value_boolean,
               catalogDivision.catalog_type_id,
               catalogDivision.filter,
               catalogDivision.valid
           FROM sch_centra_id.CATALOGS catalogDivision WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogDivision">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogDivision_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 1-->
    <query id="queryReferenceById__catalogDivision_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 0-->
    <query id="queryReferenceById__userData_catalogArea" useConfig="default">
        <sql>
           SELECT 
               catalogArea.id,
               catalogArea.code,
               catalogArea.name,
               catalogArea.predetermined,
               catalogArea.ordinal,
               catalogArea.value_text,
               catalogArea.value_number,
               catalogArea.value_date,
               catalogArea.value_boolean,
               catalogArea.catalog_type_id,
               catalogArea.filter,
               catalogArea.valid
           FROM sch_centra_id.CATALOGS catalogArea WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogArea">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogArea_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 1-->
    <query id="queryReferenceById__catalogArea_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 0-->
    <query id="queryReferenceById__userData_catalogDepartment" useConfig="default">
        <sql>
           SELECT 
               catalogDepartment.id,
               catalogDepartment.code,
               catalogDepartment.name,
               catalogDepartment.predetermined,
               catalogDepartment.ordinal,
               catalogDepartment.value_text,
               catalogDepartment.value_number,
               catalogDepartment.value_date,
               catalogDepartment.value_boolean,
               catalogDepartment.catalog_type_id,
               catalogDepartment.filter,
               catalogDepartment.valid
           FROM sch_centra_id.CATALOGS catalogDepartment WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogDepartment">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogDepartment_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 1-->
    <query id="queryReferenceById__catalogDepartment_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 0-->
    <query id="queryReferenceById__userData_catalogPosition" useConfig="default">
        <sql>
           SELECT 
               catalogPosition.id,
               catalogPosition.code,
               catalogPosition.name,
               catalogPosition.predetermined,
               catalogPosition.ordinal,
               catalogPosition.value_text,
               catalogPosition.value_number,
               catalogPosition.value_date,
               catalogPosition.value_boolean,
               catalogPosition.catalog_type_id,
               catalogPosition.filter,
               catalogPosition.valid
           FROM sch_centra_id.CATALOGS catalogPosition WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogPosition">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogPosition_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog Technology-->
    <query id="queryReferenceById__userData_catalogTechnology" useConfig="default">
        <sql>
           SELECT 
               catalogPosition.id,
               catalogPosition.code,
               catalogPosition.name,
               catalogPosition.predetermined,
               catalogPosition.ordinal,
               catalogPosition.value_text,
               catalogPosition.value_number,
               catalogPosition.value_date,
               catalogPosition.value_boolean,
               catalogPosition.catalog_type_id,
               catalogPosition.filter,
               catalogPosition.valid
           FROM sch_centra_id.CATALOGS catalogPosition WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogTechnology">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogPosition_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>    
    <!-- QUERY REFERENCE UserData Catalog Environment-->
    <query id="queryReferenceById__userData_catalogEnvironment" useConfig="default">
        <sql>
           SELECT 
               catalogPosition.id,
               catalogPosition.code,
               catalogPosition.name,
               catalogPosition.predetermined,
               catalogPosition.ordinal,
               catalogPosition.value_text,
               catalogPosition.value_number,
               catalogPosition.value_date,
               catalogPosition.value_boolean,
               catalogPosition.catalog_type_id,
               catalogPosition.filter,
               catalogPosition.valid
           FROM sch_centra_id.CATALOGS catalogPosition WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogEnvironment">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogPosition_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>     
    <!-- QUERY REFERENCE UserData CatalogType 1-->
    <query id="queryReferenceById__catalogPosition_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CostCenter 0-->
    <query id="queryReferenceById__userData_costCenter" useConfig="default">
        <sql>
           SELECT 
               costCenter.id,
               costCenter.code,
               costCenter.name,
               costCenter.status,
               costCenter.valid,
               costCenter.filter,
               costCenter.parent_id,
               costCenter.company_id
           FROM sch_centra_id.COSTS_CENTERS costCenter WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="costCenter">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__costCenter_costCenter_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__costCenter_costCenter_company">
                <with-param column="company_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CostCenter 1-->
    <query id="queryReferenceById__costCenter_costCenter_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.status,
               parent.valid,
               parent.filter,
               parent.parent_id,
               parent.company_id
           FROM sch_centra_id.COSTS_CENTERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__costCenter_parent_costCenter_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__costCenter_parent_costCenter_company">
                <with-param column="company_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CostCenter 2-->
    <query id="queryReferenceById__costCenter_parent_costCenter_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.status,
               parent.valid,
               parent.filter,
               parent.parent_id,
               parent.company_id
           FROM sch_centra_id.COSTS_CENTERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element name="parent">
                <element column="parent_id" name="id" xsdType="xs:integer"/>
            </element>
            <element name="company">
                <element column="company_id" name="id" xsdType="xs:integer"/>
            </element>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CostCenter 3-->
    <query id="queryReferenceById__costCenter_parent_parent_costCenter_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.status,
               parent.valid,
               parent.filter,
               parent.parent_id,
               parent.company_id
           FROM sch_centra_id.COSTS_CENTERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Company 3-->
    <query id="queryReferenceById__costCenter_parent_parent_costCenter_company" useConfig="default">
        <sql>
           SELECT 
               company.id,
               company.code,
               company.identifier,
               company.business_name,
               company.catalog_company_type_id,
               company.domain_name,
               company.status,
               company.logon,
               company.valid
           FROM sch_centra_id.COMPANIES company WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="company">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="identifier" name="identifier" xsdType="xs:string"/>
            <element column="business_name" name="businessName" xsdType="xs:string"/>
            <element column="domain_name" name="domainName" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="logon" name="logon" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Company 2-->
    <query id="queryReferenceById__costCenter_parent_costCenter_company" useConfig="default">
        <sql>
           SELECT 
               company.id,
               company.code,
               company.identifier,
               company.business_name,
               company.catalog_company_type_id,
               company.domain_name,
               company.status,
               company.logon,
               company.valid
           FROM sch_centra_id.COMPANIES company WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="company">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="identifier" name="identifier" xsdType="xs:string"/>
            <element column="business_name" name="businessName" xsdType="xs:string"/>
            <element name="catalogCompanyType">
                <element column="catalog_company_type_id" name="id" xsdType="xs:integer"/>
            </element>
            <element column="domain_name" name="domainName" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="logon" name="logon" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 3-->
    <query id="queryReferenceById__costCenter_parent_company_company_catalogCompanyType" useConfig="default">
        <sql>
           SELECT 
               catalogCompanyType.id,
               catalogCompanyType.code,
               catalogCompanyType.name,
               catalogCompanyType.predetermined,
               catalogCompanyType.ordinal,
               catalogCompanyType.value_text,
               catalogCompanyType.value_number,
               catalogCompanyType.value_date,
               catalogCompanyType.value_boolean,
               catalogCompanyType.catalog_type_id,
               catalogCompanyType.filter,
               catalogCompanyType.valid
           FROM sch_centra_id.CATALOGS catalogCompanyType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogCompanyType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Company 1-->
    <query id="queryReferenceById__costCenter_costCenter_company" useConfig="default">
        <sql>
           SELECT 
               company.id,
               company.code,
               company.identifier,
               company.business_name,
               company.catalog_company_type_id,
               company.domain_name,
               company.status,
               company.logon,
               company.valid
           FROM sch_centra_id.COMPANIES company WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="company">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="identifier" name="identifier" xsdType="xs:string"/>
            <element column="business_name" name="businessName" xsdType="xs:string"/>
            <call-query href="queryReferenceById__costCenter_company_company_catalogCompanyType">
                <with-param column="catalog_company_type_id" name="id"/>
            </call-query>
            <element column="domain_name" name="domainName" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="logon" name="logon" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 2-->
    <query id="queryReferenceById__costCenter_company_company_catalogCompanyType" useConfig="default">
        <sql>
           SELECT 
               catalogCompanyType.id,
               catalogCompanyType.code,
               catalogCompanyType.name,
               catalogCompanyType.predetermined,
               catalogCompanyType.ordinal,
               catalogCompanyType.value_text,
               catalogCompanyType.value_number,
               catalogCompanyType.value_date,
               catalogCompanyType.value_boolean,
               catalogCompanyType.catalog_type_id,
               catalogCompanyType.filter,
               catalogCompanyType.valid
           FROM sch_centra_id.CATALOGS catalogCompanyType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogCompanyType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <element name="catalogType">
                <element column="catalog_type_id" name="id" xsdType="xs:integer"/>
            </element>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 3-->
    <query id="queryReferenceById__costCenter_company_catalogCompanyType_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 0-->
    <query id="queryReferenceById__userData_typeUser" useConfig="default">
        <sql>
           SELECT 
               typeUser.id,
               typeUser.parent_id,
               typeUser.code,
               typeUser.name,
               typeUser.type,
               typeUser.valid
           FROM sch_centra_id.TYPE_USERS typeUser WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="typeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__typeUser_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 1-->
    <query id="queryReferenceById__typeUser_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__typeUser_parent_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 2-->
    <query id="queryReferenceById__typeUser_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element name="parent">
                <element column="parent_id" name="id" xsdType="xs:integer"/>
            </element>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 3-->
    <query id="queryReferenceById__typeUser_parent_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 0-->
    <query id="queryReferenceById__userData_subtypeUser" useConfig="default">
        <sql>
           SELECT 
               subtypeUser.id,
               subtypeUser.parent_id,
               subtypeUser.code,
               subtypeUser.name,
               subtypeUser.type,
               subtypeUser.valid
           FROM sch_centra_id.TYPE_USERS subtypeUser WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="subtypeUser">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__subtypeUser_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 1-->
    <query id="queryReferenceById__subtypeUser_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__subtypeUser_parent_typeUser_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 2-->
    <query id="queryReferenceById__subtypeUser_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element name="parent">
                <element column="parent_id" name="id" xsdType="xs:integer"/>
            </element>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData TypeUser 3-->
    <query id="queryReferenceById__subtypeUser_parent_parent_typeUser_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.parent_id,
               parent.code,
               parent.name,
               parent.type,
               parent.valid
           FROM sch_centra_id.TYPE_USERS parent WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application-->
    <query id="queryReferenceById__application" useConfig="default">
        <sql>
           SELECT 
               applications.id,
               applications.code,
               applications.name
           FROM sch_centra_id.APPLICATIONS applications WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="application">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 0-->
    <query id="queryReferenceById__userData_catalogIdentificationType" useConfig="default">
        <sql>
           SELECT 
               catalogIdentificationType.id,
               catalogIdentificationType.code,
               catalogIdentificationType.name,
               catalogIdentificationType.predetermined,
               catalogIdentificationType.ordinal,
               catalogIdentificationType.value_text,
               catalogIdentificationType.value_number,
               catalogIdentificationType.value_date,
               catalogIdentificationType.value_boolean,
               catalogIdentificationType.catalog_type_id,
               catalogIdentificationType.filter,
               catalogIdentificationType.valid
           FROM sch_centra_id.CATALOGS catalogIdentificationType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogIdentificationType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__catalogIdentificationType_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 1-->
    <query id="queryReferenceById__catalogIdentificationType_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData GlobalProfile 0-->
    <query id="queryReferenceById__userData_globalProfile" useConfig="default">
        <sql>
           SELECT 
               globalProfile.id,
               globalProfile.code,
               globalProfile.name,
               globalProfile.is_birth,
               globalProfile.is_birth_tcs,
               globalProfile.employee_code_owner,
               globalProfile.valid,
               globalProfile.associated_ticket_number,
               globalProfile.status,
               globalProfile.created_date,
               globalProfile.approval_date,
               globalProfile.employee_code_approval,
               globalProfile.observation,
               globalProfile.scope_rules_who,
               globalProfile.scope_rules_that,
               globalProfile.filter,
               globalProfile.catalog_position_owner_id
           FROM sch_centra_id.GLOBAL_PROFILES globalProfile WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="globalProfile">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="is_birth" name="isBirth" xsdType="xs:integer"/>
            <element column="is_birth_tcs" name="isBirthTcs" xsdType="xs:integer"/>
            <element column="employee_code_owner" name="employeeCodeOwner" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="associated_ticket_number" name="associatedTicketNumber" xsdType="xs:string"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="created_date" name="createdDate" xsdType="xs:dateTime"/>
            <element column="approval_date" name="approvalDate" xsdType="xs:dateTime"/>
            <element column="employee_code_approval" name="employeeCodeApproval" xsdType="xs:string"/>
            <element column="observation" name="observation" xsdType="xs:string"/>
            <element column="scope_rules_who" name="scopeRulesWho" xsdType="xs:string"/>
            <element column="scope_rules_that" name="scopeRulesThat" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <call-query href="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner">
                <with-param column="catalog_position_owner_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData Catalog 1-->
    <query id="queryReferenceById__globalProfile_globalProfile_catalogPositionOwner" useConfig="default">
        <sql>
           SELECT 
               catalogPositionOwner.id,
               catalogPositionOwner.code,
               catalogPositionOwner.name,
               catalogPositionOwner.predetermined,
               catalogPositionOwner.ordinal,
               catalogPositionOwner.value_text,
               catalogPositionOwner.value_number,
               catalogPositionOwner.value_date,
               catalogPositionOwner.value_boolean,
               catalogPositionOwner.catalog_type_id,
               catalogPositionOwner.filter,
               catalogPositionOwner.valid
           FROM sch_centra_id.CATALOGS catalogPositionOwner WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogPositionOwner">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:integer"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="value_text" name="valueText" xsdType="xs:string"/>
            <element column="value_number" name="valueNumber" xsdType="xs:decimal"/>
            <element column="value_date" name="valueDate" xsdType="xs:date"/>
            <element column="value_boolean" name="valueBoolean" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__globalProfile_catalogPositionOwner_catalog_catalogType">
                <with-param column="catalog_type_id" name="id"/>
            </call-query>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE UserData CatalogType 2-->
    <query id="queryReferenceById__globalProfile_catalogPositionOwner_catalog_catalogType" useConfig="default">
        <sql>
           SELECT 
               catalogType.id,
               catalogType.code,
               catalogType.name,
               catalogType.sort_type,
               catalogType.editable,
               catalogType.valid,
               catalogType.description
           FROM sch_centra_id.CATALOGS_TYPES catalogType WITH (NOLOCK) WHERE id=? AND valid=1</sql>
        <result element="catalogType">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="sort_type" name="sortType" xsdType="xs:string"/>
            <element column="editable" name="editable" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="description" name="description" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_userData" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table WITH (NOLOCK) :innerjoinclause :whereclause</sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_userData" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="userDataInfoProfileOperation">
        <call-query href="userDataInfoProfileQuery">
            <with-param name="username" query-param="username"/>
        </call-query>
    </operation>
    <operation name="userDataListOperation">
        <call-query href="userDataListQuery">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="size" query-param="size"/>
            <with-param name="from" query-param="from"/>
            <with-param name="orderby" query-param="orderby"/>
        </call-query>
    </operation>
    <operation name="userDataListCountOperation">
        <call-query href="userDataListCountQuery">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </operation>
    <operation name="listAllOperation_userData">
        <call-query href="dynamicQuery_userData">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_userData">
        <call-query href="dynamicQuery_userData">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_userData">
        <call-query href="dynamicQueryFunction_userData">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_userData">
        <call-query href="dynamicDeleteQuery_userData">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_userData">
        <call-query href="insertQuery_userData">
            <with-param name="username" query-param="username"/>
            <with-param name="employeeFirstSurname" query-param="employeeFirstSurname"/>
            <with-param name="employeeSecondSurname" query-param="employeeSecondSurname"/>
            <with-param name="employeeFirstName" query-param="employeeFirstName"/>
            <with-param name="employeeSecondName" query-param="employeeSecondName"/>
            <with-param name="employeeCompleteName" query-param="employeeCompleteName"/>
            <with-param name="identification" query-param="identification"/>
            <with-param name="companyId" query-param="companyId"/>
            <with-param name="catalogDivisionId" query-param="catalogDivisionId"/>
            <with-param name="catalogAreaId" query-param="catalogAreaId"/>
            <with-param name="catalogDepartmentId" query-param="catalogDepartmentId"/>
            <with-param name="catalogPositionId" query-param="catalogPositionId"/>
            <with-param name="groupingCode" query-param="groupingCode"/>
            <with-param name="subsidiaryCode" query-param="subsidiaryCode"/>
            <with-param name="subsidiaryName" query-param="subsidiaryName"/>
            <with-param name="costCenterId" query-param="costCenterId"/>
            <with-param name="locationName" query-param="locationName"/>
            <with-param name="hierarchicalLevel" query-param="hierarchicalLevel"/>
            <with-param name="depositAccountNumber" query-param="depositAccountNumber"/>
            <with-param name="employeeIncomeDate" query-param="employeeIncomeDate"/>
            <with-param name="employeeDepartureDate" query-param="employeeDepartureDate"/>
            <with-param name="employeeStatus" query-param="employeeStatus"/>
            <with-param name="employeeCode" query-param="employeeCode"/>
            <with-param name="typeUserId" query-param="typeUserId"/>
            <with-param name="subtypeUserId" query-param="subtypeUserId"/>
            <with-param name="registrationDate" query-param="registrationDate"/>
            <with-param name="guid" query-param="guid"/>
            <with-param name="typeEvent" query-param="typeEvent"/>
            <with-param name="dataDate" query-param="dataDate"/>
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="provisionDate" query-param="provisionDate"/>
            <with-param name="mobile" query-param="mobile"/>
            <with-param name="suspensionStartDate" query-param="suspensionStartDate"/>
            <with-param name="suspensionEndDate" query-param="suspensionEndDate"/>
            <with-param name="suspensionReason" query-param="suspensionReason"/>
            <with-param name="suspensionType" query-param="suspensionType"/>
            <with-param name="validationStartDate" query-param="validationStartDate"/>
            <with-param name="validationEndDate" query-param="validationEndDate"/>
            <with-param name="endingWorkDate" query-param="endingWorkDate"/>
            <with-param name="catalogIdentificationTypeId" query-param="catalogIdentificationTypeId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="mail" query-param="mail"/>
            <with-param name="effectiveDate" query-param="effectiveDate"/>
            <with-param name="usernameView" query-param="usernameView"/>
            <with-param name="userdataSupervisorId" query-param="userdataSupervisorId"/>
            <with-param name="userdataResponsibleUserId" query-param="userdataResponsibleUserId"/>
            <with-param name="userdataBankCounterpartId" query-param="userdataBankCounterpartId"/>
            <with-param name="workerCode" query-param="workerCode"/>
            <with-param name="justificationElimination" query-param="justificationElimination"/>
            <with-param name="justificationChangeCostCenter" query-param="justificationChangeCostCenter"/>
            <with-param name="justificationChangeGlobalProfile" query-param="justificationChangeGlobalProfile"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="typeRotary" query-param="typeRotary"/>
            <with-param name="counterGenericRotary" query-param="counterGenericRotary"/>
            <with-param name="counterGenericMail" query-param="counterGenericMail"/>
            <with-param name="expirationDateUser" query-param="expirationDateUser"/>
            <with-param name="expirationDateGlobalProfile" query-param="expirationDateGlobalProfile"/>
            <with-param name="globalProfileOriginalId" query-param="globalProfileOriginalId"/>
            <with-param name="alias" query-param="alias"/>
            <with-param name="observation" query-param="observation"/>
            <with-param name="justification" query-param="justification"/>
            <with-param name="description" query-param="description"/>
            <with-param name="responsibleAdm" query-param="responsibleAdm"/>
            <with-param name="noTicket" query-param="noTicket"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="catalogTechnologyId" query-param="catalogTechnologyId"/>
            <with-param name="catalogEnvironmentId" query-param="catalogEnvironmentId"/>
            <with-param name="serverName" query-param="serverName"/>
            <with-param name="serverIp" query-param="serverIp"/>
            <with-param name="databaseName" query-param="databaseName"/>
            <with-param name="valid" query-param="valid"/>
        </call-query>
    </operation>
    <operation name="update_userData">
        <call-query href="updateQuery_userData">
            <with-param name="username" query-param="username"/>
            <with-param name="employeeFirstSurname" query-param="employeeFirstSurname"/>
            <with-param name="employeeSecondSurname" query-param="employeeSecondSurname"/>
            <with-param name="employeeFirstName" query-param="employeeFirstName"/>
            <with-param name="employeeSecondName" query-param="employeeSecondName"/>
            <with-param name="employeeCompleteName" query-param="employeeCompleteName"/>
            <with-param name="identification" query-param="identification"/>
            <with-param name="companyId" query-param="companyId"/>
            <with-param name="catalogDivisionId" query-param="catalogDivisionId"/>
            <with-param name="catalogAreaId" query-param="catalogAreaId"/>
            <with-param name="catalogDepartmentId" query-param="catalogDepartmentId"/>
            <with-param name="catalogPositionId" query-param="catalogPositionId"/>
            <with-param name="groupingCode" query-param="groupingCode"/>
            <with-param name="subsidiaryCode" query-param="subsidiaryCode"/>
            <with-param name="subsidiaryName" query-param="subsidiaryName"/>
            <with-param name="costCenterId" query-param="costCenterId"/>
            <with-param name="locationName" query-param="locationName"/>
            <with-param name="hierarchicalLevel" query-param="hierarchicalLevel"/>
            <with-param name="depositAccountNumber" query-param="depositAccountNumber"/>
            <with-param name="employeeIncomeDate" query-param="employeeIncomeDate"/>
            <with-param name="employeeDepartureDate" query-param="employeeDepartureDate"/>
            <with-param name="employeeStatus" query-param="employeeStatus"/>
            <with-param name="employeeCode" query-param="employeeCode"/>
            <with-param name="typeUserId" query-param="typeUserId"/>
            <with-param name="subtypeUserId" query-param="subtypeUserId"/>
            <with-param name="registrationDate" query-param="registrationDate"/>
            <with-param name="guid" query-param="guid"/>
            <with-param name="typeEvent" query-param="typeEvent"/>
            <with-param name="dataDate" query-param="dataDate"/>
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="provisionDate" query-param="provisionDate"/>
            <with-param name="mobile" query-param="mobile"/>
            <with-param name="suspensionStartDate" query-param="suspensionStartDate"/>
            <with-param name="suspensionEndDate" query-param="suspensionEndDate"/>
            <with-param name="suspensionReason" query-param="suspensionReason"/>
            <with-param name="suspensionType" query-param="suspensionType"/>
            <with-param name="validationStartDate" query-param="validationStartDate"/>
            <with-param name="validationEndDate" query-param="validationEndDate"/>
            <with-param name="endingWorkDate" query-param="endingWorkDate"/>
            <with-param name="catalogIdentificationTypeId" query-param="catalogIdentificationTypeId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="mail" query-param="mail"/>
            <with-param name="effectiveDate" query-param="effectiveDate"/>
            <with-param name="usernameView" query-param="usernameView"/>
            <with-param name="userdataSupervisorId" query-param="userdataSupervisorId"/>
            <with-param name="userdataResponsibleUserId" query-param="userdataResponsibleUserId"/>
            <with-param name="userdataBankCounterpartId" query-param="userdataBankCounterpartId"/>
            <with-param name="workerCode" query-param="workerCode"/>
            <with-param name="justificationElimination" query-param="justificationElimination"/>
            <with-param name="justificationChangeCostCenter" query-param="justificationChangeCostCenter"/>
            <with-param name="justificationChangeGlobalProfile" query-param="justificationChangeGlobalProfile"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="typeRotary" query-param="typeRotary"/>
            <with-param name="counterGenericRotary" query-param="counterGenericRotary"/>
            <with-param name="counterGenericMail" query-param="counterGenericMail"/>
            <with-param name="expirationDateUser" query-param="expirationDateUser"/>
            <with-param name="expirationDateGlobalProfile" query-param="expirationDateGlobalProfile"/>
            <with-param name="globalProfileOriginalId" query-param="globalProfileOriginalId"/>
            <with-param name="alias" query-param="alias"/>
            <with-param name="observation" query-param="observation"/>
            <with-param name="mailbox" query-param="mailbox"/>
            <with-param name="tier" query-param="tier"/>
            <with-param name="justification" query-param="justification"/>
            <with-param name="description" query-param="description"/>
            <with-param name="responsibleAdm" query-param="responsibleAdm"/>
            <with-param name="noTicket" query-param="noTicket"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="catalogTechnologyId" query-param="catalogTechnologyId"/>
            <with-param name="catalogEnvironmentId" query-param="catalogEnvironmentId"/>
            <with-param name="serverName" query-param="serverName"/>
            <with-param name="serverIp" query-param="serverIp"/>
            <with-param name="databaseName" query-param="databaseName"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_company">
        <call-query href="dynamicDistinctQuery_userData_company">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_catalogDivision">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_catalogArea">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_catalogDepartment">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_catalogPosition">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_costCenter">
        <call-query href="dynamicDistinctQuery_userData_costCenter">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_typeUser">
        <call-query href="dynamicDistinctQuery_userData_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_subtypeUser">
        <call-query href="dynamicDistinctQuery_userData_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_catalogIdentificationType">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_userData_globalProfile">
        <call-query href="dynamicDistinctQuery_userData_globalProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetUserDataInfoProfile">
        <call-query href="userDataInfoProfileQuery">
            <with-param name="username" query-param="username"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetUserDataList">
        <call-query href="userDataListQuery">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="size" query-param="size"/>
            <with-param name="from" query-param="from"/>
            <with-param name="orderby" query-param="orderby"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetUserDataListCount">
        <call-query href="userDataListCountQuery">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetAllUserData">
        <call-query href="dynamicQuery_userData">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToUserData">
        <call-query href="dynamicQuery_userData">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultUserData">
        <call-query href="dynamicQueryFunction_userData">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteUserData">
        <call-query href="dynamicDeleteQuery_userData">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateUserData">
        <call-query href="insertQuery_userData">
            <with-param name="username" query-param="username"/>
            <with-param name="employeeFirstSurname" query-param="employeeFirstSurname"/>
            <with-param name="employeeSecondSurname" query-param="employeeSecondSurname"/>
            <with-param name="employeeFirstName" query-param="employeeFirstName"/>
            <with-param name="employeeSecondName" query-param="employeeSecondName"/>
            <with-param name="employeeCompleteName" query-param="employeeCompleteName"/>
            <with-param name="identification" query-param="identification"/>
            <with-param name="companyId" query-param="companyId"/>
            <with-param name="catalogDivisionId" query-param="catalogDivisionId"/>
            <with-param name="catalogAreaId" query-param="catalogAreaId"/>
            <with-param name="catalogDepartmentId" query-param="catalogDepartmentId"/>
            <with-param name="catalogPositionId" query-param="catalogPositionId"/>
            <with-param name="groupingCode" query-param="groupingCode"/>
            <with-param name="subsidiaryCode" query-param="subsidiaryCode"/>
            <with-param name="subsidiaryName" query-param="subsidiaryName"/>
            <with-param name="costCenterId" query-param="costCenterId"/>
            <with-param name="locationName" query-param="locationName"/>
            <with-param name="hierarchicalLevel" query-param="hierarchicalLevel"/>
            <with-param name="depositAccountNumber" query-param="depositAccountNumber"/>
            <with-param name="employeeIncomeDate" query-param="employeeIncomeDate"/>
            <with-param name="employeeDepartureDate" query-param="employeeDepartureDate"/>
            <with-param name="employeeStatus" query-param="employeeStatus"/>
            <with-param name="employeeCode" query-param="employeeCode"/>
            <with-param name="typeUserId" query-param="typeUserId"/>
            <with-param name="subtypeUserId" query-param="subtypeUserId"/>
            <with-param name="registrationDate" query-param="registrationDate"/>
            <with-param name="guid" query-param="guid"/>
            <with-param name="typeEvent" query-param="typeEvent"/>
            <with-param name="dataDate" query-param="dataDate"/>
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="provisionDate" query-param="provisionDate"/>
            <with-param name="mobile" query-param="mobile"/>
            <with-param name="suspensionStartDate" query-param="suspensionStartDate"/>
            <with-param name="suspensionEndDate" query-param="suspensionEndDate"/>
            <with-param name="suspensionReason" query-param="suspensionReason"/>
            <with-param name="suspensionType" query-param="suspensionType"/>
            <with-param name="validationStartDate" query-param="validationStartDate"/>
            <with-param name="validationEndDate" query-param="validationEndDate"/>
            <with-param name="endingWorkDate" query-param="endingWorkDate"/>
            <with-param name="catalogIdentificationTypeId" query-param="catalogIdentificationTypeId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="mail" query-param="mail"/>
            <with-param name="effectiveDate" query-param="effectiveDate"/>
            <with-param name="usernameView" query-param="usernameView"/>
            <with-param name="userdataSupervisorId" query-param="userdataSupervisorId"/>
            <with-param name="userdataResponsibleUserId" query-param="userdataResponsibleUserId"/>
            <with-param name="userdataBankCounterpartId" query-param="userdataBankCounterpartId"/>
            <with-param name="workerCode" query-param="workerCode"/>
            <with-param name="justificationElimination" query-param="justificationElimination"/>
            <with-param name="justificationChangeCostCenter" query-param="justificationChangeCostCenter"/>
            <with-param name="justificationChangeGlobalProfile" query-param="justificationChangeGlobalProfile"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="typeRotary" query-param="typeRotary"/>
            <with-param name="counterGenericRotary" query-param="counterGenericRotary"/>
            <with-param name="counterGenericMail" query-param="counterGenericMail"/>
            <with-param name="valid" query-param="valid"/>
            <with-param name="expirationDateUser" query-param="expirationDateUser"/>
            <with-param name="expirationDateGlobalProfile" query-param="expirationDateGlobalProfile"/>
            <with-param name="globalProfileOriginalId" query-param="globalProfileOriginalId"/>
            <with-param name="alias" query-param="alias"/>
            <with-param name="observation" query-param="observation"/>
            <with-param name="justification" query-param="justification"/>
            <with-param name="description" query-param="description"/>
            <with-param name="responsibleAdm" query-param="responsibleAdm"/>
            <with-param name="noTicket" query-param="noTicket"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="catalogTechnologyId" query-param="catalogTechnologyId"/>
            <with-param name="catalogEnvironmentId" query-param="catalogEnvironmentId"/>
            <with-param name="serverName" query-param="serverName"/>
            <with-param name="serverIp" query-param="serverIp"/>
            <with-param name="databaseName" query-param="databaseName"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateUserData">
        <call-query href="updateQuery_userData">
            <with-param name="username" query-param="username"/>
            <with-param name="employeeFirstSurname" query-param="employeeFirstSurname"/>
            <with-param name="employeeSecondSurname" query-param="employeeSecondSurname"/>
            <with-param name="employeeFirstName" query-param="employeeFirstName"/>
            <with-param name="employeeSecondName" query-param="employeeSecondName"/>
            <with-param name="employeeCompleteName" query-param="employeeCompleteName"/>
            <with-param name="identification" query-param="identification"/>
            <with-param name="companyId" query-param="companyId"/>
            <with-param name="catalogDivisionId" query-param="catalogDivisionId"/>
            <with-param name="catalogAreaId" query-param="catalogAreaId"/>
            <with-param name="catalogDepartmentId" query-param="catalogDepartmentId"/>
            <with-param name="catalogPositionId" query-param="catalogPositionId"/>
            <with-param name="groupingCode" query-param="groupingCode"/>
            <with-param name="subsidiaryCode" query-param="subsidiaryCode"/>
            <with-param name="subsidiaryName" query-param="subsidiaryName"/>
            <with-param name="costCenterId" query-param="costCenterId"/>
            <with-param name="locationName" query-param="locationName"/>
            <with-param name="hierarchicalLevel" query-param="hierarchicalLevel"/>
            <with-param name="depositAccountNumber" query-param="depositAccountNumber"/>
            <with-param name="employeeIncomeDate" query-param="employeeIncomeDate"/>
            <with-param name="employeeDepartureDate" query-param="employeeDepartureDate"/>
            <with-param name="employeeStatus" query-param="employeeStatus"/>
            <with-param name="employeeCode" query-param="employeeCode"/>
            <with-param name="typeUserId" query-param="typeUserId"/>
            <with-param name="subtypeUserId" query-param="subtypeUserId"/>
            <with-param name="registrationDate" query-param="registrationDate"/>
            <with-param name="guid" query-param="guid"/>
            <with-param name="typeEvent" query-param="typeEvent"/>
            <with-param name="dataDate" query-param="dataDate"/>
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="provisionDate" query-param="provisionDate"/>
            <with-param name="mobile" query-param="mobile"/>
            <with-param name="suspensionStartDate" query-param="suspensionStartDate"/>
            <with-param name="suspensionEndDate" query-param="suspensionEndDate"/>
            <with-param name="suspensionReason" query-param="suspensionReason"/>
            <with-param name="suspensionType" query-param="suspensionType"/>
            <with-param name="validationStartDate" query-param="validationStartDate"/>
            <with-param name="validationEndDate" query-param="validationEndDate"/>
            <with-param name="endingWorkDate" query-param="endingWorkDate"/>
            <with-param name="catalogIdentificationTypeId" query-param="catalogIdentificationTypeId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="mail" query-param="mail"/>
            <with-param name="effectiveDate" query-param="effectiveDate"/>
            <with-param name="usernameView" query-param="usernameView"/>
            <with-param name="userdataSupervisorId" query-param="userdataSupervisorId"/>
            <with-param name="userdataResponsibleUserId" query-param="userdataResponsibleUserId"/>
            <with-param name="userdataBankCounterpartId" query-param="userdataBankCounterpartId"/>
            <with-param name="workerCode" query-param="workerCode"/>
            <with-param name="justificationElimination" query-param="justificationElimination"/>
            <with-param name="justificationChangeCostCenter" query-param="justificationChangeCostCenter"/>
            <with-param name="justificationChangeGlobalProfile" query-param="justificationChangeGlobalProfile"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="typeRotary" query-param="typeRotary"/>
            <with-param name="counterGenericRotary" query-param="counterGenericRotary"/>
            <with-param name="counterGenericMail" query-param="counterGenericMail"/>
            <with-param name="id" query-param="id"/>
            <with-param name="expirationDateUser" query-param="expirationDateUser"/>
            <with-param name="expirationDateGlobalProfile" query-param="expirationDateGlobalProfile"/>
            <with-param name="globalProfileOriginalId" query-param="globalProfileOriginalId"/>
            <with-param name="alias" query-param="alias"/>
            <with-param name="observation" query-param="observation"/>
            <with-param name="mailbox" query-param="mailbox"/>
            <with-param name="tier" query-param="tier"/>
            <with-param name="justification" query-param="justification"/>
            <with-param name="description" query-param="description"/>
            <with-param name="responsibleAdm" query-param="responsibleAdm"/>
            <with-param name="noTicket" query-param="noTicket"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="catalogTechnologyId" query-param="catalogTechnologyId"/>
            <with-param name="catalogEnvironmentId" query-param="catalogEnvironmentId"/>
            <with-param name="serverName" query-param="serverName"/>
            <with-param name="serverIp" query-param="serverIp"/>
            <with-param name="databaseName" query-param="databaseName"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCompany">
        <call-query href="dynamicDistinctQuery_userData_company">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCatalogDivision">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCatalogArea">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCatalogDepartment">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCatalogPosition">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCostCenter">
        <call-query href="dynamicDistinctQuery_userData_costCenter">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataTypeUser">
        <call-query href="dynamicDistinctQuery_userData_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataSubtypeUser">
        <call-query href="dynamicDistinctQuery_userData_typeUser">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataCatalogIdentificationType">
        <call-query href="dynamicDistinctQuery_userData_catalog">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctUserDataGlobalProfile">
        <call-query href="dynamicDistinctQuery_userData_globalProfile">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetUserDataGlobalProfileResponsibles">
        <call-query href="userDataGlobalProfileResponsibles_Query"></call-query>
    </resource>
    <resource method="POST" path="create_rpa_user_provisioning">
        <call-query href="create_rpa_user_provisioning_query">
            <with-param name="origen" query-param="origen"/>
            <with-param name="username" query-param="username"/>
            <with-param name="identificacion" query-param="identificacion"/>
            <with-param name="apellidos" query-param="apellidos"/>
            <with-param name="nombres" query-param="nombres"/>
            <with-param name="cod_centro_costo" query-param="cod_centro_costo"/>
            <with-param name="nom_centro_costo" query-param="nom_centro_costo"/>
            <with-param name="cod_compania" query-param="cod_compania"/>
            <with-param name="nom_compania" query-param="nom_compania"/>
            <with-param name="cod_perfil_global" query-param="cod_perfil_global"/>
            <with-param name="nom_perfil_global" query-param="nom_perfil_global"/>
            <with-param name="celular" query-param="celular"/>
            <with-param name="cargo" query-param="cargo"/>
        </call-query>
    </resource>
    <resource method="POST" path="create_rpa_user_provisioning_detail">
        <call-query href="create_rpa_user_provisioning_detail_query">
            <with-param name="guid" query-param="guid"/>
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="type_action" query-param="type_action"/>
            <with-param name="cod_application" query-param="cod_application"/>
            <with-param name="cod_perfil_transacctional" query-param="cod_perfil_transacctional"/>
        </call-query>
    </resource>
    <resource method="GET" path="list_rpa_user_provisioning_pending">
        <call-query href="list_rpa_user_provisioning_pending_query"></call-query>
    </resource>
    <resource method="PUT" path="start_rpa_user_provisioning">
        <call-query href="start_rpa_user_provisioning_query">
            <with-param name="guid" query-param="guid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="start_rpa_user_provisioning_task">
        <call-query href="start_rpa_user_provisioning_task_query">
            <with-param name="guid" query-param="guid"/>
        </call-query>
    </resource>
    <resource method="PUT" path="result_rpa_user_provisioning_task">
        <call-query href="result_rpa_user_provisioning_task_query">
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="status" query-param="status"/>
            <with-param name="ticket_number" query-param="ticket_number"/>
            <with-param name="ticket_content" query-param="ticket_content"/>
        </call-query>
    </resource>
    <resource method="PUT" path="result_rpa_user_provisioning">
        <call-query href="result_rpa_user_provisioning_query">
            <with-param name="guid" query-param="guid"/>
            <with-param name="estado" query-param="estado"/>
            <with-param name="error" query-param="error"/>
        </call-query>
    </resource>
    <resource method="PUT" path="result_rpa_application_provisioning">
        <call-query href="result_rpa_application_provisioning_query">
            <with-param name="uuid" query-param="uuid"/>
            <with-param name="estado" query-param="estado"/>
            <with-param name="error" query-param="error"/>
        </call-query>
    </resource>
    <resource method="GET" path="validate_uuid_rpa_user_provisioning">
        <call-query href="validate_uuid_rpa_user_provisioning_query">
            <with-param name="guid" query-param="guid"/>
            <with-param name="uuids" query-param="uuids"/>
        </call-query>
    </resource>
    <resource method="GET" path="select_rpa_provisioning">
        <call-query href="select_rpa_provisioning_query">
            <with-param name="uuid" query-param="uuid"/>
        </call-query>
    </resource>
    <resource method="POST" path="create_ticket">
        <call-query href="create_ticket_query">
            <with-param name="uuids" query-param="uuids"/>
            <with-param name="username" query-param="username"/>
            <with-param name="endpoint" query-param="endpoint"/>
            <with-param name="payload" query-param="payload"/>
            <with-param name="description" query-param="description"/>
        </call-query>
    </resource>
    <resource method="PUT" path="update_ticket_ok">
        <call-query href="update_ticket_ok_query">
            <with-param name="guid" query-param="guid"/>
        </call-query>
    </resource>
    <resource method="POST" path="create_ticket_history">
        <call-query href="create_ticket_history_query">
            <with-param name="guid" query-param="guid"/>
            <with-param name="response" query-param="response"/>
            <with-param name="http_response" query-param="http_response"/>
        </call-query>
    </resource>
    <resource method="GET" path="select_ticket">
        <call-query href="select_ticket_query"/>
    </resource>
    <resource method="GET" path="select_user_for_service_now">
        <call-query href="select_user_for_service_now_query">
            <with-param name="username" query-param="username"/>
        </call-query>
    </resource>
</data>
