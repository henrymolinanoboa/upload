<data name="application.application.ds" serviceNamespace="centra-id.com" enableBatchRequests="false" enableBoxcarring="false" transports="https" disableLegacyBoxcarringMode="true">

    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>

    <!-- Lista excepciones tickets de incidencias -->
    <query id="application_list_exception_incident_query" useConfig="default">
        <sql>
            select a.ID,c.CODE APPLICATION_CODE,c.NAME APPLICATION_NAME,a.PHASE,a.EXCEPTION_MESSAGE,a.ACTIVE 
                from SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET a WITH (NOLOCK) 
                join SCH_CENTRA_ID.APPLICATIONS b WITH (NOLOCK)  on a.APPLICATION_ID=b.id
                join SCH_CENTRA_ID.APPLICATIONS_GROUP c WITH (NOLOCK) on b.APPLICATION_GROUP_ID=c.id
                WHERE a.valid=1             
        </sql>
        <result element="exceptions" rowName="exception">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
            <element column="PHASE" name="phase" xsdType="xs:string"/>
            <element column="EXCEPTION_MESSAGE" name="exceptionMessage" xsdType="xs:string"/>
            <element column="ACTIVE" name="active" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Recupera una excepcion especifica -->
    <query id="application_unique_exception_incident_query" useConfig="default">
        <sql>
            select a.ID,b.ID APPLICATION_ID,c.CODE APPLICATION_CODE,c.NAME APPLICATION_NAME,a.PHASE,a.EXCEPTION_MESSAGE,a.ACTIVE 
                from SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET a WITH (NOLOCK) 
                join SCH_CENTRA_ID.APPLICATIONS b WITH (NOLOCK) on a.APPLICATION_ID=b.id
                join SCH_CENTRA_ID.APPLICATIONS_GROUP c WITH (NOLOCK)  on b.APPLICATION_GROUP_ID=c.id
            WHERE a.valid=1 AND a.ID=:id
        </sql>
        <result element="exception">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="APPLICATION_ID" name="applicationId" xsdType="xs:integer"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
            <element column="PHASE" name="phase" xsdType="xs:string"/>
            <element column="EXCEPTION_MESSAGE" name="exceptionMessage" xsdType="xs:string"/>
            <element column="ACTIVE" name="active" xsdType="xs:integer"/>
        </result>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Verifica si el error se encuentra definido en alguna excepcion -->
    <query id="application_validate_exception_incident_query" useConfig="default">
        <sql>
            select COUNT(*) COUNT
                from SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET a WITH (NOLOCK) 
                join SCH_CENTRA_ID.APPLICATIONS b WITH (NOLOCK) on a.APPLICATION_ID=b.id
                join SCH_CENTRA_ID.APPLICATIONS_GROUP c WITH (NOLOCK) on b.APPLICATION_GROUP_ID=c.id
            WHERE a.valid=1 and a.active=1 and c.code=:code and a.PHASE=:phase AND 
             :error LIKE '%'+a.EXCEPTION_MESSAGE+'%'
        </sql>
        <result element="result">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
        <param name="code" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="phase" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="error" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>

    <!-- Realiza la creacion de una excepcion -->
    <query id="application_create_exception_incident_query" useConfig="default">
        <sql>
           INSERT INTO SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET
                    (
                        APPLICATION_ID,
                        EXCEPTION_MESSAGE,
                        PHASE,
                        ACTIVE,
                        VALID
                    )
                    VALUES
                    (
                        :applicationId,
                        :exceptionMessage,
                        :phase,
                        1,
                        1
                    )
        </sql>
        <param name="applicationId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="exceptionMessage" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="phase" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <!-- Realiza la actualizacion de una excepcion -->
    <query id="application_update_exception_incident_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET
            SET
                EXCEPTION_MESSAGE = :exceptionMessage,
                PHASE = :phase
            WHERE ID = :id

        </sql>
        <param name="exceptionMessage" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="phase" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Realiza la activacion / inactivacion de una excepcion -->
    <query id="application_activate_exception_incident_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET
            SET
                ACTIVE = :active
            WHERE ID = :id

        </sql>
        <param name="active" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Realiza la ELIMINACION de una excepcion -->
    <query id="application_delete_exception_incident_query" useConfig="default">
        <sql>
            UPDATE
                SCH_CENTRA_ID.EXCEPTIONS_INCIDENT_TICKET
            SET
                VALID = 0
            WHERE ID = :id

        </sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>



    <!-- DYNAMIC QUERY APPLICATION -->
    <query id="dynamicQuery_application" useConfig="default">
        <sql>
           SELECT
               application.id,
               application.code,
               application.name,
               application.automatic_provision,
               application.status,
               application.valid,
               application.application_group_id,
               application.mandatory_matrix,
               application.filter,
               application.parent_id,
               application.NAME_TICKET_HP
           FROM sch_centra_id.APPLICATIONS application :innerjoinclause :whereclause ORDER BY :orderby :fromto
        </sql>
        <result element="applicationList" rowName="application">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="NAME_TICKET_HP" name="nameTicketHp" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="mandatory_matrix" name="mandatoryMatrix" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="filter" name="filter" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__application_applicationGroup">
                <with-param column="application_group_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__application_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="fromto" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY APPLICATION ApplicationGroup-->
    <query id="dynamicDistinctQuery_application_applicationGroup" useConfig="default">
        <sql>
           SELECT DISTINCT
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket,
           FROM sch_centra_id.APPLICATIONS application :innerjoinclause :whereclause ORDER BY :orderby
        </sql>
        <result element="applicationGroupList" rowName="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
            <call-query href="queryOneToManyByMasterId__applicationGroup_applicationGroup_matrix">
                <with-param column="id" name="masterId"/>
            </call-query>
            <call-query href="queryOneToManyByMasterId__applicationGroup_applicationGroup_field">
                <with-param column="id" name="masterId"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DISTINCT QUERY APPLICATION Application-->
    <query id="dynamicDistinctQuery_application_application" useConfig="default">
        <sql>
           SELECT DISTINCT
               parent.id,
               parent.code,
               parent.name,
               parent.automatic_provision,
               parent.status,
               parent.valid,
               parent.application_group_id,
               parent.parent_id
           FROM sch_centra_id.APPLICATIONS application :innerjoinclause :whereclause ORDER BY :orderby
        </sql>
        <result element="applicationList" rowName="application">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_application_applicationGroup">
                <with-param column="application_group_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__parent_application_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
        </result>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param defaultValue="id" name="orderby" sqlType="QUERY_STRING"/>
        <param defaultValue="" name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- INSERT Application -->
    <query id="insertQuery_application" returnGeneratedKeys="true" useConfig="default" keyColumns="1">
        <sql>
           INSERT INTO sch_centra_id.APPLICATIONS(
               code,
               name,
               automatic_provision,
               status,
               valid,
               application_group_id,
               parent_id,
               mandatory_matrix,
               NAME_TICKET_HP,
               filter
        ) VALUES(?,?,?,?,?,?,?,?,?,?)
        </sql>
        <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
            <element column="1" name="id" xsdType="xs:long"/>
        </result>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="automaticProvision" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="status" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="A"/>
        <param name="valid" ordinal="5" paramType="SCALAR" sqlType="INTEGER" type="IN" defaultValue="1"/>
        <param name="applicationGroupId" ordinal="6" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="parentId" ordinal="7" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="mandatoryMatrix" ordinal="8" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="nameTicketHp" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN"  defaultValue="#{NULL}"/>
        <param name="filter" ordinal="10" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <!-- UPDATE Application -->
    <query id="updateQuery_application" useConfig="default">
        <sql>
           UPDATE sch_centra_id.APPLICATIONS SET code=?, name=?, automatic_provision=?, status=?, application_group_id=?, parent_id=?, mandatory_matrix=?, filter=?,NAME_TICKET_HP=?
            WHERE id=?
        </sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="automaticProvision" ordinal="3" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="status" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="A"/>
        <param name="applicationGroupId" ordinal="5" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="parentId" ordinal="6" paramType="SCALAR" sqlType="BIGINT" type="IN" defaultValue="#{NULL}"/>
        <param name="mandatoryMatrix" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="filter" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="nameTicketHp" ordinal="9" paramType="SCALAR" sqlType="STRING" type="IN" defaultValue="#{NULL}"/>
        <param name="id" ordinal="10" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- QUERY REFERENCE Application ApplicationGroup 0-->
    <query id="queryReferenceById__application_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
            <call-query href="queryOneToManyByMasterId__applicationGroup_applicationGroup_matrix">
                <with-param column="id" name="masterId"/>
            </call-query>
            <call-query href="queryOneToManyByMasterId__applicationGroup_applicationGroup_field">
                <with-param column="id" name="masterId"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Matrix 1-->
    <query id="queryOneToManyByMasterId__applicationGroup_applicationGroup_matrix" useConfig="default">
        <sql>
           SELECT 
               matrixList.id,
               matrixList.code,
               matrixList.name,
               matrixList.quantity,
               matrixList.valid,
               matrixList.application_group_id
           FROM sch_centra_id.MATRICES matrixList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="matrixList" rowName="matrix">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="quantity" name="quantity" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element name="applicationGroup">
                <element column="application_group_id" name="id" xsdType="xs:integer"/>
            </element>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY MANY TO ONE Application ApplicationGroup 2-->
    <query id="queryManyToOneById__applicationGroup_matrixList_matrix_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Matrix 3-->
    <query id="queryOneToManyByMasterId__applicationGroup_matrixList_applicationGroup_applicationGroup_matrix" useConfig="default">
        <sql>
           SELECT 
               matrixList.id,
               matrixList.code,
               matrixList.name,
               matrixList.quantity,
               matrixList.valid,
               matrixList.application_group_id
           FROM sch_centra_id.MATRICES matrixList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="matrixList" rowName="matrix">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="quantity" name="quantity" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Field 3-->
    <query id="queryOneToManyByMasterId__applicationGroup_matrixList_applicationGroup_applicationGroup_field" useConfig="default">
        <sql>
           SELECT 
               fieldList.id,
               fieldList.code,
               fieldList.name,
               fieldList.predetermined,
               fieldList.type,
               fieldList.length,
               fieldList.required,
               fieldList.valid,
               fieldList.application_group_id
           FROM sch_centra_id.FIELDS fieldList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="fieldList" rowName="field">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="length" name="length" xsdType="xs:integer"/>
            <element column="required" name="required" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Field 1-->
    <query id="queryOneToManyByMasterId__applicationGroup_applicationGroup_field" useConfig="default">
        <sql>
           SELECT 
               fieldList.id,
               fieldList.code,
               fieldList.name,
               fieldList.predetermined,
               fieldList.type,
               fieldList.length,
               fieldList.required,
               fieldList.valid,
               fieldList.application_group_id
           FROM sch_centra_id.FIELDS fieldList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="fieldList" rowName="field">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="length" name="length" xsdType="xs:integer"/>
            <element column="required" name="required" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element name="applicationGroup">
                <element column="application_group_id" name="id" xsdType="xs:integer"/>
            </element>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY MANY TO ONE Application ApplicationGroup 2-->
    <query id="queryManyToOneById__applicationGroup_fieldList_field_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Matrix 3-->
    <query id="queryOneToManyByMasterId__applicationGroup_fieldList_applicationGroup_applicationGroup_matrix" useConfig="default">
        <sql>
           SELECT 
               matrixList.id,
               matrixList.code,
               matrixList.name,
               matrixList.quantity,
               matrixList.valid,
               matrixList.application_group_id
           FROM sch_centra_id.MATRICES matrixList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="matrixList" rowName="matrix">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="quantity" name="quantity" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Field 3-->
    <query id="queryOneToManyByMasterId__applicationGroup_fieldList_applicationGroup_applicationGroup_field" useConfig="default">
        <sql>
           SELECT 
               fieldList.id,
               fieldList.code,
               fieldList.name,
               fieldList.predetermined,
               fieldList.type,
               fieldList.length,
               fieldList.required,
               fieldList.valid,
               fieldList.application_group_id
           FROM sch_centra_id.FIELDS fieldList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="fieldList" rowName="field">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="length" name="length" xsdType="xs:integer"/>
            <element column="required" name="required" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application Application 0-->
    <query id="queryReferenceById__application_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.automatic_provision,
               parent.status,
               parent.valid,
               parent.application_group_id,
               parent.parent_id,
               parent.mandatory_matrix
           FROM sch_centra_id.APPLICATIONS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="mandatory_matrix" name="mandatoryMatrix" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_application_applicationGroup">
                <with-param column="application_group_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__parent_application_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application ApplicationGroup 1-->
    <query id="queryReferenceById__parent_application_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Matrix 2-->
    <query id="queryOneToManyByMasterId__parent_applicationGroup_applicationGroup_matrix" useConfig="default">
        <sql>
           SELECT 
               matrixList.id,
               matrixList.code,
               matrixList.name,
               matrixList.quantity,
               matrixList.valid,
               matrixList.application_group_id
           FROM sch_centra_id.MATRICES matrixList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="matrixList" rowName="matrix">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="quantity" name="quantity" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY MANY TO ONE Application ApplicationGroup 3-->
    <query id="queryManyToOneById__parent_applicationGroup_matrixList_matrix_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Field 2-->
    <query id="queryOneToManyByMasterId__parent_applicationGroup_applicationGroup_field" useConfig="default">
        <sql>
           SELECT 
               fieldList.id,
               fieldList.code,
               fieldList.name,
               fieldList.predetermined,
               fieldList.type,
               fieldList.length,
               fieldList.required,
               fieldList.valid,
               fieldList.application_group_id
           FROM sch_centra_id.FIELDS fieldList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="fieldList" rowName="field">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="length" name="length" xsdType="xs:integer"/>
            <element column="required" name="required" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY MANY TO ONE Application ApplicationGroup 3-->
    <query id="queryManyToOneById__parent_applicationGroup_fieldList_field_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application Application 1-->
    <query id="queryReferenceById__parent_application_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.automatic_provision,
               parent.status,
               parent.valid,
               parent.application_group_id,
               parent.parent_id,
               parent.mandatory_matrix
           FROM sch_centra_id.APPLICATIONS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="mandatory_matrix" name="mandatoryMatrix" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <call-query href="queryReferenceById__parent_parent_application_applicationGroup">
                <with-param column="application_group_id" name="id"/>
            </call-query>
            <call-query href="queryReferenceById__parent_parent_application_parent">
                <with-param column="parent_id" name="id"/>
            </call-query>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application ApplicationGroup 2-->
    <query id="queryReferenceById__parent_parent_application_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Matrix 3-->
    <query id="queryOneToManyByMasterId__parent_parent_applicationGroup_applicationGroup_matrix" useConfig="default">
        <sql>
           SELECT 
               matrixList.id,
               matrixList.code,
               matrixList.name,
               matrixList.quantity,
               matrixList.valid,
               matrixList.application_group_id
           FROM sch_centra_id.MATRICES matrixList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="matrixList" rowName="matrix">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="quantity" name="quantity" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY ONE TO MANY Application Field 3-->
    <query id="queryOneToManyByMasterId__parent_parent_applicationGroup_applicationGroup_field" useConfig="default">
        <sql>
           SELECT 
               fieldList.id,
               fieldList.code,
               fieldList.name,
               fieldList.predetermined,
               fieldList.type,
               fieldList.length,
               fieldList.required,
               fieldList.valid,
               fieldList.application_group_id
           FROM sch_centra_id.FIELDS fieldList WHERE application_group_id=? AND valid=1
        </sql>
        <result element="fieldList" rowName="field">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="predetermined" name="predetermined" xsdType="xs:string"/>
            <element column="type" name="type" xsdType="xs:string"/>
            <element column="length" name="length" xsdType="xs:integer"/>
            <element column="required" name="required" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="masterId" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application Application 2-->
    <query id="queryReferenceById__parent_parent_application_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.automatic_provision,
               parent.status,
               parent.valid,
               parent.application_group_id,
               parent.parent_id,
               parent.mandatory_matrix
           FROM sch_centra_id.APPLICATIONS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="mandatory_matrix" name="mandatoryMatrix" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element name="applicationGroup">
                <element column="application_group_id" name="id" xsdType="xs:integer"/>
            </element>
            <element name="parent">
                <element column="parent_id" name="id" xsdType="xs:integer"/>
            </element>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application ApplicationGroup 3-->
    <query id="queryReferenceById__parent_parent_parent_application_applicationGroup" useConfig="default">
        <sql>
           SELECT 
               applicationGroup.id,
               applicationGroup.code,
               applicationGroup.name,
               applicationGroup.endpoint_type,
               applicationGroup.ordinal,
               applicationGroup.valid,
               applicationGroup.number_retries,
               applicationGroup.time_between_retries,
               applicationGroup.errors_not_require_ticket
           FROM sch_centra_id.APPLICATIONS_GROUP applicationGroup WHERE id=? AND valid=1
        </sql>
        <result element="applicationGroup">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="endpoint_type" name="endpointType" xsdType="xs:string"/>
            <element column="ordinal" name="ordinal" xsdType="xs:integer"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
            <element column="number_retries" name="numberRetries" xsdType="xs:integer"/>
            <element column="time_between_retries" name="timeBetweenRetries" xsdType="xs:integer"/>
            <element column="errors_not_require_ticket" name="errorsNotRequireTicket" xsdType="xs:string"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- QUERY REFERENCE Application Application 3-->
    <query id="queryReferenceById__parent_parent_parent_application_parent" useConfig="default">
        <sql>
           SELECT 
               parent.id,
               parent.code,
               parent.name,
               parent.automatic_provision,
               parent.status,
               parent.valid,
               parent.application_group_id,
               parent.parent_id
           FROM sch_centra_id.APPLICATIONS parent WHERE id=? AND valid=1
        </sql>
        <result element="parent">
            <element column="id" name="id" xsdType="xs:integer"/>
            <element column="code" name="code" xsdType="xs:string"/>
            <element column="name" name="name" xsdType="xs:string"/>
            <element column="automatic_provision" name="automaticProvision" xsdType="xs:integer"/>
            <element column="status" name="status" xsdType="xs:string"/>
            <element column="valid" name="valid" xsdType="xs:integer"/>
        </result>
        <param name="id" ordinal="1" sqlType="BIGINT"/>
    </query>
    <!-- DYNAMIC FUNCTION  -->
    <query id="dynamicQueryFunction_application" useConfig="default">
        <sql>
           SELECT :function(:field) as value FROM :table :innerjoinclause :whereclause
        </sql>
        <result element="result">
            <element column="value" name="value" xsdType="xs:long"/>
        </result>
        <param name="function" sqlType="QUERY_STRING"/>
        <param name="field" sqlType="QUERY_STRING"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="innerjoinclause" sqlType="QUERY_STRING"/>
    </query>
    <!-- DYNAMIC DELETE  -->
    <query id="dynamicDeleteQuery_application" useConfig="default">
        <sql>UPDATE :table SET :set WHERE id=:id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="table" sqlType="QUERY_STRING"/>
        <param name="set" sqlType="QUERY_STRING"/>
    </query>
    <!-- OPERATIONS -->
    <operation name="listAllOperation_application">
        <call-query href="dynamicQuery_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="fromToOperation_application">
        <call-query href="dynamicQuery_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="functionOperation_application">
        <call-query href="dynamicQueryFunction_application">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="deleteOperation_application">
        <call-query href="dynamicDeleteQuery_application">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </operation>
    <operation name="create_application">
        <call-query href="insertQuery_application">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="automaticProvision" query-param="automaticProvision"/>
            <with-param name="mandatoryMatrix" query-param="mandatoryMatrix"/>
            <with-param name="status" query-param="status"/>
            <with-param name="valid" query-param="valid"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="nameTicketHp" query-param="nameTicketHp"/>
        </call-query>
    </operation>
    <operation name="update_application">
        <call-query href="updateQuery_application">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="automaticProvision" query-param="automaticProvision"/>
            <with-param name="mandatoryMatrix" query-param="mandatoryMatrix"/>
            <with-param name="status" query-param="status"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="nameTicketHp" query-param="nameTicketHp"/>            
            <with-param name="id" query-param="id"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_application_applicationGroup">
        <call-query href="dynamicDistinctQuery_application_applicationGroup">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <operation name="distinctOperation_application_parent">
        <call-query href="dynamicDistinctQuery_application_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </operation>
    <!-- RESOURCES -->
    <resource method="GET" path="GetAllApplication">
        <call-query href="dynamicQuery_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFromToApplication">
        <call-query href="dynamicQuery_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetFunctionResultApplication">
        <call-query href="dynamicQueryFunction_application">
            <with-param name="function" query-param="function"/>
            <with-param name="field" query-param="field"/>
            <with-param name="table" query-param="table"/>
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteApplication">
        <call-query href="dynamicDeleteQuery_application">
            <with-param name="id" query-param="id"/>
            <with-param name="table" query-param="table"/>
            <with-param name="set" query-param="set"/>
        </call-query>
    </resource>
    <resource method="POST" path="CreateApplication">
        <call-query href="insertQuery_application">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="automaticProvision" query-param="automaticProvision"/>
            <with-param name="mandatoryMatrix" query-param="mandatoryMatrix"/>
            <with-param name="status" query-param="status"/>
            <with-param name="valid" query-param="valid"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="nameTicketHp" query-param="nameTicketHp"/>
            <with-param name="filter" query-param="filter"/>
        </call-query>
    </resource>
    <resource method="PUT" path="UpdateApplication">
        <call-query href="updateQuery_application">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="automaticProvision" query-param="automaticProvision"/>
            <with-param name="mandatoryMatrix" query-param="mandatoryMatrix"/>
            <with-param name="status" query-param="status"/>
            <with-param name="applicationGroupId" query-param="applicationGroupId"/>
            <with-param name="parentId" query-param="parentId"/>
            <with-param name="filter" query-param="filter"/>
            <with-param name="nameTicketHp" query-param="nameTicketHp"/>            
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctApplicationApplicationGroup">
        <call-query href="dynamicDistinctQuery_application_applicationGroup">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetDistinctApplicationParent">
        <call-query href="dynamicDistinctQuery_application_application">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="innerjoinclause" query-param="innerjoinclause"/>
        </call-query>
    </resource>

    <resource method="GET" path="GetListExceptionIncident">
        <call-query href="application_list_exception_incident_query">
        </call-query>
    </resource>
    <resource method="GET" path="GetUniqueExceptionIncident">
        <call-query href="application_unique_exception_incident_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
   <resource method="GET" path="GetValidateExceptionIncident">
        <call-query href="application_validate_exception_incident_query">
            <with-param name="code" query-param="code"/>
            <with-param name="phase" query-param="phase"/>
            <with-param name="error" query-param="error"/>
        </call-query>
    </resource>    
   <resource method="POST" path="PostCreateExceptionIncident">
        <call-query href="application_create_exception_incident_query">
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="exceptionMessage" query-param="exceptionMessage"/>
            <with-param name="phase" query-param="phase"/>
        </call-query>
    </resource> 
   <resource method="PUT" path="PutUpdateExceptionIncident">
        <call-query href="application_update_exception_incident_query">
            <with-param name="id" query-param="id"/>
            <with-param name="exceptionMessage" query-param="exceptionMessage"/>
            <with-param name="phase" query-param="phase"/>
        </call-query>
    </resource>         
   <resource method="PUT" path="PutActivateExceptionIncident">
        <call-query href="application_activate_exception_incident_query">
            <with-param name="id" query-param="id"/>
            <with-param name="active" query-param="active"/>
        </call-query>
    </resource> 
   <resource method="PUT" path="DeleteDeleteExceptionIncident">
        <call-query href="application_delete_exception_incident_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>       
</data>
