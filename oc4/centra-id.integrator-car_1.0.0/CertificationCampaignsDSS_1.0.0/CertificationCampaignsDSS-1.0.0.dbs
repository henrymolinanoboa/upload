<data name="CertificationCampaignsDSS" serviceNamespace="centra-id.com" transports="https" disableLegacyBoxcarringMode="true" enableBatchRequests="true" enableBoxcarring="true">
    <config id="default">
        <property name="carbon_datasource_name">CENTRA_ID</property>
    </config>
    <!-- QUERYS -->
    <!--Recupera una lista de campanas de certificacion, donde se recibel el codigo y/o estado de la campana, ordenado por fecha de inicio descendente -->
    <query id="certification_campaigns_list_query" useConfig="default">
        <sql>
            SELECT
                t1.ID,
                t1.CODE ,
                t1.DESCRIPTION,
                t1.MAIL_CONTACT,
                t1.DATE_OPEN,
                t1.DATE_CLOSE,
                t1.DATE_CREATE,
                t1.USER_CREATE,
                t1.DATE_REVIEW,
                t1.USER_REVIEW,
                t1.DATE_START,
                t1.USER_START,
                t1.DATE_FINISH,
                t1.USER_FINISH,
                t1.COUNT_USERS,
                t1.COUNT_RESPONSABLE,
                t1.COUNT_GLOBAL_PROFILE,
                t1.COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE,
                t1.COUNT_GLOBAL_PROFILE_CALCULATED,
                t1.COUNT_RESOURCES,
                t1.COUNT_RESOURCES_KEEP,
                t1.COUNT_RESOURCES_REMOVE,
                t1.COUNT_RESOURCES_TODO,
                t1.COUNT_USERS_TODO,
                t1.COUNT_USERS_KEEP,
                t1.COUNT_USERS_REMOVE,
                t1.COUNT_USERS_CHANGE,
                t1.STATUS,
                t1.CATALOG_CAMPAIGNS_TYPE_ID CAMPAIGNS_TYPE_ID,
                t2.CODE AS CAMPAIGNS_TYPE_CODE,
                t2.NAME AS CAMPAIGNS_TYPE_NAME,
                t1.VALID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK)
            JOIN SCH_CENTRA_ID.CATALOGS t2 WITH (NOLOCK) ON t1.CATALOG_CAMPAIGNS_TYPE_ID=t2.ID
            WHERE UPPER(t1.CODE) LIKE UPPER(?) AND t1.STATUS LIKE ? AND t2.CODE LIKE ? AND t1.VALID=1   
            ORDER BY t1.DATE_OPEN DESC</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\s\.,_%-]*$" />
        </param>
        <param name="status" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\s\.,_%-]*$" />
        </param>
        <param name="type" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\s\.,_%-]*$" />
        </param>
        <result element="CertificationCampaignsList" rowName="CertificationCampaigns">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="MAIL_CONTACT" name="mailContact" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:dateTime"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:dateTime"/>
            <element column="DATE_CREATE" name="dateCreate" xsdType="xs:dateTime"/>
            <element column="USER_CREATE" name="userCreate" xsdType="xs:string"/>
            <element column="DATE_START" name="dateStart" xsdType="xs:dateTime"/>
            <element column="USER_START" name="userStart" xsdType="xs:string"/>
            <element column="DATE_FINISH" name="dateFinish" xsdType="xs:dateTime"/>
            <element column="USER_FINISH" name="userFinish" xsdType="xs:string"/>
            <element column="COUNT_USERS" name="countUsers" xsdType="xs:integer"/>
            <element column="COUNT_RESPONSABLE" name="countResponsable" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE" name="countGlobalProfile" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE" name="countGlobalProfileWithoutResponsable" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE_CALCULATED" name="countGlobalProfileCalculated" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES" name="countResources" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_KEEP" name="countResourcesKeep" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_REMOVE" name="countResourcesRemove" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_TODO" name="countResourcesTodo" xsdType="xs:integer"/>
            <element column="COUNT_USERS_TODO" name="countUsersTodo" xsType="xs:integer"/>
            <element column="COUNT_USERS_KEEP" name="countUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_USERS_REMOVE" name="countUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_USERS_CHANGE" name="countUsersChange" xsdType="xs:integer"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="CAMPAIGNS_TYPE_ID" name="campaignsTypeId" xsdType="xs:long"/>
            <element column="CAMPAIGNS_TYPE_CODE" name="campaignsTypeCode" xsdType="xs:string"/>
            <element column="CAMPAIGNS_TYPE_NAME" name="campaignsTypeName" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Recupera un solo registro de una campana de certificacion dado su id-->
    <query id="certification_campaigns_query" useConfig="default">
        <sql>
            SELECT
                t1.ID,
                t1.CODE ,
                t1.DESCRIPTION,
                t1.MAIL_CONTACT,
                t1.DATE_OPEN,
                t1.DATE_CLOSE,
                t1.DATE_CREATE,
                t1.USER_CREATE,
                t1.DATE_REVIEW,
                t1.USER_REVIEW,
                t1.DATE_START,
                t1.USER_START,
                t1.DATE_FINISH,
                t1.USER_FINISH,
                t1.COUNT_USERS,
                t1.COUNT_RESPONSABLE,
                t1.COUNT_GLOBAL_PROFILE,
                t1.COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE,
                t1.COUNT_GLOBAL_PROFILE_CALCULATED,
                t1.COUNT_RESOURCES,
                t1.COUNT_RESOURCES_KEEP,
                t1.COUNT_RESOURCES_REMOVE,
                t1.COUNT_RESOURCES_TODO,
                t1.COUNT_USERS_TODO,
                t1.COUNT_USERS_KEEP,
                t1.COUNT_USERS_REMOVE,
                t1.COUNT_USERS_CHANGE,
                t1.STATUS,
                t1.CATALOG_CAMPAIGNS_TYPE_ID CAMPAIGNS_TYPE_ID,
                t2.CODE AS CAMPAIGNS_TYPE_CODE,
                t2.NAME AS CAMPAIGNS_TYPE_NAME,
                t1.VALID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.CATALOGS t2  WITH (NOLOCK) ON t1.CATALOG_CAMPAIGNS_TYPE_ID=t2.ID
            WHERE t1.ID=? AND t1.VALID=1</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <result element="CertificationCampaigns">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="MAIL_CONTACT" name="mailContact" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:dateTime"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:dateTime"/>
            <element column="DATE_CREATE" name="dateCreate" xsdType="xs:dateTime"/>
            <element column="USER_CREATE" name="userCreate" xsdType="xs:string"/>
            <element column="DATE_START" name="dateStart" xsdType="xs:dateTime"/>
            <element column="USER_START" name="userStart" xsdType="xs:string"/>
            <element column="DATE_FINISH" name="dateFinish" xsdType="xs:dateTime"/>
            <element column="USER_FINISH" name="userFinish" xsdType="xs:string"/>
            <element column="COUNT_USERS" name="countUsers" xsdType="xs:integer"/>
            <element column="COUNT_RESPONSABLE" name="countResponsable" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE" name="countGlobalProfile" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE" name="countGlobalProfileWithoutResponsable" xsdType="xs:integer"/>
            <element column="COUNT_GLOBAL_PROFILE_CALCULATED" name="countGlobalProfileCalculated" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES" name="countResources" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_KEEP" name="countResourcesKeep" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_REMOVE" name="countResourcesRemove" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_TODO" name="countResourcesTodo" xsdType="xs:integer"/>
            <element column="COUNT_USERS_TODO" name="countUsersTodo" xsType="xs:integer"/>
            <element column="COUNT_USERS_KEEP" name="countUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_USERS_REMOVE" name="countUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_USERS_CHANGE" name="countUsersChange" xsdType="xs:integer"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="CAMPAIGNS_TYPE_ID" name="campaignsTypeId" xsdType="xs:long"/>
            <element column="CAMPAIGNS_TYPE_CODE" name="campaignsTypeCode" xsdType="xs:string"/>
            <element column="CAMPAIGNS_TYPE_NAME" name="campaignsTypeName" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Realiza la creacion de los perfiles globales de una campana especifica, inicializa el estado, y valida que existan recursos sensibles y usuarios -->
    <query id="certification_campaigns_init_query" useConfig="default">
        <sql>
           INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES(
                GLOBAL_PROFILE_ID,
                CERTIFICATION_CAMPAIGNS_ID,
                COUNT_USERS,
                COUNT_RESOURCES,
                COUNT_RESOURCES_KEEP,
                COUNT_RESOURCES_REMOVE,
                COUNT_RESOURCES_TODO,
                COUNT_USERS_TODO,
                COUNT_USERS_KEEP,
                COUNT_USERS_REMOVE,
                COUNT_USERS_CHANGE,
                STATUS,
                VALID
                )
            SELECT DISTINCT t1.ID,:certificationCampaignsId,0,0,0,0,0,0,0,0,0,'INICIALIZADO',1
                FROM SCH_CENTRA_ID.GLOBAL_PROFILES T1 WITH (NOLOCK)
                JOIN SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES T2 WITH (NOLOCK) ON T1.ID = T2.GLOBAL_PROFILE_ID
                JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES T3 WITH (NOLOCK) ON T2.TRANSACTIONAL_PROFILE_ID=T3.ID
                WHERE T2.VALID=1 AND T1.VALID=1  
                AND EXISTS (SELECT u.* FROM SCH_CENTRA_ID.USERDATA u WITH (NOLOCK) WHERE u.EMPLOYEE_STATUS='ACTIVO' AND u.GLOBAL_PROFILE_ID=t1.ID)
                AND T3.CODE IN (
                SELECT DISTINCT t3.CODE
                FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES t1 WITH (NOLOCK)
                JOIN SCH_CENTRA_ID.RESOURCES t2 WITH (NOLOCK) on t1.RESOURCES_ID=t2.id
                JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES t3 WITH (NOLOCK) on t1.TRANSACTIONAL_PROFILE_ID=t3.id
                JOIN SCH_CENTRA_ID.APPLICATIONS t4 WITH (NOLOCK) on t3.application_id = t4.id
                WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId and t1.VALID=1 and t2.SENSITIVE=1
                )</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Realiza la creacion de los perfiles globales de una campana especifica de retroactivos-->
    <query id="certification_campaigns_retroactive_init_query" useConfig="default">
        <sql>
           INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES(
                    GLOBAL_PROFILE_ID,
                    CERTIFICATION_CAMPAIGNS_ID,
                    CERTIFICATION_CAMPAIGNS_RETROACTIVE_ID,
                    COUNT_USERS,
                    COUNT_RESOURCES,
                    COUNT_RESOURCES_KEEP,
                    COUNT_RESOURCES_REMOVE,
                    COUNT_RESOURCES_TODO,
                    COUNT_USERS_TODO,
                    COUNT_USERS_KEEP,
                    COUNT_USERS_REMOVE,
                    COUNT_USERS_CHANGE,
                    STATUS,
                    VALID
                )
                SELECT DISTINCT T1.GLOBAL_PROFILE_ID,:certificationCampaignsId,T1.CERTIFICATION_CAMPAIGNS_ID,0,0,0,0,0,0,0,0,0,'INICIALIZADO',1
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1 WITH (NOLOCK)
                JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES T2 WITH (NOLOCK) ON T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID = T1.ID
                JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T3 WITH (NOLOCK) ON T1.GLOBAL_PROFILE_ID = T3.ID
                WHERE 
                T1.CERTIFICATION_CAMPAIGNS_ID IN  
                (
                        SELECT CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID 
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RETROACTIVE 
                        WHERE VALID=1 AND CERTIFICATION_CAMPAIGNS_ID = :certificationCampaignsId
                ) AND 
                T2.STATUS = 'PENDIENTE' AND
                T3.STATUS = 'ACTIVO' AND
                T1.VALID=1 AND
                T2.VALID=1 AND
                T3.VALID = 1 AND 
                EXISTS 
                (
                    SELECT * 
                    FROM SCH_CENTRA_ID.USERDATA WITH (NOLOCK) 
                    WHERE EMPLOYEE_STATUS = 'ACTIVO' AND GLOBAL_PROFILE_ID = T1.GLOBAL_PROFILE_ID
                )</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Realiza la creacion usuarios externos una campana especifica, inicializa el estado -->
    <query id="certification_campaigns_external_users_init_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS
                (
                    USERDATA_RESPONSIBLE_ID,
                    USERDATA_ID,
                    CERTIFICATION_CAMPAIGNS_ID,
                    STATUS,
                    DATE_CALCULATE,
                    SEND_NOTIFICATION,
                    DATE_SEND_NOTIFICATION,
                    FILTER,
                    VALID
                )
                SELECT      DISTINCT
                            CASE T4.EMPLOYEE_STATUS WHEN 'ACTIVO' THEN  T4.ID ELSE NULL END RESPONSIBLE_ID,
                            T1.ID,
                            :certificationCampaignsId,
                            'PENDIENTE',
                            GETDATE(),
                            0,
                            NULL,
                            T1.USERNAME + ' ' + T1.IDENTIFICATION + ' ' + T1.EMPLOYEE_COMPLETE_NAME + ' ' + ISNULL(T4.USERNAME,'') + ' ' + ISNULL(T4.EMPLOYEE_COMPLETE_NAME,'') FILTER,
                            1
                FROM SCH_CENTRA_ID.USERDATA T1
                            JOIN SCH_CENTRA_ID.COMPANIES T2 ON T1.COMPANY_ID=T2.ID
                            JOIN SCH_CENTRA_ID.TYPE_USERS T3 ON T1.SUBTYPE_USER_ID=T3.ID
                            JOIN SCH_CENTRA_ID.TYPE_USERS T5 ON T1.TYPE_USER_ID=T5.ID
                            LEFT JOIN SCH_CENTRA_ID.USERDATA T4 ON T1.USERDATA_BANK_COUNTERPART_ID = T4.ID
                            WHERE T1.VALID=1 AND 
                            T1.EMPLOYEE_STATUS='ACTIVO' AND 
                            T3.CODE NOT IN ('EMP','FIL') AND
                            t5.CODE = 'PER'</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>    
    <!-- Elimina recursos sensibles de una campana de certificacion especifica-->
    <query id="certification_campaigns_resources_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES SET VALID=0
                WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID IN 
                (
                    SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES  WITH (NOLOCK) WHERE CERTIFICATION_CAMPAIGNS_ID IN
                    (
                        SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS  WITH (NOLOCK) WHERE ID = ? AND VALID=1
                    )
                )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Elimina recursos usuarios de una campana de certificacion especifica-->
    <query id="certification_campaigns_users_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS SET VALID=0
                WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID IN 
                (
                    SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES  WITH (NOLOCK) WHERE CERTIFICATION_CAMPAIGNS_ID IN
                    (
                        SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS  WITH (NOLOCK) WHERE ID = ? AND VALID=1
                    )
                )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Elimina recursos sensibles de un perfil global y campana especifica-->
    <query id="certification_campaigns_resources_delete_by_global_profile_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES SET VALID=0
                WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID IN 
                (
                    SELECT ID 
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES  WITH (NOLOCK) 
                    WHERE CERTIFICATION_CAMPAIGNS_ID=? AND GLOBAL_PROFILE_ID=?
                )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <param name="globalProfileId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!--Elimina perfiles globales de una campana de certificacion especifica-->
    <query id="certification_campaigns_global_profiles_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES SET VALID=0
                WHERE CERTIFICATION_CAMPAIGNS_ID IN
                (
                    SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS  WITH (NOLOCK) WHERE ID = ?
                )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!--Elimina usuarios externos de una campana de certificacion especifica-->
    <query id="certification_campaigns_external_users_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS SET VALID=0
                WHERE STATUS='PENDIENTE' AND CERTIFICATION_CAMPAIGNS_ID IN
                (
                    SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS  WITH (NOLOCK) WHERE ID = ?
                )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!--Lista los perfiles globales de una campana de certificacion especifica, soporta paginacion y filtros -->
    <query id="certification_campaigns_global_profile_list_query" useConfig="default">
        <sql>
            SELECT
                t1.ID,
                t1.USERDATA_RESPONSABLE_ID,
                t3.USERNAME USERDATA_RESPONSABLE_USERNAME,
                t3.IDENTIFICATION USERDATA_RESPONSABLE_IDENTIFICATION,
                t3.EMPLOYEE_COMPLETE_NAME USERDATA_RESPONSABLE_NAME,
                t1.CERTIFICATION_CAMPAIGNS_ID,
                t1.CERTIFICATION_CAMPAIGNS_RETROACTIVE_ID,
                t1.GLOBAL_PROFILE_ID,
                t2.CODE GLOBAL_PROFILE_CODE,
                t2.NAME GLOBAL_PROFILE_NAME,
                t4.NAME GLOBAL_PROFILE_POSITION,
                t1.COUNT_USERS,
                t1.COUNT_RESOURCES,
                t1.COUNT_RESOURCES_KEEP,
                t1.COUNT_RESOURCES_REMOVE,
                t1.COUNT_RESOURCES_TODO,
                t1.COUNT_USERS_TODO,
                t1.COUNT_USERS_KEEP,
                t1.COUNT_USERS_REMOVE,
                t1.COUNT_USERS_CHANGE,
                t1.STATUS,
                t1.DATE_CALCULATE,
                t1.SEND_NOTIFICATION,
                t1.DATE_SEND_NOTIFICATION,
                t1.CONTENT_NOTIFICATION,
                t1.VALID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.GLOBAL_PROFILE_ID=t2.ID
            LEFT JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t1.USERDATA_RESPONSABLE_ID = t3.ID
            JOIN SCH_CENTRA_ID.CATALOGS t4  WITH (NOLOCK) ON t2.CATALOG_POSITION_OWNER_ID=t4.ID
            WHERE :whereclause 
            ORDER BY :orderby 
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="orderby" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsGlobalProfileList" rowName="CertificationCampaignsGlobalProfile">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERDATA_RESPONSABLE_ID" name="userdataResponsableId" xsdType="xs:long"/>
            <element column="USERDATA_RESPONSABLE_USERNAME" name="userdataResponsableUsername" xsdType="xs:string"/>
            <element column="USERDATA_RESPONSABLE_IDENTIFICATION" name="userdataResponsableIdentification" xsdType="xs:string"/>
            <element column="USERDATA_RESPONSABLE_NAME" name="userdataResponsableName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_ID" name="certificationCampaignsId" xsdType="xs:long"/>
            <element column="CERTIFICATION_CAMPAIGNS_RETROACTIVE_ID" name="certificationCampaignsRetroactiveId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_ID" name="globalProfileId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_CODE" name="globalProfileCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_NAME" name="globalProfileName" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION" name="globalProfilePosition" xsdType="xs:string"/>
            <element column="COUNT_USERS" name="countUsers" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES" name="countResources" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_KEEP" name="countResourcesKeep" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_REMOVE" name="countResourcesRemove" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_TODO" name="countResourcesTodo" xsdType="xs:integer"/>
            <element column="COUNT_USERS_TODO" name="countUsersTodo" xsType="xs:integer"/>
            <element column="COUNT_USERS_KEEP" name="countUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_USERS_REMOVE" name="countUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_USERS_CHANGE" name="countUsersChange" xsdType="xs:integer"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Lista los usuarios externos de una campana de certificacion especifica, soporta paginacion y filtros -->
    <query id="certification_campaigns_external_users_list_query" useConfig="default">
        <sql>
    SELECT
                t1.ID ID,
                t2.ID USERDATA_ID,
                t2.USERNAME USERDATA_USERNAME,
                t2.IDENTIFICATION USERDATA_IDENTIFICATION, 
                t2.EMPLOYEE_COMPLETE_NAME USERDATA_NAMES,
                t4.BUSINESS_NAME USERDATA_COMPANY,
                t5.CODE USERDATA_TYPE,
                t6.CODE USERDATA_SUBTYPE,
                t7.CODE USERDATA_GLOBAL_PROFILE_CODE,
                t7.NAME USERDATA_GLOBAL_PROFILE_NAME,
                t2.EXPIRATION_DATE_USER USERDATA_EXPIRATION_DATE,
                t2.EMPLOYEE_STATUS USERDATA_STATUS,
                t3.USERNAME RESPONSIBLE_USERNAME,
                t3.IDENTIFICATION RESPONSIBLE_IDENTIFICATION, 
                t3.EMPLOYEE_COMPLETE_NAME RESPONSIBLE_NAMES,
                t1.STATUS,
                t1.COMMENT,
                CASE
                   WHEN t1.STATUS='MANTENER' THEN 1 ELSE 0
                END  KEEP,
                CASE
                   WHEN t1.STATUS='ELIMINAR' THEN 1 ELSE 0
                END  REMOVE,
                CASE
                   WHEN t1.STATUS='CAMBIAR' THEN 1 ELSE 0
                END  CHANGE,
                t8.CODE,
                t8.DESCRIPTION,
                t8.DATE_OPEN,
                t8.DATE_CLOSE,
                div.CODE DIVISION_CODE,
                div.NAME DIVISION_NAME,
                are.CODE AREA_CODE,
                are.NAME AREA_NAME,
                dto.CODE DEPARTAMENTO_CODE,
                dto.NAME DEPARTAMENTO_NAME,
                car.CODE CARGO_CODE,
                car.NAME CARGO_NAME                                                
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.USERDATA t2  WITH (NOLOCK) ON t1.USERDATA_ID = t2.ID
            LEFT JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t1.USERDATA_RESPONSIBLE_ID = t3.ID
            JOIN SCH_CENTRA_ID.COMPANIES t4  WITH (NOLOCK) ON t2.COMPANY_ID = t4.ID            
            JOIN SCH_CENTRA_ID.TYPE_USERS t5  WITH (NOLOCK) ON t2.TYPE_USER_ID = t5.ID            
            JOIN SCH_CENTRA_ID.TYPE_USERS t6  WITH (NOLOCK) ON t2.SUBTYPE_USER_ID = t6.ID    
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t7 WITH (NOLOCK) ON t2.GLOBAL_PROFILE_ID = t7.ID
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS  t8 ON t1.CERTIFICATION_CAMPAIGNS_ID = t8.ID  
            LEFT JOIN SCH_CENTRA_ID.CATALOGS div ON t2.CATALOG_DIVISION_ID = div.ID
            LEFT JOIN SCH_CENTRA_ID.CATALOGS are ON t2.CATALOG_AREA_ID = are.ID
            LEFT JOIN SCH_CENTRA_ID.CATALOGS dto ON t2.CATALOG_DEPARTMENT_ID = dto.ID
            LEFT JOIN SCH_CENTRA_ID.CATALOGS car ON t2.CATALOG_POSITION_ID = car.ID     
            WHERE :whereclause 
            ORDER BY :orderby 
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="orderby" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsExternalUserList" rowName="CertificationCampaignsExternalUser">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERDATA_ID" name="userdataId" xsdType="xs:long"/>
            <element column="USERDATA_USERNAME" name="userdataUsername" xsdType="xs:string"/>
            <element column="USERDATA_IDENTIFICATION" name="userdataIdentification" xsdType="xs:string"/>
            <element column="USERDATA_NAMES" name="userdataNames" xsdType="xs:string"/>
            <element column="USERDATA_COMPANY" name="userdataCompany" xsdType="xs:string"/>
            <element column="USERDATA_TYPE" name="userdataType" xsdType="xs:string"/>
            <element column="USERDATA_SUBTYPE" name="userdataSubtype" xsdType="xs:string"/>
            <element column="USERDATA_STATUS" name="userdataStatus" xsdType="xs:string"/>
            <element column="USERDATA_GLOBAL_PROFILE_CODE" name="userdataGlobalProfileCode" xsdType="xs:string"/>
            <element column="USERDATA_GLOBAL_PROFILE_NAME" name="userdataGlobalProfileName" xsdType="xs:string"/>
            <element column="USERDATA_EXPIRATION_DATE" name="userdataExpirationDate" xsdType="xs:datetime"/>
            <element column="RESPONSIBLE_USERNAME" name="responsibleUsername" xsdType="xs:string"/>
            <element column="RESPONSIBLE_IDENTIFICATION" name="responsibleIdentification" xsdType="xs:string"/>
            <element column="RESPONSIBLE_NAMES" name="responsibleNames" xsdType="xs:string"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="COMMENT" name="comment" xsdType="xs:string"/>
            <element column="KEEP" name="keep" xsdType="xs:integer"/>
            <element column="REMOVE" name="remove" xsdType="xs:integer"/>
            <element column="CHANGE" name="change" xsdType="xs:integer"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:dateTime"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:dateTime"/>
            <element column="DIVISION_CODE" name="divisionCode" xsdType="xs:string"/>
            <element column="DIVISION_NAME" name="divisionName" xsdType="xs:string"/>
            <element column="AREA_CODE" name="areaCode" xsdType="xs:string"/>
            <element column="AREA_NAME" name="areaName" xsdType="xs:string"/>
            <element column="DEPARTAMENTO_CODE" name="departamentoCode" xsdType="xs:string"/>
            <element column="DEPARTAMENTO_NAME" name="departamentoName" xsdType="xs:string"/>
            <element column="CARGO_CODE" name="cargoCode" xsdType="xs:string"/>
            <element column="CARGO_NAME" name="cargoName" xsdType="xs:string"/>
        </result>
    </query>    
    <!-- Recupera un perfil global de una campana de certificacion dado su id -->
    <query id="certification_campaigns_global_profile_by_id_query" useConfig="default">
        <sql>
            SELECT
                t1.ID,
                t1.USERDATA_RESPONSABLE_ID,
                t3.USERNAME USERDATA_RESPONSABLE_USERNAME,
                t3.IDENTIFICATION USERDATA_RESPONSABLE_IDENTIFICATION,
                t3.EMPLOYEE_COMPLETE_NAME USERDATA_RESPONSABLE_NAME,
                t1.CERTIFICATION_CAMPAIGNS_ID,
                t1.GLOBAL_PROFILE_ID,
                t2.CODE GLOBAL_PROFILE_CODE,
                t2.NAME GLOBAL_PROFILE_NAME,
                t4.NAME GLOBAL_PROFILE_POSITION,
                t1.COUNT_USERS,
                t1.COUNT_RESOURCES,
                t1.COUNT_RESOURCES_KEEP,
                t1.COUNT_RESOURCES_REMOVE,
                t1.COUNT_RESOURCES_TODO,
                t1.COUNT_USERS_TODO,
                t1.COUNT_USERS_KEEP,
                t1.COUNT_USERS_REMOVE,
                t1.COUNT_USERS_CHANGE,                
                t1.STATUS,
                t1.DATE_CALCULATE,
                t1.SEND_NOTIFICATION,
                t1.DATE_SEND_NOTIFICATION,
                t1.CONTENT_NOTIFICATION,
                t1.VALID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.GLOBAL_PROFILE_ID=t2.ID
            LEFT JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t1.USERDATA_RESPONSABLE_ID = t3.ID
            JOIN SCH_CENTRA_ID.CATALOGS t4  WITH (NOLOCK) ON t2.CATALOG_POSITION_OWNER_ID=t4.ID
            WHERE t1.ID = ? AND t1.VALID=1</sql>
        <param name="id" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <result element="CertificationCampaignsGlobalProfile">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERDATA_RESPONSABLE_ID" name="userdataResponsableId" xsdType="xs:long"/>
            <element column="USERDATA_RESPONSABLE_USERNAME" name="userdataResponsableUsername" xsdType="xs:string"/>
            <element column="USERDATA_RESPONSABLE_IDENTIFICATION" name="userdataResponsableIdentification" xsdType="xs:string"/>
            <element column="USERDATA_RESPONSABLE_NAME" name="userdataResponsableName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_ID" name="certificationCampaignsId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_ID" name="globalProfileId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_CODE" name="globalProfileCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_NAME" name="globalProfileName" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION" name="globalProfilePosition" xsdType="xs:string"/>
            <element column="COUNT_USERS" name="countUsers" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES" name="countResources" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_KEEP" name="countResourcesKeep" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_REMOVE" name="countResourcesRemove" xsdType="xs:integer"/>
            <element column="COUNT_RESOURCES_TODO" name="countResourcesTodo" xsdType="xs:integer"/>
            <element column="COUNT_USERS_TODO" name="countUsersTodo" xsType="xs:integer"/>
            <element column="COUNT_USERS_KEEP" name="countUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_USERS_REMOVE" name="countUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_USERS_CHANGE" name="countUsersChange" xsdType="xs:integer"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Cuenta los perfiles globales de una campana de certificacion especifica, soporta filtros -->
    <query id="certification_campaigns_global_profile_list_count_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.GLOBAL_PROFILE_ID=t2.ID
            LEFT JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t1.USERDATA_RESPONSABLE_ID = t3.ID
            JOIN SCH_CENTRA_ID.CATALOGS t4  WITH (NOLOCK) ON t2.CATALOG_POSITION_OWNER_ID=t4.ID
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsGlobalProfile">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Cuenta los usuarios externos de una campana de certificacion especifica, soporta filtros -->
    <query id="certification_campaigns_external_users_list_count_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.USERDATA t2 WITH (NOLOCK) ON T1.USERDATA_ID=T2.ID
            LEFT JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t1.USERDATA_RESPONSIBLE_ID = t3.ID
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsExternalUsers">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Actualiza el estado REVISION a la campana de certificacion-->
    <query id="certification_campaigns_status_review_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS 
                SET STATUS='REVISION',DATE_REVIEW=GETDATE(),USER_REVIEW=?
                WHERE ID = ? AND VALID=1</sql>
        <param name="user" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Actualiza el estado PUBLICADO a la campana de certificacion-->
    <query id="certification_campaigns_status_start_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS 
                SET STATUS='PUBLICADO',DATE_START=GETDATE(),USER_START=?
                WHERE ID = ? AND VALID=1</sql>
        <param name="user" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
    </query>
    <!-- Actualiza el estado FINALIZADO a la campana de certificacion-->
    <query id="certification_campaigns_status_finish_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS 
                SET STATUS='FINALIZADO',DATE_FINISH=GETDATE(),USER_FINISH=?
                WHERE ID = ? AND VALID=1</sql>
        <param name="user" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
    </query>
    <!-- Realiza la creacion de recursos  de un perfil global de una capana de certificacion-->
    <query id="certification_campaigns_calculate_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES
                (
                    CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                    APPLICATION_ID,
                    APPLICATION_CODE,
                    APPLICATION_NAME,
                    TRANSACTIONAL_PROFILE_ID,
                    TRANSACTIONAL_PROFILE_CODE,
                    TRANSACTIONAL_PROFILE_NAME,
                    RESOURCE_ID,
                    RESOURCE_CODE,
                    RESOURCE_NAME,
                    RESOURCE_DESCRIPTION,
                    STATUS,
                    VALID
                )
            SELECT DISTINCT
            (SELECT ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND GLOBAL_PROFILE_ID=:globalProfileId AND VALID=1) AS CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
            t4.ID APPLICATION_ID,
            t4.CODE APPLICATION_CODE,
            t4.NAME APPLICATION_NAME,
            t3.ID TRANSACTIONAL_PROFILE_ID,
            t3.CODE TRANSACTIONAL_PROFILE_CODE,
            t3.NAME TRANSACTIONAL_PROFILE_NAME,
            t2.ID RESOURCE_ID,
            t2.CODE RESOURCE_CODE,
            t2.NAME RESOURCE_NAME,
            t2.DESCRIPTION RESOURCE_DESCRIPTION,
            'PENDIENTE' STATUS,
            1 VALID 
            FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES t1 WITH (NOLOCK)
            JOIN SCH_CENTRA_ID.RESOURCES t2 WITH (NOLOCK) on t1.RESOURCES_ID=t2.id
            JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES t3 WITH (NOLOCK) on t1.TRANSACTIONAL_PROFILE_ID=t3.id
            JOIN SCH_CENTRA_ID.APPLICATIONS t4 WITH (NOLOCK) on t3.application_id = t4.id
            WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId and t1.VALID=1 and t2.SENSITIVE=1 AND T3.CODE IN (  
                SELECT T2.CODE
                FROM SCH_CENTRA_ID.GLOBAL_TRANSACTIONAL_PROFILES T1
                JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES T2 ON T1.TRANSACTIONAL_PROFILE_ID=T2.ID
                WHERE T1.VALID=1 AND T1.GLOBAL_PROFILE_ID=:globalProfileId
            )</sql>
        <param name="globalProfileId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Realiza la creacion de recursos  de un perfil global de una capana de certificacion retroactiva-->
    <query id="certification_campaigns_retroactive_calculate_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES
                (
                    CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                    APPLICATION_ID,
                    APPLICATION_CODE,
                    APPLICATION_NAME,
                    TRANSACTIONAL_PROFILE_ID,
                    TRANSACTIONAL_PROFILE_CODE,
                    TRANSACTIONAL_PROFILE_NAME,
                    RESOURCE_ID,
                    RESOURCE_CODE,
                    RESOURCE_NAME,
                    RESOURCE_DESCRIPTION,
                    STATUS,
                    VALID
                )
                SELECT DISTINCT
                    (SELECT TOP 1 ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND GLOBAL_PROFILE_ID=:globalProfileId AND VALID=1) AS CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID, 
                    t2.APPLICATION_ID, 
                    t2.APPLICATION_CODE, 
                    t2.APPLICATION_NAME, 
                    t2.TRANSACTIONAL_PROFILE_ID, 
                    t2.TRANSACTIONAL_PROFILE_CODE, 
                    t2.TRANSACTIONAL_PROFILE_NAME,
                    t2.RESOURCE_ID,
                    t2.RESOURCE_CODE,
                    t2.RESOURCE_NAME,
                    t2.RESOURCE_DESCRIPTION ,
                    'PENDIENTE' STATUS,
                    1 VALID 
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1
                JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES T2 ON T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID = T1.ID
                JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES T3 ON T3.ID = T2.TRANSACTIONAL_PROFILE_ID 
                WHERE 
                T1.GLOBAL_PROFILE_ID=:globalProfileId AND 
                T1.CERTIFICATION_CAMPAIGNS_ID = :certificationCampaignsRetroactiveId AND
                T2.STATUS='PENDIENTE' AND
                T1.VALID=1 AND
                T2.VALID=1</sql>
        <param name="globalProfileId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="certificationCampaignsRetroactiveId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Realiza la creacion de usuarios  de un perfil global de una capana de certificacion-->
    <query id="certification_campaigns_calculate_users_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS
                (
                    CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                    USERNAME,
                    IDENTIFICATION,
                    FULL_NAME,
                    USERDATA_ID,
                    COMPANY,
                    DIVISION,
                    AREA,
                    DEPARTMENT,
                    POSITION,
                    STATUS,
                    VALID,
                    FILTER
                )
            SELECT DISTINCT
            (SELECT TOP 1 ID FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND GLOBAL_PROFILE_ID=:globalProfileId AND VALID=1) AS CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
            USERNAME,
            IDENTIFICACION,
            NOMBRES_COMPLETOS,
            ID,
            CODIGO_COMPANIA + ' - ' + NOMBRE_COMPANIA COMPANY,
            CODIGO_DIVISION + ' - '+ NOMBRE_DIVISION DIVISION,
            CODIGO_AREA + ' - ' + NOMBRE_AREA AREA,
            CODIGO_DEPARTAMENTO + ' - ' + NOMBRE_DEPARTAMENTO DEPARTMENT,
            CODIGO_CARGO + ' - ' + NOMBRE_CARGO POSITION,
            'PENDIENTE',
            1,
            USERNAME + IDENTIFICACION + NOMBRES_COMPLETOS + CODIGO_COMPANIA + NOMBRE_COMPANIA + CODIGO_DIVISION + NOMBRE_DIVISION + CODIGO_AREA + NOMBRE_AREA + CODIGO_DEPARTAMENTO + NOMBRE_DEPARTAMENTO + CODIGO_CARGO + NOMBRE_CARGO FILTER 
            FROM SCH_CENTRA_ID.USERDATA_VW A
            WHERE ID_PERFIL_GLOBAL=:globalProfileId AND ESTADO_EMPLEADO='ACTIVO'</sql>
        <param name="globalProfileId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!--Inicializa los contadores del pefil global de una campana de certificacion -->
    <query id="certification_campaigns_global_profile_counter_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES 
            SET COUNT_RESOURCES=(SELECT COUNT(*) FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES ccr  WITH (NOLOCK) WHERE ccr.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=:certificationCampaignsGlobalProfileId AND ccr.VALID=1), COUNT_RESOURCES_TODO=(SELECT COUNT(*) FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  ccr  WITH (NOLOCK) WHERE ccr.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=:certificationCampaignsGlobalProfileId AND ccr.VALID=1),
                COUNT_USERS = (SELECT COUNT(*) FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS  ccu  WITH (NOLOCK) WHERE ccu.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=:certificationCampaignsGlobalProfileId AND ccu.VALID=1),           
                COUNT_USERS_TODO = (SELECT COUNT(*) FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS  ccu  WITH (NOLOCK) WHERE ccu.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=:certificationCampaignsGlobalProfileId AND ccu.VALID=1)
            WHERE ID=:certificationCampaignsGlobalProfileId</sql>
        <param name="certificationCampaignsGlobalProfileId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Lista los usuarios que tienen el mismo cargo de un perfil global-->
    <query id="certification_campaigns_select_responsable_query" useConfig="default">
        <sql>
            SELECT 
            t1.ID,
            t1.USERNAME,
            t1.IDENTIFICATION,
            t1.EMPLOYEE_COMPLETE_NAME + ' (' + t3.CODE + ')' EMPLOYEE_COMPLETE_NAME
            FROM SCH_CENTRA_ID.USERDATA t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.TYPE_USERS t2 WITH (NOLOCK) ON t1.TYPE_USER_ID=t2.ID
            JOIN SCH_CENTRA_ID.COMPANIES t3 WITH (NOLOCK) ON t1.COMPANY_ID=t3.ID
            WHERE t1.EMPLOYEE_STATUS='ACTIVO' AND t1.CATALOG_POSITION_ID IN (
               SELECT CATALOG_POSITION_OWNER_ID FROM SCH_CENTRA_ID.GLOBAL_PROFILES WITH (NOLOCK)  WHERE ID=?
            ) AND t2.CODE='PER'
            ORDER BY t1.EMPLOYEE_COMPLETE_NAME</sql>
        <param name="globalProfileId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="UserdataResponsableList" rowName="UserdataResponsable">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="employeeCompleteName" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que no se encuentra en estado SIN CERTIFICAR-->
    <query id="certification_campaigns_global_profile_uncertified_query" useConfig="default">
        <sql>
            SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t2.CERTIFICATION_CAMPAIGNS_ID=t1.ID
             WHERE t1.ID=? AND t2.VALID=1 AND t2.STATUS IN  ('INICIALIZADO','VARIOS RESPONSABLES','SIN RESPONSABLE')</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="GlobalProfileUnCertified">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que no tienen asignado un responsable-->
    <query id="certification_campaigns_global_profile_without_responsible_query" useConfig="default">
        <sql>
            SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t2.CERTIFICATION_CAMPAIGNS_ID=t1.ID
            where t1.ID=? AND t2.VALID=1 AND t2.USERDATA_RESPONSABLE_ID IS NULL</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="GlobalProfileWithoutResponsible">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que no tienen asignado recursos-->
    <query id="certification_campaigns_global_profile_without_resources_query" useConfig="default">
        <sql>
            SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t2.CERTIFICATION_CAMPAIGNS_ID=t1.ID
            where t1.ID=? AND t2.VALID=1  AND 
            NOT EXISTS (SELECT * FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES t3  WITH (NOLOCK) WHERE t3.VALID=1 AND t3.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="GlobalProfileWithoutResources">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que no tienen asignado usuarios-->
    <query id="certification_campaigns_global_profile_without_users_query" useConfig="default">
        <sql>
            SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t2.CERTIFICATION_CAMPAIGNS_ID=t1.ID
            where t1.ID=? AND t2.VALID=1  AND 
            NOT EXISTS (SELECT * FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS t3  WITH (NOLOCK) WHERE t3.VALID=1 AND t3.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID )</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="GlobalProfileWithoutUsers">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que tiene activo una campana-->
    <query id="certification_campaigns_have_global_profile_query" useConfig="default">
        <sql>
            SELECT COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES WITH (NOLOCK) 
            where VALID=1  AND CERTIFICATION_CAMPAIGNS_ID=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="HaveGlobalProfile">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Lista todos los perfiles globales de una campana de certificacion-->
    <query id="certification_campaigns_list_global_profile_query" useConfig="default">
        <sql>
           SELECT DISTINCT t2.ID, t2.CODE, t2.NAME
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.GLOBAL_PROFILE_ID = t2.ID
                WHERE t1.CERTIFICATION_CAMPAIGNS_ID=? AND t1.VALID =1
                ORDER BY t2.CODE</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <result element="GlobalProfileList" rowName="GlobalProfile">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Lista todos los perfiles globales de un responsable dentro de una campana de certificacion-->
    <query id="certification_campaigns_responsible_list_global_profile_query" useConfig="default">
        <sql>
           SELECT DISTINCT t2.ID, t2.CODE, t2.NAME
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                JOIN SCH_CENTRA_ID.GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.GLOBAL_PROFILE_ID = t2.ID
                JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t3.ID = t1.USERDATA_RESPONSABLE_ID
                WHERE t1.CERTIFICATION_CAMPAIGNS_ID=? AND t3.USERNAME=? AND t1.VALID =1
                ORDER BY t2.CODE</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="username" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <result element="GlobalProfileList" rowName="GlobalProfile">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Lista todos los responsables de una campana de certificacion-->
    <query id="certification_campaigns_list_responsible_query" useConfig="default">
        <sql>
            SELECT DISTINCT t2.ID, t2.USERNAME, t2.IDENTIFICATION, t2.EMPLOYEE_COMPLETE_NAME
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                JOIN SCH_CENTRA_ID.USERDATA t2  WITH (NOLOCK) ON t1.USERDATA_RESPONSABLE_ID=t2.ID
                WHERE t1.CERTIFICATION_CAMPAIGNS_ID=? AND t1.VALID =1
                ORDER BY t2.EMPLOYEE_COMPLETE_NAME</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>     
        <result element="ResponsibleList" rowName="Responsible">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los perfiles globales que tiene asigado un responsable dentro de una campana de certificacion-->
    <query id="certification_campaigns_responsible_count_global_profile_query" useConfig="default">
        <sql>
            SELECT COUNT(*) COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.USERDATA t2  WITH (NOLOCK) ON t1.USERDATA_RESPONSABLE_ID=t2.ID
            WHERE t1.VALID=1 AND t2.USERNAME=? AND t1.CERTIFICATION_CAMPAIGNS_ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>     
        <result element="GlobalProfiles">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los recursos por estado que tiene asignado un responsable dentro de una campana de certificacion-->
    <query id="certification_campaigns_responsible_count_resources_query" useConfig="default">
        <sql>
            SELECT SUM(TOTAL) TOTAL, SUM(t.KEEP) KEEP ,SUM(t.REMOVE) REMOVE,SUM(t.MISSING) MISSING
                FROM (           
                    SELECT 
                            1 TOTAL,
                            CASE
                                WHEN t1.STATUS='MANTENER' THEN 1 ELSE 0
                            END  KEEP,
                            CASE
                                WHEN t1.STATUS='ELIMINAR' THEN 1 ELSE 0
                            END  REMOVE,
                            CASE
                                WHEN t1.STATUS='PENDIENTE' THEN 1 ELSE 0
                            END  MISSING
                            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES t1 WITH (NOLOCK) 
                            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID
                            JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t2.USERDATA_RESPONSABLE_ID=t3.ID
                            WHERE t1.VALID=1 AND t2.VALID=1 AND t3.USERNAME=? AND t2.CERTIFICATION_CAMPAIGNS_ID=?
             ) t</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
        <result element="Resources">
            <element column="TOTAL" name="total" xsdType="xs:integer"/>
            <element column="KEEP" name="keep" xsdType="xs:integer"/>
            <element column="REMOVE" name="remove" xsdType="xs:integer"/>
            <element column="MISSING" name="missing" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Cuenta los usuarios por estado que tiene asignado un responsable dentro de una campana de certificacion-->
    <query id="certification_campaigns_responsible_count_users_query" useConfig="default">
        <sql>
            SELECT SUM(TOTAL) TOTAL, SUM(t.KEEP) KEEP ,SUM(t.REMOVE) REMOVE,SUM(t.CHANGE) CHANGE,SUM(t.MISSING) MISSING
                FROM (           
                    SELECT 
                            1 TOTAL,
                            CASE
                                WHEN t1.STATUS='MANTENER' THEN 1 ELSE 0
                            END  KEEP,
                            CASE
                                WHEN t1.STATUS='ELIMINAR' THEN 1 ELSE 0
                            END  REMOVE,
                            CASE
                                WHEN t1.STATUS='CAMBIAR' THEN 1 ELSE 0
                            END  CHANGE,
                            CASE
                                WHEN t1.STATUS='PENDIENTE' THEN 1 ELSE 0
                            END  MISSING
                            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS t1 WITH (NOLOCK) 
                            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID
                            JOIN SCH_CENTRA_ID.USERDATA t3  WITH (NOLOCK) ON t2.USERDATA_RESPONSABLE_ID=t3.ID
                            WHERE t1.VALID=1 AND t2.VALID=1 AND t3.USERNAME=? AND t2.CERTIFICATION_CAMPAIGNS_ID=?
             ) t</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
        <result element="Users">
            <element column="TOTAL" name="total" xsdType="xs:integer"/>
            <element column="KEEP" name="keep" xsdType="xs:integer"/>
            <element column="REMOVE" name="remove" xsdType="xs:integer"/>
            <element column="CHANGE" name="change" xsdType="xs:integer"/>
            <element column="MISSING" name="missing" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Lista los recursos sensibles de un perfil global, soporta paginacion y filtros -->
    <query id="certification_campaigns_resources_list_query" useConfig="default">
        <sql>
            SELECT 
                ID, 
                CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID, 
                APPLICATION_ID, 
                APPLICATION_CODE, 
                APPLICATION_NAME, 
                TRANSACTIONAL_PROFILE_ID, 
                TRANSACTIONAL_PROFILE_CODE, 
                TRANSACTIONAL_PROFILE_NAME, 
                RESOURCE_ID, 
                RESOURCE_CODE, 
                RESOURCE_NAME, 
                RESOURCE_DESCRIPTION, 
                DATE_KEEP, 
                USER_KEEP, 
                DATE_REMOVE, 
                USER_REMOVE, 
                STATUS, 
                COMMENTS, 
                VALID 
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  WITH (NOLOCK) 
            WHERE :whereclause 
            ORDER BY APPLICATION_CODE, TRANSACTIONAL_PROFILE_CODE, RESOURCE_CODE
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsResourceList" rowName="CertificationCampaignsResource">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID" name="certificationCampaignsGlobalProfilesId" xsdType="xs:long"/>
            <element column="APPLICATION_ID" name="applicationId" xsdType="xs:long"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_ID" name="transactionalProfileId" xsdType="xs:long"/>
            <element column="TRANSACTIONAL_PROFILE_CODE" name="transactionalProfileCode" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_NAME" name="transactionalProfileName" xsdType="xs:string"/>
            <element column="RESOURCE_ID" name="resourceId" xsdType="xs:long"/>
            <element column="RESOURCE_CODE" name="resourceCode" xsdType="xs:string"/>
            <element column="RESOURCE_NAME" name="resourceName" xsdType="xs:string"/>
            <element column="RESOURCE_DESCRIPTION" name="resourceDescription" xsdType="xs:string"/>
            <element column="DATE_KEEP" name="dateKeep" xsdType="xs:datetime"/>
            <element column="USER_KEEP" name="userKeep" xsdType="xs:string"/>
            <element column="DATE_REMOVE" name="dateRemove" xsdType="xs:datetime"/>
            <element column="USER_REMOVE" name="userRemove" xsdType="xs:string"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="COMMENTS" name="comments" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Cuenta los recursos sensibles de un peril global, soporta filtros -->
    <query id="certification_campaigns_resources_list_count_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  WITH (NOLOCK) 
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsResource">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Lista los usuarios de un perfil global, soporta paginacion y filtros -->
    <query id="certification_campaigns_users_list_query" useConfig="default">
        <sql>
            SELECT
                a.ID,
                a.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                a.USERNAME,
                a.IDENTIFICATION,
                a.FULL_NAME,
                a.USERDATA_ID,
                a.COMPANY,
                a.DIVISION,
                a.AREA,
                a.DEPARTMENT,
                a.POSITION,
                a.DATE_KEEP,
                a.USER_KEEP,
                a.DATE_REMOVE,
                a.USER_REMOVE,
                a.DATE_CHANGE,
                a.USER_CHANGE,
                a.GLOBAL_PROFILE_ID,
                b.CODE GLOBAL_PROFILE_CODE,
                b.NAME GLOBAL_PROFILE_NAME,
                a.STATUS,
                a.COMMENTS,
                a.VALID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS a WITH (NOLOCK) 
            LEFT JOIN SCH_CENTRA_ID.GLOBAL_PROFILES b WITH (NOLOCK) ON a.GLOBAL_PROFILE_ID=b.ID
            WHERE :whereclause 
            ORDER BY FULL_NAME
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsUserList" rowName="CertificationCampaignsUser">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID" name="certificationCampaignsGlobalProfilesId" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="FULL_NAME" name="fullName" xsdType="xs:string"/>
            <element column="USERDATA_ID" name="userdataId" xsdType="xs:long"/>
            <element column="COMPANY" name="company" xsdType="xs:string"/>
            <element column="DIVISION" name="division" xsdType="xs:string"/>
            <element column="AREA" name="area" xsdType="xs:string"/>
            <element column="DEPARTMENT" name="department" xsdType="xs:string"/>
            <element column="POSITION" name="position" xsdType="xs:string"/>
            <element column="DATE_KEEP" name="dateKeep" xsdType="xs:datetime"/>
            <element column="USER_KEEP" name="userKeep" xsdType="xs:string"/>
            <element column="DATE_REMOVE" name="dateRemove" xsdType="xs:datetime"/>
            <element column="USER_REMOVE" name="userRemove" xsdType="xs:string"/>
            <element column="DATE_CHANGE" name="dateChange" xsdType="xs:datetime"/>
            <element column="USER_CHANGE" name="userChange" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_ID" name="globalProfileId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_CODE" name="globalProfileCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_NAME" name="globalProfileName" xsdType="xs:string"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="COMMENTS" name="comments" xsdType="xs:string"/>
            <element column="VALID" name="valid" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Cuenta los usuarios de un peril global, soporta filtros -->
    <query id="certification_campaigns_users_list_count_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) AS COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS  WITH (NOLOCK) 
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="CertificationCampaignsUser">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Lista todas las aplicaciones de un perfil global, en una campana de certificacion-->
    <query id="certification_campaigns_list_application_query" useConfig="default">
        <sql>
            SELECT DISTINCT
                APPLICATION_CODE, 
                APPLICATION_NAME
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  WITH (NOLOCK) 
            WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=? AND VALID=1
            ORDER BY APPLICATION_NAME</sql>
        <param name="certificationCampaignsGlobalProfilesId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <result element="ApplicationList" rowName="Application">
            <element column="APPLICATION_CODE" name="code" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Lista todos los perfiles transaccionales de un perfil global, en una campana de certificacion, dado el codigo de aplicacion-->
    <query id="certification_campaigns_list_transactional_profiles_query" useConfig="default">
        <sql>
            SELECT DISTINCT
                TRANSACTIONAL_PROFILE_CODE, 
                TRANSACTIONAL_PROFILE_NAME
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  WITH (NOLOCK) 
            WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=? AND APPLICATION_CODE=? AND VALID=1
            ORDER BY TRANSACTIONAL_PROFILE_NAME</sql>
        <param name="certificationCampaignsGlobalProfilesId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <param name="applicationCode" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <result element="TransactionalProfileList" rowName="TransactionalProfile">
            <element column="TRANSACTIONAL_PROFILE_CODE" name="code" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Lista todos los recursos de un perfil global, en una campana de certificacion, dado el codigo de aplicacion-->
    <query id="certification_campaigns_list_resources_query" useConfig="default">
        <sql>
            SELECT DISTINCT
                RESOURCE_CODE, 
                RESOURCE_NAME
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES  WITH (NOLOCK) 
            WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=? AND APPLICATION_CODE=? AND VALID=1
            ORDER BY RESOURCE_NAME</sql>
        <param name="certificationCampaignsGlobalProfilesId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="applicationCode" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <result element="ResourceList" rowName="ResourceProfile">
            <element column="RESOURCE_CODE" name="code" xsdType="xs:string"/>
            <element column="RESOURCE_NAME" name="name" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Registra un recurso en estado MANTENER de un perfil global-->
    <query id="certification_campaigns_resource_keep_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES 
            SET STATUS='MANTENER',USER_KEEP=?,DATE_KEEP=GETDATE()
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsResourcesId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Registra un USUARIO EXTERNO en estado MANTENER -->
    <query id="certification_campaigns_external_user_keep_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS 
            SET STATUS='MANTENER',USER_KEEP=?,DATE_KEEP=GETDATE()
            OUTPUT 
                INSERTED.ID,
                INSERTED.USERDATA_ID
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsExternalUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <result element="List" rowName="Item">
            <element column="ID" name="id" xsdType="xs:string" export="id"/>
            <element column="USERDATA_ID" name="userdataId" xsdType="xs:string" export="userdataId"/>
        </result>
    </query>
    <!-- Registra todos los USUARIO EXTERNOS en estado MANTENER -->
    <query id="certification_campaigns_external_user_keep_all_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS 
            SET STATUS='MANTENER',USER_KEEP=:username,DATE_KEEP=GETDATE()
            OUTPUT 
                INSERTED.ID,
                INSERTED.USERDATA_ID,
                :expiration_date_user EXPIRATION_DATE_USER
            WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND 
            USERDATA_RESPONSIBLE_ID IN (SELECT ID FROM SCH_CENTRA_ID.USERDATA WHERE USERNAME=:username) AND
            VALID=1 AND STATUS='PENDIENTE'</sql>
        <param name="username" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsId"  paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>          
        <param name="expiration_date_user"  paramType="SCALAR" sqlType="TIMESTAMP" type="IN"></param>   
        <result element="List" rowName="Item">
            <call-query href="certification_campaigns_external_user_update_date_expiration_query">
                <with-param column="USERDATA_ID" name="userdataId"/>
                <with-param column="EXPIRATION_DATE_USER" name="expiration_date_user"/>
            </call-query>
        </result>
    </query>
    <!-- Registra un recurso en estado ELIMINAR de un perfil global-->
    <query id="certification_campaigns_resource_remove_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES 
            SET STATUS='ELIMINAR',USER_REMOVE=?,DATE_REMOVE=GETDATE()
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsResourcesId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Registra un USUARIO EXTERNO en estado ELIMINAR -->
    <query id="certification_campaigns_external_user_remove_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS 
            SET STATUS='ELIMINAR',USER_REMOVE=?,DATE_REMOVE=GETDATE()
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsExternalUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Registra un USUARIO EXTERNO en estado CAMBIAR RESPONSABLE -->
    <query id="certification_campaigns_external_user_change_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS 
            SET STATUS='CAMBIAR',USER_CHANGE=?,DATE_CHANGE=GETDATE()
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsExternalUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Registra fecha fin de vigencia de un usuario especifico -->
    <query id="certification_campaigns_external_user_update_date_expiration_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.USERDATA 
            SET EXPIRATION_DATE_USER=:expiration_date_user
            OUTPUT 
                INSERTED.ID
            WHERE ID=:userdataId</sql>
        <param name="userdataId"  paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
        <param name="expiration_date_user"  paramType="SCALAR" sqlType="TIMESTAMP" type="IN"></param>   
        <result element="Item" >
            <element column="ID" name="id" xsdType="xs:long"/>
        </result>  
    </query>
    <!-- Registra el comentario de un recurso  de un perfil global-->
    <query id="certification_campaigns_resource_comment_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES 
            SET COMMENTS=?
            WHERE ID=?</sql>
        <param name="comment" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="200" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsResourcesId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>  
    </query>
    <!-- Registra el comentario de un USUARIO EXTERNO-->
    <query id="certification_campaigns_external_user_comment_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS 
            SET COMMENT=?
            WHERE ID=?</sql>
        <param name="comment" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="200" minimum="0" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsExternalUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
    </query>
    <!-- Registra todos los usuarios no atendidos en estado MANTENER de un perfil global-->
    <query id="certification_campaigns_all_user_keep_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS 
            SET STATUS='MANTENER',USER_KEEP=?,DATE_KEEP=GETDATE(),GLOBAL_PROFILE_ID=NULL
            WHERE CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=? AND STATUS='PENDIENTE'</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsGlobalProfileId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Registra un usuario en estado MANTENER de un perfil global-->
    <query id="certification_campaigns_user_keep_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS 
            SET STATUS='MANTENER',USER_KEEP=?,DATE_KEEP=GETDATE(),GLOBAL_PROFILE_ID=NULL
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Registra un usuario en estado ELIMINAR de un perfil global-->
    <query id="certification_campaigns_user_remove_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS 
            SET STATUS='ELIMINAR',USER_REMOVE=?,DATE_REMOVE=GETDATE(),GLOBAL_PROFILE_ID=NULL
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>    
    </query>
    <!-- Registra un usuario en estado CAMBIAR de un perfil global-->
    <query id="certification_campaigns_user_change_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS 
            SET STATUS='CAMBIAR',USER_CHANGE=?,DATE_CHANGE=GETDATE(),GLOBAL_PROFILE_ID=?
            WHERE ID=?</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="globalProfileId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
        <param name="certificationCampaignsUserId" ordinal="3" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
    </query>
    <!-- Registra el comentario de un usuario un perfil global-->
    <query id="certification_campaigns_user_comment_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS 
            SET COMMENTS=?
            WHERE ID=?</sql>
        <param name="comment" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="200" minimum="0" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="certificationCampaignsUserId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param> 
    </query>
    <!-- Lista los datos de campanas de certificacion para reportes-->
    <query id="certification_campaigns_list_report_query" useConfig="default">
        <sql>
            SELECT
                ID,
                CODE,
                DESCRIPTION,
                DATE_OPEN,
                DATE_CLOSE,
                RESPONSIBLE_ID,
                RESPONSIBLE_USERNAME,
                RESPONSIBLE_IDENTIFICATION,
                RESPONSIBLE_NAME,
                CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                GLOBAL_PROFILE_ID,
                GLOBAL_PROFILE_CODE,
                GLOBAL_PROFILE_NAME,
                GLOBAL_PROFILE_POSITION_CODE,
                GLOBAL_PROFILE_POSITION_NAME,
                CERTIFICATION_CAMPAIGNS_RESOURCES_ID,
                APPLICATION_ID,
                APPLICATION_CODE,
                APPLICATION_NAME,
                TRANSACTIONAL_PROFILE_ID,
                TRANSACTIONAL_PROFILE_CODE,
                TRANSACTIONAL_PROFILE_NAME,
                RESOURCE_ID,
                RESOURCE_CODE,
                RESOURCE_NAME,
                RESOURCE_DESCRIPTION,
                RESOURCE_STATUS,
                RESOURCE_COMMENT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_REPORT_VW  WITH (NOLOCK) 
            WHERE :whereclause 
            ORDER BY GLOBAL_PROFILE_CODE, APPLICATION_CODE, TRANSACTIONAL_PROFILE_CODE, RESOURCE_CODE
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="ReportList" rowName="Report">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:date"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:date"/>
            <element column="RESPONSIBLE_ID" name="responsibleId" xsdType="xs:long"/>
            <element column="RESPONSIBLE_USERNAME" name="responsibleUsername" xsdType="xs:string"/>
            <element column="RESPONSIBLE_IDENTIFICATION" name="responsibleIdentification" xsdType="xs:string"/>
            <element column="RESPONSIBLE_NAME" name="responsibleName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID" name="certificationCampaignsGlobalProfilesId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_ID" name="globalProfileId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_CODE" name="globalProfileCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_NAME" name="globalProfileName" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION_CODE" name="globalProfilePositionCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION_NAME" name="globalProfilePositionName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_RESOURCES_ID" name="certificationCampaignsResourcesId" xsdType="xs:long"/>
            <element column="APPLICATION_ID" name="applicationId" xsdType="xs:long"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_ID" name="transactionalProfileId" xsdType="xs:long"/>
            <element column="TRANSACTIONAL_PROFILE_CODE" name="transactionalProfileCode" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_NAME" name="transactionalProfileName" xsdType="xs:string"/>
            <element column="RESOURCE_ID" name="resourceId" xsdType="xs:long"/>
            <element column="RESOURCE_CODE" name="resourceCode" xsdType="xs:string"/>
            <element column="RESOURCE_NAME" name="resourceName" xsdType="xs:string"/>
            <element column="RESOURCE_DESCRIPTION" name="resourceDescription" xsdType="xs:string"/>
            <element column="RESOURCE_STATUS" name="resourceStatus" xsdType="xs:string"/>
            <element column="RESOURCE_COMMENT" name="resourceComment" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los datos de campanas de certificacion para reportes-->
    <query id="certification_campaigns_count_report_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_REPORT_VW  WITH (NOLOCK) 
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="Report">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Lista los datos de campanas de certificacion de usuarios para reportes-->
    <query id="certification_campaigns_users_list_report_query" useConfig="default">
        <sql>
            SELECT
                ID,
                CODE,
                DESCRIPTION,
                DATE_OPEN,
                DATE_CLOSE,
                RESPONSIBLE_ID,
                RESPONSIBLE_USERNAME,
                RESPONSIBLE_IDENTIFICATION,
                RESPONSIBLE_NAME,
                CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID,
                GLOBAL_PROFILE_ID,
                GLOBAL_PROFILE_CODE,
                GLOBAL_PROFILE_NAME,
                GLOBAL_PROFILE_POSITION_CODE,
                GLOBAL_PROFILE_POSITION_NAME,
                CERTIFICATION_CAMPAIGNS_USERS_ID,
                USERNAME,
                IDENTIFICATION,
                FULL_NAME,
                COMPANY,
                DIVISION,
                AREA,
                DEPARTMENT,
                POSITION,
                STATUS,
                COMMENT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS_REPORT_VW
            WHERE :whereclause 
            ORDER BY GLOBAL_PROFILE_CODE, FULL_NAME
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="ReportList" rowName="Report">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:date"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:date"/>
            <element column="RESPONSIBLE_ID" name="responsibleId" xsdType="xs:long"/>
            <element column="RESPONSIBLE_USERNAME" name="responsibleUsername" xsdType="xs:string"/>
            <element column="RESPONSIBLE_IDENTIFICATION" name="responsibleIdentification" xsdType="xs:string"/>
            <element column="RESPONSIBLE_NAME" name="responsibleName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID" name="certificationCampaignsGlobalProfilesId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_ID" name="globalProfileId" xsdType="xs:long"/>
            <element column="GLOBAL_PROFILE_CODE" name="globalProfileCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_NAME" name="globalProfileName" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION_CODE" name="globalProfilePositionCode" xsdType="xs:string"/>
            <element column="GLOBAL_PROFILE_POSITION_NAME" name="globalProfilePositionName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_USERS_ID" name="certificationCampaignsUsersId" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="FULL_NAME" name="fullName" xsdType="xs:string"/>
            <element column="COMPANY" name="company" xsdType="xs:string"/>
            <element column="DIVISION" name="division" xsdType="xs:string"/>
            <element column="AREA" name="area" xsdType="xs:string"/>
            <element column="DEPARTMENT" name="department" xsdType="xs:string"/>
            <element column="POSITION" name="position" xsdType="xs:string"/>
            <element column="STATUS" name="status" xsdType="xs:string"/>
            <element column="COMMENT" name="comment" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los datos de campanas de certificacion para reportes-->
    <query id="certification_campaigns_users_count_report_query" useConfig="default">
        <sql>
            SELECT
                COUNT(*) COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS_REPORT_VW  WITH (NOLOCK) 
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="Report">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Actualiza contador de total de recursos en el perfil global-->
    <query id="certification_campaigns_global_profile_update_counter_resources_query" useConfig="default">
        <sql>
        UPDATE cc
         SET
            cc.COUNT_RESOURCES =  ISNULL(tt.TOTAL,0),
            cc.COUNT_RESOURCES_KEEP = ISNULL(tt.KEEP,0),
            cc.COUNT_RESOURCES_REMOVE = ISNULL(tt.REMOVE,0),
            cc.COUNT_RESOURCES_TODO = ISNULL(tt.MISSING,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES cc
            JOIN (
              SELECT t.ID,SUM(TOTAL) TOTAL, SUM(t.KEEP) KEEP ,SUM(t.REMOVE) REMOVE,SUM(t.MISSING) MISSING
              FROM (
              SELECT     
                        t2.ID,
                        1 TOTAL,
                        CASE
                            WHEN t1.STATUS='MANTENER' THEN 1 ELSE 0
                        END  KEEP,
                        CASE
                            WHEN t1.STATUS='ELIMINAR' THEN 1 ELSE 0
                        END  REMOVE,
                        CASE
                            WHEN t1.STATUS='PENDIENTE' THEN 1 ELSE 0
                        END  MISSING
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES t1 WITH (NOLOCK) 
                        JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID
                        WHERE t1.VALID=1 AND t2.VALID=1  AND t2.ID=?
              ) t
              GROUP BY t.ID
            ) tt ON cc.ID = tt.ID</sql>
        <param name="certificationCampaignsGlobalProfileId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de usuarios en el perfil global-->
    <query id="certification_campaigns_global_profile_update_counter_users_query" useConfig="default">
        <sql>
        UPDATE cc
         SET
            cc.COUNT_USERS =  ISNULL(tt.TOTAL,0),
            cc.COUNT_USERS_KEEP = ISNULL(tt.KEEP,0),
            cc.COUNT_USERS_REMOVE = ISNULL(tt.REMOVE,0),
            cc.COUNT_USERS_CHANGE = ISNULL(tt.CHANGE,0),
            cc.COUNT_USERS_TODO = ISNULL(tt.MISSING,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES cc
            JOIN (
              SELECT t.ID,SUM(TOTAL) TOTAL, SUM(t.KEEP) KEEP ,SUM(t.REMOVE) REMOVE,SUM(t.CHANGE) CHANGE, SUM(t.MISSING) MISSING
              FROM (
              SELECT     
                        t2.ID,
                        1 TOTAL,
                        CASE
                            WHEN t1.STATUS='MANTENER' THEN 1 ELSE 0
                        END  KEEP,
                        CASE
                            WHEN t1.STATUS='ELIMINAR' THEN 1 ELSE 0
                        END  REMOVE,
                        CASE
                            WHEN t1.STATUS='CAMBIAR' THEN 1 ELSE 0
                        END  CHANGE,
                        CASE
                            WHEN t1.STATUS='PENDIENTE' THEN 1 ELSE 0
                        END  MISSING
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS t1 WITH (NOLOCK) 
                        JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t2  WITH (NOLOCK) ON t1.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID=t2.ID
                        WHERE t1.VALID=1 AND t2.VALID=1  AND t2.ID=?
              ) t
              GROUP BY t.ID
            ) tt ON cc.ID = tt.ID</sql>
        <param name="certificationCampaignsGlobalProfileId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de recursos en campana de certificacion desde el perfil global-->
    <query id="certification_campaigns_update_counter_resources_query" useConfig="default">
        <sql>
            UPDATE cc
            SET
            cc.COUNT_RESOURCES =  ISNULL(tt.TOTAL,0),
            cc.COUNT_RESOURCES_KEEP = ISNULL(tt.KEEP,0),
            cc.COUNT_RESOURCES_REMOVE = ISNULL(tt.REMOVE,0),
            cc.COUNT_RESOURCES_TODO = ISNULL(tt.MISSING,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (
                   SELECT t.CERTIFICATION_CAMPAIGNS_ID,
                   SUM(t.COUNT_RESOURCES) TOTAL, 
                   SUM(t.COUNT_RESOURCES_KEEP) KEEP ,
                   SUM(t.COUNT_RESOURCES_REMOVE) REMOVE,
                   SUM(t.COUNT_RESOURCES_TODO) MISSING
                   FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t
                   WHERE t.VALID=1 AND t.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId
                   GROUP BY t.CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID  AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de usuarios en campana de certificacion desde el perfil global-->
    <query id="certification_campaigns_update_counter_users_query" useConfig="default">
        <sql>
            UPDATE cc
            SET
            cc.COUNT_USERS =  ISNULL(tt.TOTAL,0),
            cc.COUNT_USERS_KEEP = ISNULL(tt.KEEP,0),
            cc.COUNT_USERS_REMOVE = ISNULL(tt.REMOVE,0),
            cc.COUNT_USERS_CHANGE = ISNULL(tt.CHANGE,0),
            cc.COUNT_USERS_TODO = ISNULL(tt.MISSING,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (
                   SELECT t.CERTIFICATION_CAMPAIGNS_ID,
                   SUM(t.COUNT_USERS) TOTAL, 
                   SUM(t.COUNT_USERS_KEEP) KEEP ,
                   SUM(t.COUNT_USERS_REMOVE) REMOVE,
                   SUM(t.COUNT_USERS_CHANGE) CHANGE,
                   SUM(t.COUNT_USERS_TODO) MISSING
                   FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t
                   WHERE t.VALID=1 AND t.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId
                   GROUP BY t.CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de perfiles globales en campana de certificacion desde el perfil global-->
    <query id="certification_campaigns_update_counter_global_profile_query" useConfig="default">
        <sql>
            UPDATE cc
            SET cc.COUNT_GLOBAL_PROFILE= ISNULL(tt.COUNT,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (          SELECT t1.CERTIFICATION_CAMPAIGNS_ID, COUNT(*) COUNT
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                        WHERE t1.VALID=1 AND t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId
                        GROUP BY t1.CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId"  paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de perfiles globales sin reponsables en campana de certificacion desde el perfil global-->
    <query id="certification_campaigns_update_counter_global_profile_without_responsible_query" useConfig="default">
        <sql>
           UPDATE cc
            SET cc.COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE= ISNULL(tt.COUNT,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (          SELECT t1.CERTIFICATION_CAMPAIGNS_ID, COUNT(*) COUNT
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                        WHERE t1.VALID=1 AND t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.USERDATA_RESPONSABLE_ID is NULL
                        GROUP BY t1.CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de total de responsables en campana de certificacion desde el perfil global-->
    <query id="certification_campaigns_update_counter_responsible_query" useConfig="default">
        <sql>
            UPDATE cc
            SET cc.COUNT_RESPONSABLE= ISNULL(tt.COUNT,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (          SELECT t1.CERTIFICATION_CAMPAIGNS_ID, COUNT(DISTINCT t1.USERDATA_RESPONSABLE_ID) COUNT
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1 WITH (NOLOCK) 
                        WHERE t1.VALID=1 AND t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.USERDATA_RESPONSABLE_ID iS NOT NULL
                        GROUP BY t1.CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualiza contador de perfiles globales calculados -->
    <query id="certification_campaigns_update_counter_global_profile_calculated_query" useConfig="default">
        <sql>
            UPDATE cc
            SET cc.COUNT_GLOBAL_PROFILE_CALCULATED= ISNULL(tt.COUNT,0)
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS cc
            LEFT JOIN 
            (   SELECT CERTIFICATION_CAMPAIGNS_ID, COUNT(*) COUNT
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES 
                    WHERE STATUS!='INICIALIZADO' AND VALID=1 AND CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId
                    GROUP BY CERTIFICATION_CAMPAIGNS_ID
            ) tt ON cc.ID = tt.CERTIFICATION_CAMPAIGNS_ID AND cc.ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Actualizar el estado del perfil global en la campana-->
    <query id="certification_campaigns_update_status_global_profile_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES
                SET STATUS = 
                CASE
                    WHEN COUNT_RESOURCES_TODO=0 THEN 'CERTIFICADO TOTAL' ELSE 'CERTIFICADO PARCIAL'
                END
            WHERE ID=?</sql>
        <param name="certificationCampaignsGlobalProfileId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!-- Recupera todos los reposponsables de un campana de certificacion para realizar la notificacion-->
    <query id="certification_campaigns_list_responsible_by_notification_query" useConfig="default">
        <sql>
            SELECT DISTINCT
            t3.ID,
            t3.USERNAME,
            t3.IDENTIFICATION,
            t3.EMPLOYEE_COMPLETE_NAME,
            t3.MAIL,
            t2.DATE_OPEN,
            t2.DATE_CLOSE
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES t1
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t2 ON t1.CERTIFICATION_CAMPAIGNS_ID=t2.ID
            JOIN SCH_CENTRA_ID.USERDATA t3 ON t1.USERDATA_RESPONSABLE_ID = t3.ID
            WHERE t1.VALID=1 AND t1.CERTIFICATION_CAMPAIGNS_ID=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <result element="UserList" rowName="User">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="employeeCompleteName" xsdType="xs:string"/>
            <element column="MAIL" name="mail" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:date"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:date"/>
        </result>
    </query>
    <!-- Recupera todos la contraparte de un campana de certificacion para realizar la notificacion - usuarios externos-->
    <query id="certification_campaigns_external_users_list_responsible_by_notification_query" useConfig="default">
        <sql>
            SELECT DISTINCT
                        t3.ID,
                        t3.USERNAME,
                        t3.IDENTIFICATION,
                        t3.EMPLOYEE_COMPLETE_NAME,
                        t3.MAIL,
                        t2.DATE_OPEN,
                        t2.DATE_CLOSE
                        FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1
                        JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t2 ON t1.CERTIFICATION_CAMPAIGNS_ID=t2.ID
                        JOIN SCH_CENTRA_ID.USERDATA t3 ON t1.USERDATA_RESPONSIBLE_ID = t3.ID
                        WHERE t1.VALID=1 AND t1.CERTIFICATION_CAMPAIGNS_ID=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <result element="UserList" rowName="User">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="USERNAME" name="username" xsdType="xs:string"/>
            <element column="IDENTIFICATION" name="identification" xsdType="xs:string"/>
            <element column="EMPLOYEE_COMPLETE_NAME" name="employeeCompleteName" xsdType="xs:string"/>
            <element column="MAIL" name="mail" xsdType="xs:string"/>
            <element column="DATE_OPEN" name="dateOpen" xsdType="xs:date"/>
            <element column="DATE_CLOSE" name="dateClose" xsdType="xs:date"/>
        </result>
    </query>
    <!-- Asigna manualmente el responsable a un perfil global-->
    <query id="certification_campaigns_select_manual_responsible_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES
            SET USERDATA_RESPONSABLE_ID=?,STATUS='SIN CERTIFICAR'
            WHERE CERTIFICATION_CAMPAIGNS_ID=? AND GLOBAL_PROFILE_ID=?</sql>
        <param name="responsibleId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <param name="certificationCampaignsId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
        <param name="globalProfileId" ordinal="3" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>   
    </query>
    <!--Crear una nueva campana de certificacion-->
    <query id="certification_campaigns_create_query" useConfig="default">
        <sql>
           INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS
            (
                CODE,
                DESCRIPTION,
                MAIL_CONTACT,
                DATE_OPEN,
                DATE_CLOSE,
                DATE_CREATE,
                USER_CREATE,
                COUNT_USERS,
                COUNT_RESPONSABLE,
                COUNT_GLOBAL_PROFILE,
                COUNT_GLOBAL_PROFILE_WITHOUT_RESPONSABLE,
                COUNT_GLOBAL_PROFILE_CALCULATED,                
                COUNT_RESOURCES,
                COUNT_RESOURCES_KEEP,
                COUNT_RESOURCES_REMOVE,
                COUNT_RESOURCES_TODO,
                STATUS,
                CATALOG_CAMPAIGNS_TYPE_ID,
                VALID,
                COUNT_USERS_TODO,
                COUNT_USERS_KEEP,
                COUNT_USERS_REMOVE,
                COUNT_USERS_CHANGE
            )
            VALUES
            (
                ?,
                ?,
                '',
                ?,
                ?,
                GETDATE(),
                ?,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                'REGISTRADO',
                ?,
                1,
                0,
                0,
                0,
                0
            )</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="description" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="400" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="dateOpen" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN">
            <validatePattern pattern="^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})\.\d{3}Z$" />
        </param>
        <param name="dateClose" ordinal="4" paramType="SCALAR" sqlType="TIMESTAMP" type="IN">
            <validatePattern pattern="^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})\.\d{3}Z$" />
        </param>
        <param name="username" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="catalogCampaignsTypeId" ordinal="6" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!--Actualizar una campana de certificacion-->
    <query id="certification_campaigns_update_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS
            SET
                CODE = ?,
                DESCRIPTION = ?,
                DATE_OPEN = ?,
                DATE_CLOSE = ?
            WHERE ID = ? AND VALID=1</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="description" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="400" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="dateOpen" ordinal="3" paramType="SCALAR" sqlType="TIMESTAMP" type="IN">
            <validatePattern pattern="^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})\.\d{3}Z$" />
        </param>  
        <param name="dateClose" ordinal="4" paramType="SCALAR" sqlType="TIMESTAMP" type="IN">
            <validatePattern pattern="^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})\.\d{3}Z$" />
        </param>  
        <param name="id" ordinal="5" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>        
    </query>
    <!--Eliminar una campana de certificacion-->
    <query id="certification_campaigns_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS
            SET
                VALID = 0
            OUTPUT INSERTED.ID
            WHERE ID = ? AND VALID=1</sql>
        <param name="id" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>        
        <result element="Item">
            <element column="ID" name="id" xsdType="xs:integer"/>
        </result>        
    </query>
    <!--Validar que existen recursos sensibles, utilizado en carga masiva-->
    <query id="certification_campaigns_validate_sensible_resources_query" useConfig="default">
        <sql>
            SELECT COUNT(*) COUNT
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES T2 ON T1.ID = T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID
            JOIN SCH_CENTRA_ID.USERDATA T3 ON T1.USERDATA_RESPONSABLE_ID = T3.ID
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T4 ON T1.GLOBAL_PROFILE_ID = T4.ID
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS T5 ON T5.ID = T1.CERTIFICATION_CAMPAIGNS_ID
            WHERE T1.VALID=1 AND T2.VALID=1 AND T5.VALID=1 AND T1.CERTIFICATION_CAMPAIGNS_ID=? AND T3.USERNAME=? AND T4.CODE=? AND T2.APPLICATION_CODE=? AND T2.TRANSACTIONAL_PROFILE_CODE=? AND T2.RESOURCE_CODE=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>        
        <param name="username" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
        </param>
        <param name="globalProfileCode" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
        </param>
        <param name="applicationCode" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="50" minimum="1" />
        </param>
        <param name="transactionalProfileCode" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="200" minimum="1" />
        </param>
        <param name="resourceCode" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="200" minimum="1" />
        </param>
        <result element="Validate">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Recuperar id de recursos sensibles, utilizado en carga masiva-->
    <query id="certification_campaigns_select_sensible_resources_query" useConfig="default">
        <sql>
            SELECT t2.ID ID
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RESOURCES T2 ON T1.ID = T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID
            JOIN SCH_CENTRA_ID.USERDATA T3 ON T1.USERDATA_RESPONSABLE_ID = T3.ID
            JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T4 ON T1.GLOBAL_PROFILE_ID = T4.ID
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS T5 ON T5.ID = T1.CERTIFICATION_CAMPAIGNS_ID
            WHERE T1.VALID=1 AND T2.VALID=1 AND T5.VALID=1 AND T1.CERTIFICATION_CAMPAIGNS_ID=? AND T3.USERNAME=? AND T4.CODE=? AND T2.APPLICATION_CODE=? AND T2.TRANSACTIONAL_PROFILE_CODE=? AND T2.RESOURCE_CODE=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="username" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileCode" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationCode" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileCode" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="resourceCode" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="List">
            <element column="ID" name="id" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Validar que existen usuario en campana de certificacion, utilizado en carga masiva-->
    <query id="certification_campaigns_validate_users_query" useConfig="default">
        <sql>
            SELECT COUNT(*) COUNT 
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1
                JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS T2 ON T1.ID = T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID
                JOIN SCH_CENTRA_ID.USERDATA T3 ON T1.USERDATA_RESPONSABLE_ID = T3.ID
                JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T4 ON T1.GLOBAL_PROFILE_ID = T4.ID
                WHERE T1.VALID=1 AND T2.VALID=1
                AND T1.CERTIFICATION_CAMPAIGNS_ID=?
                AND T3.USERNAME=?
                AND T4.CODE=?
                AND T2.USERNAME=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="username" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileCode" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="usernameEmployee" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="Validate">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Validar que existen usuario en campana de certificacion, utilizado en carga masiva-->
    <query id="certification_campaigns_select_users_query" useConfig="default">
        <sql>
            SELECT t2.ID ID
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES T1
                JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_USERS T2 ON T1.ID = T2.CERTIFICATION_CAMPAIGNS_GLOBAL_PROFILES_ID
                JOIN SCH_CENTRA_ID.USERDATA T3 ON T1.USERDATA_RESPONSABLE_ID = T3.ID
                JOIN SCH_CENTRA_ID.GLOBAL_PROFILES T4 ON T1.GLOBAL_PROFILE_ID = T4.ID
                WHERE T1.VALID=1 AND T2.VALID=1
                AND T1.CERTIFICATION_CAMPAIGNS_ID=?
                AND T3.USERNAME=?
                AND T4.CODE=?
                AND T2.USERNAME=?</sql>
        <param name="certificationCampaignsId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="username" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="globalProfileCode" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="usernameEmployee" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <result element="List">
            <element column="ID" name="id" xsdType="xs:integer"/>
        </result>        
    </query>
    <!-- RECURSOS -->
    <!-- Lista los recursos-->
    <query id="resources_list_query" useConfig="default">
        <sql>
            SELECT 
                t1.ID,
                t1.CODE,
                t1.NAME,
                t1.DESCRIPTION,
                t1.SENSITIVE,
                t1.DATE_CREATE,
                t1.USER_CREATE,
                t1.DATE_DELETE,
                t1.USER_DELETE,
                t1.DATE_LAST_MODIFY,
                t1.USER_LAST_MODIFY,
                t2.ID APPLICATION_ID,
                t2.CODE APPLICATION_CODE,
                t2.NAME APPLICATION_NAME
            FROM SCH_CENTRA_ID.RESOURCES t1 WITH (NOLOCK)
            JOIN SCH_CENTRA_ID.APPLICATIONS t2 WITH (NOLOCK) ON t1.APPLICATION_ID=t2.ID
            WHERE :whereclause 
            ORDER BY t2.NAME,t1.NAME
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="ResourceList" rowName="Resource">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="CODE" name="code" xsdType="xs:string"/>
            <element column="NAME" name="name" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description" xsdType="xs:string"/>
            <element column="SENSITIVE" name="sensitive" xsdType="xs:integer"/>
            <element column="DATE_CREATE" name="dateCreate" xsdType="xs:datetime"/>
            <element column="USER_CREATE" name="userCreate" xsdType="xs:string"/>
            <element column="DATE_DELETE" name="dateDelete" xsdType="xs:datetime"/>
            <element column="USER_DELETE" name="userDelete" xsdType="xs:string"/>
            <element column="DATE_LAST_MODIFY" name="dateLastModify" xsdType="xs:datetime"/>
            <element column="USER_LAST_MODIFY" name="userLastModify" xsdType="xs:string"/>
            <element column="APPLICATION_ID" name="applicationId" xsdType="xs:long"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los recursos-->
    <query id="resources_count_query" useConfig="default">
        <sql>
            SELECT 
            COUNT(*) COUNT
            FROM SCH_CENTRA_ID.RESOURCES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.APPLICATIONS t2 WITH (NOLOCK) ON t1.APPLICATION_ID=t2.ID
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="Resource">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Crea un nuevo recurso-->
    <query id="resources_create_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.RESOURCES
                (
                    CODE,
                    NAME,
                    DESCRIPTION,
                    SENSITIVE,
                    DATE_CREATE,
                    USER_CREATE,
                    APPLICATION_ID,
                    VALID
                )
                VALUES
                (?,?,?,?,GETDATE(),?,?,1)</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="description" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="sensitive" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="username" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationId" ordinal="6" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Actualiza un recurso existente-->
    <query id="resources_update_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.RESOURCES
            SET
                CODE = ?,
                NAME = ?,
                DESCRIPTION = ?,
                SENSITIVE = ?,
                DATE_LAST_MODIFY = GETDATE(),
                USER_LAST_MODIFY = ?,
                APPLICATION_ID = ?,
                VALID = 1
            WHERE ID = ? AND VALID=1</sql>
        <param name="code" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="name" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="description" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="sensitive" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="username" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationId" ordinal="6" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="id" ordinal="7" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Elimina un recurso existente-->
    <query id="resources_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.RESOURCES
            SET
                DATE_DELETE = GETDATE(),
                USER_DELETE = ?,
                VALID = 0
            WHERE ID = ? AND VALID=1</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="id" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- PT x RECURSOS-->
    <!-- Lista los recursos asignados a un perfil transaccional-->
    <query id="transactional_profile_resources_list_query" useConfig="default">
        <sql>
            SELECT 
                t1.ID, 
                t1.DATE_CREATE, 
                t1.USER_CREATE, 
                t1.DATE_DELETE, 
                t1.USER_DELETE, 
                t1.RESOURCES_ID, 
                t2.CODE RESOURCES_CODE,
                t2.NAME RESOURCES_NAME,
                t2.DESCRIPTION RESOURCES_DESCRIPTION,
                t1.TRANSACTIONAL_PROFILE_ID, 
                t3.CODE TRANSACTIONAL_PROFILE_CODE,
                t3.NAME TRANSACTIONAL_PROFILE_NAME,
                t1.CERTIFICATION_CAMPAIGNS_ID,
                t4.ID APPLICATION_ID,
                t4.CODE APPLICATION_CODE,
                t4.NAME APPLICATION_NAME,
                t2.SENSITIVE,
                t3.CODE_CERTIFICATION
            FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.RESOURCES t2 WITH (NOLOCK) ON t1.RESOURCES_ID=t2.ID
            JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES t3 WITH (NOLOCK) ON t1.TRANSACTIONAL_PROFILE_ID = t3.ID
            JOIN SCH_CENTRA_ID.APPLICATIONS t4 ON t3.application_id = t4.ID
            WHERE :whereclause 
            ORDER BY t3.NAME,t2.NAME
            :fromto</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <param name="fromto" sqlType="QUERY_STRING"/>
        <result element="TransactionalProfileResourceList" rowName="TransactionalProfileResource">
            <element column="ID" name="id" xsdType="xs:long"/>
            <element column="DATE_CREATE" name="dateCreate" xsdType="xs:datetime"/>
            <element column="USER_CREATE" name="userCreate" xsdType="xs:string"/>
            <element column="DATE_DELETE" name="dateDelete" xsdType="xs:datetime"/>
            <element column="USER_DELETE" name="userDelete" xsdType="xs:integer"/>
            <element column="RESOURCES_ID" name="resourcesId" xsdType="xs:long"/>
            <element column="RESOURCES_CODE" name="resourcesCode" xsdType="xs:string"/>
            <element column="RESOURCES_NAME" name="resourcesName" xsdType="xs:datetime"/>
            <element column="RESOURCES_DESCRIPTION" name="resourcesDescription" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_ID" name="transactionalProfileId" xsdType="xs:long"/>
            <element column="TRANSACTIONAL_PROFILE_CODE" name="transactionalProfileCode" xsdType="xs:string"/>
            <element column="TRANSACTIONAL_PROFILE_NAME" name="transactionalProfileName" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS_ID" name="certificationCampaignsId" xsdType="xs:long"/>
            <element column="APPLICATION_ID" name="applicationId" xsdType="xs:long"/>
            <element column="APPLICATION_CODE" name="applicationCode" xsdType="xs:string"/>
            <element column="APPLICATION_NAME" name="applicationName" xsdType="xs:string"/>
            <element column="SENSITIVE" name="sensitive" xsdType="xs:integer"/>
            <element column="CODE_CERTIFICATION" name="codeCertification" xsdType="xs:string"/>
        </result>
    </query>
    <!-- Cuenta los recursos  asignados a un perfil transaccional-->
    <query id="transactional_profile_resources_count_query" useConfig="default">
        <sql>
            SELECT 
               COUNT(*) COUNT
            FROM SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES t1 WITH (NOLOCK) 
            JOIN SCH_CENTRA_ID.RESOURCES t2 WITH (NOLOCK) ON t1.RESOURCES_ID=t2.ID
            JOIN SCH_CENTRA_ID.TRANSACTIONAL_PROFILES t3 WITH (NOLOCK) ON t1.TRANSACTIONAL_PROFILE_ID = t3.ID
            JOIN SCH_CENTRA_ID.APPLICATIONS t4 WITH (NOLOCK) ON t3.application_id = t4.ID
            WHERE :whereclause</sql>
        <param name="whereclause" sqlType="QUERY_STRING"/>
        <result element="Resource">
            <element column="COUNT" name="count" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Crea un nuevo recurso asigna a un perfil transaccional-->
    <query id="transactional_profile_resources_create_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES 
                (
                    RESOURCES_ID, 
                    TRANSACTIONAL_PROFILE_ID, 
                    CERTIFICATION_CAMPAIGNS_ID, 
                    DATE_CREATE, 
                    USER_CREATE, 
                    VALID
                ) 
                VALUES 
                (?, ?, ?,GETDATE(),?,1)</sql>
        <param name="resourcesId" ordinal="1" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="transactionalProfileId" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="certificationCampaignsId" ordinal="3" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="username" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <!-- Crea un nuevo recurso asigna a un perfil transaccional utilizando codigos-->
    <query id="transactional_profile_resources_create_codes_query" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES 
                (
                    RESOURCES_ID, 
                    TRANSACTIONAL_PROFILE_ID, 
                    CERTIFICATION_CAMPAIGNS_ID, 
                    DATE_CREATE, 
                    USER_CREATE, 
                    VALID
                ) 
                VALUES 
                (
                    (select t1.id from SCH_CENTRA_ID.RESOURCES t1 join SCH_CENTRA_ID.APPLICATIONS t2 on t1.application_id=t2.id where t2.code=:applicationCode and t1.code=:resourceCode),
                    (select t1.id from SCH_CENTRA_ID.TRANSACTIONAL_PROFILES t1 join SCH_CENTRA_ID.APPLICATIONS t2 on t1.application_id=t2.id where t2.code=:applicationCode and t1.code=:transactionalProfileCode),
                    :certificationCampaignsId,GETDATE(),:username,1
                )</sql>
        <param name="resourceCode" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="transactionalProfileCode" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="applicationCode" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="username" paramType="SCALAR" sqlType="STRING" type="IN"/>
    </query>
    <!-- Elimina un recurso asignadi a un perfil transacional-->
    <query id="transactional_profile_resources_delete_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.TRANSACTIONAL_PROFILES_RESOURCES
            SET
                DATE_DELETE = GETDATE(),
                USER_DELETE = ?,
                VALID = 0
            WHERE ID = ? AND VALID=1</sql>
        <param name="username" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="20" minimum="1" />
            <validatePattern pattern="^[a-zA-Z0-9\u00F1\u00D1áéíóúÁÉÍÓÚ\s\.,_-]*$" />
        </param>
        <param name="id" ordinal="2" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Cambia una campana a estado CERRADO cuando finaliza su vigencia-->
    <query id="certification_campaign_close_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS SET STATUS='CERRADO',DATE_FINISH=GETDATE(),USER_FINISH='AUTO'
            WHERE VALID=1 AND STATUS='PUBLICADO' AND CAST(DATE_CLOSE AS DATE) &lt; CAST(GETDATE() AS DATE)</sql>
    </query>
    <!-- Crea indicadores individuales para una campana de usuarios externos -->
    <query id="certification_campaign_external_users_indicators_single" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS (
                USERDATA_RESPONSIBLE_ID, 
                CERTIFICATION_CAMPAIGNS_ID, 
                TYPE, 
                COUNT_EXTERNAL_USERS, 
                COUNT_EXTERNAL_USERS_PENDING, 
                COUNT_EXTERNAL_USERS_KEEP, 
                COUNT_EXTERNAL_USERS_REMOVE, 
                COUNT_EXTERNAL_USERS_CHANGE, 
                COUNT_COUNTERPARTY, 
                COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY, 
                FILTER, 
                VALID)
                    SELECT
                    t1.USERDATA_RESPONSIBLE_ID,
                    :certificationCampaignsId,
                    'I',
                    COUNT(*) AS COUNT_EXTERNAL_USERS,
                    COUNT(CASE WHEN t1.STATUS = 'PENDIENTE' THEN 1 END) AS COUNT_EXTERNAL_USERS_PENDING,
                    COUNT(CASE WHEN t1.STATUS = 'MANTENER' THEN 1 END) AS COUNT_EXTERNAL_USERS_KEEP,
                    COUNT(CASE WHEN t1.STATUS = 'ELIMINAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_REMOVE,
                    COUNT(CASE WHEN t1.STATUS = 'CAMBIAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_CHANGE,
                    0 COUNT_COUNTERPARTY,
                    0 COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY,
                    t2.USERNAME + ' ' + t2.EMPLOYEE_COMPLETE_NAME + ' ' + t2.IDENTIFICATION FILTER,
                    1 VALID
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1 WITH (NOLOCK)
                    JOIN SCH_CENTRA_ID.USERDATA t2 WITH (NOLOCK) ON t1.USERDATA_RESPONSIBLE_ID=t2.ID
                    WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.VALID=1 
                    GROUP BY t1.USERDATA_RESPONSIBLE_ID,  t2.USERNAME, t2.EMPLOYEE_COMPLETE_NAME, t2.IDENTIFICATION</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Crea indicadores globales para una campana de usuarios externos -->
    <query id="certification_campaign_external_users_indicators_global" useConfig="default">
        <sql>
            INSERT INTO SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS (
                USERDATA_RESPONSIBLE_ID, 
                CERTIFICATION_CAMPAIGNS_ID, 
                TYPE, 
                COUNT_EXTERNAL_USERS, 
                COUNT_EXTERNAL_USERS_PENDING, 
                COUNT_EXTERNAL_USERS_KEEP, 
                COUNT_EXTERNAL_USERS_REMOVE, 
                COUNT_EXTERNAL_USERS_CHANGE, 
                COUNT_COUNTERPARTY, 
                COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY, 
                FILTER, 
                VALID)
                    SELECT
                        null USERDATA_RESPONSIBLE_ID,
                        :certificationCampaignsId CERTIFICATION_CAMPAIGNS_ID,
                        'G' TYPE,
                        COUNT(*) AS COUNT_EXTERNAL_USERS,
                        COUNT(CASE WHEN t1.STATUS = 'PENDIENTE' THEN 1 END) AS COUNT_EXTERNAL_USERS_PENDING,
                        COUNT(CASE WHEN t1.STATUS = 'MANTENER' THEN 1 END) AS COUNT_EXTERNAL_USERS_KEEP,
                        COUNT(CASE WHEN t1.STATUS = 'ELIMINAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_REMOVE,
                        COUNT(CASE WHEN t1.STATUS = 'CAMBIAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_CHANGE,
                        COUNT(DISTINCT t1.USERDATA_RESPONSIBLE_ID ) COUNT_COUNTERPARTY,
                        COUNT(CASE WHEN t1.USERDATA_RESPONSIBLE_ID IS NULL THEN 1 END ) COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY,
                        ' ' FILTER,
                        1 VALID
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1 WITH (NOLOCK)
                    WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.VALID=1</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>
    <!-- Elimina indicadores de una campana de usuarios externos -->
    <query id="certification_campaign_external_users_indicators_remove" useConfig="default">
        <sql>
            DELETE FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS
               WHERE CERTIFICATION_CAMPAIGNS_ID = :certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>    
    <!-- Lista indicadores individuales de campanas usuarios externos -->
    <query id="list_certification_campaign_external_users_indicators_single_query" useConfig="default">
        <sql>
            SELECT 
                    t2.ID RESPONSIBLE_ID,
                    t2.USERNAME RESPONSIBLE_USERNAME,
                    t2.IDENTIFICATION RESPONSIBLE_IDENTIFICATION,
                    t2.EMPLOYEE_COMPLETE_NAME RESPONSIBLE_NAME,
                    t1.COUNT_EXTERNAL_USERS,
                    t1.COUNT_EXTERNAL_USERS_PENDING,
                    t1.COUNT_EXTERNAL_USERS_KEEP,
                    t1.COUNT_EXTERNAL_USERS_REMOVE,
                    t1.COUNT_EXTERNAL_USERS_CHANGE
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS t1 WITH (NOLOCK)
                JOIN SCH_CENTRA_ID.USERDATA t2 WITH (NOLOCK) ON t1.USERDATA_RESPONSIBLE_ID=t2.ID 
                where t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.TYPE='I' AND t1.FILTER LIKE :filter</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <param name="filter"  paramType="SCALAR" sqlType="STRING" type="IN">
            <validateLength maximum="400" minimum="0" />
            <validatePattern pattern="^[a-zA-Z0-9\s\.,_%-]*$" />
        </param>
        <result element="IndicatorList" rowName="Indicator">
            <element column="RESPONSIBLE_ID" name="responsibleId" xsdType="xs:long"/>
            <element column="RESPONSIBLE_USERNAME" name="responsibleUsername" xsdType="xs:string"/>
            <element column="RESPONSIBLE_IDENTIFICATION" name="responsibleIdentification" xsdType="xs:string"/>
            <element column="RESPONSIBLE_NAME" name="responsibleName" xsdType="xs:string"/>
            <element column="COUNT_EXTERNAL_USERS" name="countExternalUsers" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_PENDING" name="countExternalUsersPending" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_KEEP" name="countExternalUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_REMOVE" name="countExternalUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_CHANGE" name="countExternalUsersChange" xsdType="xs:integer"/>
        </result>
    </query>
    <!-- Lista indicadores globales de campanas usuarios externos -->
    <query id="list_certification_campaign_external_users_indicators_global_query" useConfig="default">
        <sql>
            SELECT 
                t1.COUNT_EXTERNAL_USERS,
                t1.COUNT_EXTERNAL_USERS_PENDING,
                t1.COUNT_EXTERNAL_USERS_KEEP,
                t1.COUNT_EXTERNAL_USERS_REMOVE,
                t1.COUNT_EXTERNAL_USERS_CHANGE,
                t1.COUNT_COUNTERPARTY,
                t1.COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS t1 WITH (NOLOCK)
                where t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.TYPE='G'</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <result element="IndicatorList" rowName="Indicator">
            <element column="COUNT_EXTERNAL_USERS" name="countExternalUsers" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_PENDING" name="countExternalUsersPending" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_KEEP" name="countExternalUsersKeep" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_REMOVE" name="countExternalUsersRemove" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_CHANGE" name="countExternalUsersChange" xsdType="xs:integer"/>
            <element column="COUNT_COUNTERPARTY" name="countCounterparty" xsdType="xs:integer"/>
            <element column="COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY" name="countExternalUsersWithoutCounterparty" xsdType="xs:integer"/>                        
        </result>
    </query>
    <!-- Actualiza indicadores individuales de campanas usuarios externos -->
    <query id="update_certification_campaign_external_users_indicators_single_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS 
            SET 
                COUNT_EXTERNAL_USERS = t2.COUNT_EXTERNAL_USERS,
                COUNT_EXTERNAL_USERS_PENDING = t2.COUNT_EXTERNAL_USERS_PENDING,
                COUNT_EXTERNAL_USERS_KEEP = t2.COUNT_EXTERNAL_USERS_KEEP,
                COUNT_EXTERNAL_USERS_REMOVE = t2.COUNT_EXTERNAL_USERS_REMOVE,
                COUNT_EXTERNAL_USERS_CHANGE = t2.COUNT_EXTERNAL_USERS_CHANGE
                FROM (
                    SELECT
                    COUNT(*) AS COUNT_EXTERNAL_USERS,
                    COUNT(CASE WHEN t1.STATUS = 'PENDIENTE' THEN 1 END) AS COUNT_EXTERNAL_USERS_PENDING,
                    COUNT(CASE WHEN t1.STATUS = 'MANTENER' THEN 1 END) AS COUNT_EXTERNAL_USERS_KEEP,
                    COUNT(CASE WHEN t1.STATUS = 'ELIMINAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_REMOVE,
                    COUNT(CASE WHEN t1.STATUS = 'CAMBIAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_CHANGE
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1 WITH (NOLOCK)
                    WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.USERDATA_RESPONSIBLE_ID=:userdataResponsibleId AND t1.VALID=1
                ) t2
                WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND USERDATA_RESPONSIBLE_ID=:userdataResponsibleId AND VALID=1</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
        <param name="userdataResponsibleId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query>   
    <!-- Actualiza indicadores globales de campanas usuarios externos -->
    <query id="update_certification_campaign_external_users_indicators_global_query" useConfig="default">
        <sql>
            UPDATE SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS_INDICATORS 
            SET 
                COUNT_EXTERNAL_USERS = t2.COUNT_EXTERNAL_USERS,
                COUNT_EXTERNAL_USERS_PENDING = t2.COUNT_EXTERNAL_USERS_PENDING,
                COUNT_EXTERNAL_USERS_KEEP = t2.COUNT_EXTERNAL_USERS_KEEP,
                COUNT_EXTERNAL_USERS_REMOVE = t2.COUNT_EXTERNAL_USERS_REMOVE,
                COUNT_EXTERNAL_USERS_CHANGE = t2.COUNT_EXTERNAL_USERS_CHANGE,
                COUNT_COUNTERPARTY = t2.COUNT_COUNTERPARTY,
                COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY = t2.COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY
                FROM (
                    SELECT
                    COUNT(*) AS COUNT_EXTERNAL_USERS,
                    COUNT(CASE WHEN t1.STATUS = 'PENDIENTE' THEN 1 END) AS COUNT_EXTERNAL_USERS_PENDING,
                    COUNT(CASE WHEN t1.STATUS = 'MANTENER' THEN 1 END) AS COUNT_EXTERNAL_USERS_KEEP,
                    COUNT(CASE WHEN t1.STATUS = 'ELIMINAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_REMOVE,
                    COUNT(CASE WHEN t1.STATUS = 'CAMBIAR' THEN 1 END) AS COUNT_EXTERNAL_USERS_CHANGE,
                    COUNT(DISTINCT t1.USERDATA_RESPONSIBLE_ID ) COUNT_COUNTERPARTY,
                    COUNT(CASE WHEN t1.USERDATA_RESPONSIBLE_ID IS NULL THEN 1 END ) COUNT_EXTERNAL_USERS_WITHOUT_COUNTERPARTY
                    FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS t1
                    WHERE t1.CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND t1.VALID=1
                ) t2
            WHERE CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId AND TYPE='G' AND VALID=1</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN">
            <validateLongRange minimum="1" />
        </param>
    </query> 
    <!-- Recupera los datos de una campana de usuarios externos expecifico -->
    <query id="single_certification_campaign_external_users_query" useConfig="default">
        <sql>
            SELECT 
                ID,
                USERDATA_RESPONSIBLE_ID,
                USERDATA_ID,
                CERTIFICATION_CAMPAIGNS_ID,
                STATUS,
                DATE_CALCULATE,
                SEND_NOTIFICATION,
                DATE_SEND_NOTIFICATION,
                COMMENT,
                DATE_KEEP,
                USER_KEEP,
                DATE_REMOVE,
                USER_REMOVE,
                DATE_CHANGE,
                USER_CHANGE,
                FILTER,
                VALID
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS WITH (NOLOCK)
                where ID=:certificationCampaignsExternalUserId</sql>
        <param name="certificationCampaignsExternalUserId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="CertificationCampaignsExternalUserList" rowName="CertificationCampaignsExternalUser">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="USERDATA_RESPONSIBLE_ID" name="userdataResponsibleId" export="userdataResponsibleId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="USERDATA_ID" name="userdataId" export="userdataId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="CERTIFICATION_CAMPAIGNS_ID" name="certificationCampaignsId" export="certificationCampaignsId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="STATUS" name="status" export="status" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="DATE_CALCULATE" name="dateCalculate" xsdType="xs:integer"/>
            <element column="SEND_NOTIFICATION" name="sendNotification" xsdType="xs:integer"/>
            <element column="DATE_SEND_NOTIFICATION" name="dateSendNotification" xsdType="xs:datetime"/>
            <element column="COMMENT" name="comment" xsdType="xs:string"/>
            <element column="DATE_KEEP" name="dateKeep" xsdType="xs:datetime"/>
            <element column="USER_KEEP" name="userKeep" xsdType="xs:string"/>
            <element column="DATE_REMOVE" name="dateRemove" xsdType="xs:datetime"/>
            <element column="USER_REMOVE" name="userRemove" xsdType="xs:string"/>
            <element column="DATE_CHANGE" name="dateChange" xsdType="xs:datetime"/>
            <element column="USER_CHANGE" name="userChange" xsdType="xs:string"/>                       
        </result>
    </query>
    <!-- Recupera los datos de una campana de todos los usuarios externos -->
    <query id="single_certification_campaign_external_users_all_query" useConfig="default">
        <sql>
            SELECT 
                ID,
                USERDATA_RESPONSIBLE_ID,
                USERDATA_ID,
                CERTIFICATION_CAMPAIGNS_ID,
                STATUS,
                DATE_CALCULATE,
                SEND_NOTIFICATION,
                DATE_SEND_NOTIFICATION,
                COMMENT,
                DATE_KEEP,
                USER_KEEP,
                DATE_REMOVE,
                USER_REMOVE,
                DATE_CHANGE,
                USER_CHANGE,
                FILTER,
                VALID
                FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_EXTERNAL_USERS WITH (NOLOCK)
                where CERTIFICATION_CAMPAIGNS_ID=:certificationCampaignsId</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="CertificationCampaignsExternalUserList" rowName="CertificationCampaignsExternalUser">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="USERDATA_RESPONSIBLE_ID" name="userdataResponsibleId" export="userdataResponsibleId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="USERDATA_ID" name="userdataId" export="userdataId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="CERTIFICATION_CAMPAIGNS_ID" name="certificationCampaignsId" export="certificationCampaignsId" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="STATUS" name="status" export="status" exportType="SCALAR" xsdType="xs:integer"/>
            <element column="DATE_CALCULATE" name="dateCalculate" xsdType="xs:integer"/>
            <element column="SEND_NOTIFICATION" name="sendNotification" xsdType="xs:integer"/>
            <element column="DATE_SEND_NOTIFICATION" name="dateSendNotification" xsdType="xs:datetime"/>
            <element column="COMMENT" name="comment" xsdType="xs:string"/>
            <element column="DATE_KEEP" name="dateKeep" xsdType="xs:datetime"/>
            <element column="USER_KEEP" name="userKeep" xsdType="xs:string"/>
            <element column="DATE_REMOVE" name="dateRemove" xsdType="xs:datetime"/>
            <element column="USER_REMOVE" name="userRemove" xsdType="xs:string"/>
            <element column="DATE_CHANGE" name="dateChange" xsdType="xs:datetime"/>
            <element column="USER_CHANGE" name="userChange" xsdType="xs:string"/>                       
        </result>
    </query>
    <!-- Agregar campana de certificacion para campanas retroactivas -->
    <query id="add_certification_campaings_retroactive_query" useConfig="default">
        <sql>
            INSERT INTO 
            SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RETROACTIVE 
            (
                CERTIFICATION_CAMPAIGNS_ID,
                CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID,
                VALID
            )
            VALUES
            (
                :certificationCampaignsId,
                :certificationCampaignsRetroactiveId,
                1
            )</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <param name="certificationCampaignsRetroactiveId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Eliminar campana de certificacion para campanas retroactivas -->
    <query id="delete_certification_campaings_retroactive_query" useConfig="default">
        <sql>
            UPDATE 
            SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RETROACTIVE 
            SET VALID=0
            WHERE
                ID = :id</sql>
        <param name="id" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
    </query>
    <!-- Listar campana de certificacion para campanas retroactivas -->
    <query id="list_certification_campaings_retroactive_query" useConfig="default">
        <sql>
            SELECT
                t1.ID,  
                t1.CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID,             
                t2.CODE,
                t2.DESCRIPTION
            FROM SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS_RETROACTIVE t1
            JOIN SCH_CENTRA_ID.CERTIFICATION_CAMPAIGNS t2 ON t1.CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID = t2.ID
            WHERE
                t1.CERTIFICATION_CAMPAIGNS_ID = :certificationCampaignsId AND
                t1.VALID = 1</sql>
        <param name="certificationCampaignsId" paramType="SCALAR" sqlType="BIGINT" type="IN"/>
        <result element="CertificationCampaignsExternalUserList" rowName="CertificationCampaignsExternalUser">
            <element column="ID" name="id" xsdType="xs:integer"/>
            <element column="CODE" name="code"  exportType="SCALAR" xsdType="xs:string"/>
            <element column="DESCRIPTION" name="description"  exportType="SCALAR" xsdType="xs:string"/>
            <element column="CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID" name="CERTIFICATION_CAMPAIGNS__RETROACTIVE_ID" xsdType="xs:integer"/>
        </result>
    </query>
    <!--Resources -->
    <resource method="POST" path="CertificationCampaignsClose">
        <call-query href="certification_campaign_close_query"></call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaigns">
        <call-query href="certification_campaigns_list_query">
            <with-param name="code" query-param="code"/>
            <with-param name="status" query-param="status"/>
            <with-param name="type" query-param="type"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfile">
        <call-query href="certification_campaigns_global_profile_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsExternalUsers">
        <call-query href="certification_campaigns_external_users_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="orderby" query-param="orderby"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>    
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileCount">
        <call-query href="certification_campaigns_global_profile_list_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsExternalUsersCount">
        <call-query href="certification_campaigns_external_users_list_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsSelectResponsable">
        <call-query href="certification_campaigns_select_responsable_query">
            <with-param name="globalProfileId" query-param="globalProfileId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsById">
        <call-query href="certification_campaigns_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileUnCertified">
        <call-query href="certification_campaigns_global_profile_uncertified_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileWithoutResponsible">
        <call-query href="certification_campaigns_global_profile_without_responsible_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileWithoutResources">
        <call-query href="certification_campaigns_global_profile_without_resources_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileWithoutUsers">
        <call-query href="certification_campaigns_global_profile_without_users_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsHaveGlobalProfile">
        <call-query href="certification_campaigns_have_global_profile_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsListGlobalProfile">
        <call-query href="certification_campaigns_list_global_profile_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResponsibleListGlobalProfile">
        <call-query href="certification_campaigns_responsible_list_global_profile_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsListResponsible">
        <call-query href="certification_campaigns_list_responsible_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResponsibleCountGlobalProfiles">
        <call-query href="certification_campaigns_responsible_count_global_profile_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResponsibleCountResources">
        <call-query href="certification_campaigns_responsible_count_resources_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResponsibleCountUsers">
        <call-query href="certification_campaigns_responsible_count_users_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResourcesList">
        <call-query href="certification_campaigns_resources_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResourcesCount">
        <call-query href="certification_campaigns_resources_list_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsUsersList">
        <call-query href="certification_campaigns_users_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsUsersCount">
        <call-query href="certification_campaigns_users_list_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsListApplication">
        <call-query href="certification_campaigns_list_application_query">
            <with-param name="certificationCampaignsGlobalProfilesId" query-param="certificationCampaignsGlobalProfilesId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsListTransactionalProfile">
        <call-query href="certification_campaigns_list_transactional_profiles_query">
            <with-param name="certificationCampaignsGlobalProfilesId" query-param="certificationCampaignsGlobalProfilesId"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsListResources">
        <call-query href="certification_campaigns_list_resources_query">
            <with-param name="certificationCampaignsGlobalProfilesId" query-param="certificationCampaignsGlobalProfilesId"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsInit">
        <call-query href="certification_campaigns_init_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUsersInit">
        <call-query href="certification_campaigns_external_users_init_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsCalculate">
        <call-query href="certification_campaigns_calculate_query">
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsCalculateUsers">
        <call-query href="certification_campaigns_calculate_users_query">
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsGlobalProfileCounter">
        <call-query href="certification_campaigns_global_profile_counter_query">
            <with-param name="certificationCampaignsGlobalProfileId" query-param="certificationCampaignsGlobalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignStatusReview">
        <call-query href="certification_campaigns_status_review_query">
            <with-param name="user" query-param="user"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignStatusStart">
        <call-query href="certification_campaigns_status_start_query">
            <with-param name="user" query-param="user"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsFinish">
        <call-query href="certification_campaigns_status_finish_query">
            <with-param name="user" query-param="user"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsResourceKeep">
        <call-query href="certification_campaigns_resource_keep_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsResourcesId" query-param="certificationCampaignsResourcesId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUserKeep">
        <call-query href="certification_campaigns_external_user_keep_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsExternalUserId" query-param="certificationCampaignsExternalUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUserAllKeep">
        <call-query href="certification_campaigns_external_user_keep_all_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="expiration_date_user" query-param="expiration_date_user"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsResourceRemove">
        <call-query href="certification_campaigns_resource_remove_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsResourcesId" query-param="certificationCampaignsResourcesId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUserRemove">
        <call-query href="certification_campaigns_external_user_remove_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsExternalUserId" query-param="certificationCampaignsExternalUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUserChange">
        <call-query href="certification_campaigns_external_user_change_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsExternalUserId" query-param="certificationCampaignsExternalUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsResourceComment">
        <call-query href="certification_campaigns_resource_comment_query">
            <with-param name="comment" query-param="comment"/>
            <with-param name="certificationCampaignsResourcesId" query-param="certificationCampaignsResourcesId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsExternalUserComment">
        <call-query href="certification_campaigns_external_user_comment_query">
            <with-param name="comment" query-param="comment"/>
            <with-param name="certificationCampaignsExternalUserId" query-param="certificationCampaignsExternalUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsAllUserKeep">
        <call-query href="certification_campaigns_all_user_keep_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsGlobalProfileId" query-param="certificationCampaignsGlobalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUserKeep">
        <call-query href="certification_campaigns_user_keep_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsUserId" query-param="certificationCampaignsUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUserRemove">
        <call-query href="certification_campaigns_user_remove_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsUserId" query-param="certificationCampaignsUserId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUserChange">
        <call-query href="certification_campaigns_user_change_query">
            <with-param name="username" query-param="username"/>
            <with-param name="certificationCampaignsUserId" query-param="certificationCampaignsUserId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUserComment">
        <call-query href="certification_campaigns_user_comment_query">
            <with-param name="comment" query-param="comment"/>
            <with-param name="certificationCampaignsUserId" query-param="certificationCampaignsUserId"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCertificationCampaignsResources">
        <call-query href="certification_campaigns_resources_delete_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCertificationCampaignsUsers">
        <call-query href="certification_campaigns_users_delete_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCertificationCampaignsGlobalProfiles">
        <call-query href="certification_campaigns_global_profiles_delete_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCertificationCampaignsExternalUsers">
        <call-query href="certification_campaigns_external_users_delete_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="DELETE" path="DeleteCertificationCampaignsByGlobalProfileResources">
        <call-query href="certification_campaigns_resources_delete_by_global_profile_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsReportList">
        <call-query href="certification_campaigns_list_report_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsReportCount">
        <call-query href="certification_campaigns_count_report_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsUserReportList">
        <call-query href="certification_campaigns_users_list_report_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsUserReportCount">
        <call-query href="certification_campaigns_users_count_report_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterResources">
        <call-query href="certification_campaigns_update_counter_resources_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterUsers">
        <call-query href="certification_campaigns_update_counter_users_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsGlobalProfileUpdateCounterResources">
        <call-query href="certification_campaigns_global_profile_update_counter_resources_query">
            <with-param name="certificationCampaignsGlobalProfileId" query-param="certificationCampaignsGlobalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsGlobalProfileUpdateCounterUsers">
        <call-query href="certification_campaigns_global_profile_update_counter_users_query">
            <with-param name="certificationCampaignsGlobalProfileId" query-param="certificationCampaignsGlobalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterGlobalProfile">
        <call-query href="certification_campaigns_update_counter_global_profile_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterGlobalProfileWithoutResponsible">
        <call-query href="certification_campaigns_update_counter_global_profile_without_responsible_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterResponsible">
        <call-query href="certification_campaigns_update_counter_responsible_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateCounterGlobalProfileCalculated">
        <call-query href="certification_campaigns_update_counter_global_profile_calculated_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdateStatusGlobalProfile">
        <call-query href="certification_campaigns_update_status_global_profile_query">
            <with-param name="certificationCampaignsGlobalProfileId" query-param="certificationCampaignsGlobalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsSelectManualResponsibleGlobalProfile">
        <call-query href="certification_campaigns_select_manual_responsible_query">
            <with-param name="responsibleId" query-param="responsibleId"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="globalProfileId" query-param="globalProfileId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsCreate">
        <call-query href="certification_campaigns_create_query">
            <with-param name="code" query-param="code"/>
            <with-param name="description" query-param="description"/>
            <with-param name="dateOpen" query-param="dateOpen"/>
            <with-param name="dateClose" query-param="dateClose"/>
            <with-param name="username" query-param="username"/>
            <with-param name="catalogCampaignsTypeId" query-param="catalogCampaignsTypeId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsUpdate">
        <call-query href="certification_campaigns_update_query">
            <with-param name="code" query-param="code"/>
            <with-param name="description" query-param="description"/>
            <with-param name="dateOpen" query-param="dateOpen"/>
            <with-param name="dateClose" query-param="dateClose"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostCertificationCampaignsDelete">
        <call-query href="certification_campaigns_delete_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <!-- RECURSOS -->
    <resource method="GET" path="GetResourcesList">
        <call-query href="resources_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetResourcesCount">
        <call-query href="resources_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostResourcesCreate">
        <call-query href="resources_create_query">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="description" query-param="description"/>
            <with-param name="sensitive" query-param="sensitive"/>
            <with-param name="username" query-param="username"/>
            <with-param name="applicationId" query-param="applicationId"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostResourcesUpdate">
        <call-query href="resources_update_query">
            <with-param name="code" query-param="code"/>
            <with-param name="name" query-param="name"/>
            <with-param name="description" query-param="description"/>
            <with-param name="sensitive" query-param="sensitive"/>
            <with-param name="username" query-param="username"/>
            <with-param name="applicationId" query-param="applicationId"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostResourcesDelete">
        <call-query href="resources_delete_query">
            <with-param name="username" query-param="username"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsGlobalProfileById">
        <call-query href="certification_campaigns_global_profile_by_id_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsResponsiblelistByNotification">
        <call-query href="certification_campaigns_list_responsible_by_notification_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetCertificationCampaignsExternalUsersResponsiblelistByNotification">
        <call-query href="certification_campaigns_external_users_list_responsible_by_notification_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetTransactionalProfileResourceList">
        <call-query href="transactional_profile_resources_list_query">
            <with-param name="whereclause" query-param="whereclause"/>
            <with-param name="fromto" query-param="fromto"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetTransactionalProfileResourceCount">
        <call-query href="transactional_profile_resources_count_query">
            <with-param name="whereclause" query-param="whereclause"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostTransactionalProfileResourceCodesCreate">
        <call-query href="transactional_profile_resources_create_codes_query">
            <with-param name="resourceCode" query-param="resourceCode"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostTransactionalProfileResourceCreate">
        <call-query href="transactional_profile_resources_create_query">
            <with-param name="resourcesId" query-param="resourcesId"/>
            <with-param name="transactionalProfileId" query-param="transactionalProfileId"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
        </call-query>
    </resource>
    <resource method="POST" path="PostTransactionalProfileResourceDelete">
        <call-query href="transactional_profile_resources_delete_query">
            <with-param name="username" query-param="username"/>
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetValidateSensibleResources">
        <call-query href="certification_campaigns_validate_sensible_resources_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="resourceCode" query-param="resourceCode"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetSelectSensibleResources">
        <call-query href="certification_campaigns_select_sensible_resources_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="applicationCode" query-param="applicationCode"/>
            <with-param name="transactionalProfileCode" query-param="transactionalProfileCode"/>
            <with-param name="resourceCode" query-param="resourceCode"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetValidateUsers">
        <call-query href="certification_campaigns_validate_users_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="usernameEmployee" query-param="usernameEmployee"/>
        </call-query>
    </resource>
    <resource method="GET" path="GetSelectUsers">
        <call-query href="certification_campaigns_select_users_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="username" query-param="username"/>
            <with-param name="globalProfileCode" query-param="globalProfileCode"/>
            <with-param name="usernameEmployee" query-param="usernameEmployee"/>
        </call-query>
    </resource>  
    <resource method="POST" path="CreateExternalUsersIndicatorsSingle">
        <call-query href="certification_campaign_external_users_indicators_single">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>   
    <resource method="POST" path="CreateExternalUsersIndicatorsGlobal">
        <call-query href="certification_campaign_external_users_indicators_global">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>  
    <resource method="DELETE" path="RemoveExternalUsersIndicatorsGlobal">
        <call-query href="certification_campaign_external_users_indicators_remove">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>   
    <resource method="GET" path="ListExternalUsersIndicatorsSingle">
        <call-query href="list_certification_campaign_external_users_indicators_single_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="filter" query-param="filter"/>
        </call-query>
    </resource>      
    <resource method="GET" path="ListExternalUsersIndicatorsGlobal">
        <call-query href="list_certification_campaign_external_users_indicators_global_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource> 
    <resource method="GET" path="SingleExternalUsersIndicatorsGlobal">
        <call-query href="single_certification_campaign_external_users_query">
            <with-param name="certificationCampaignsExternalUserId" query-param="certificationCampaignsExternalUserId"/>
        </call-query>
    </resource>  
    <resource method="GET" path="SingleExternalUsersIndicatorsGlobalAll">
        <call-query href="single_certification_campaign_external_users_all_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>  
    <resource method="PUT" path="UpdateExternalUsersIndicatorsSingle">
        <call-query href="update_certification_campaign_external_users_indicators_single_query"></call-query>
    </resource> 
    <resource method="PUT" path="UpdateExternalUsersIndicatorsGlobal">
        <call-query href="update_certification_campaign_external_users_indicators_global_query"></call-query>
    </resource> 
    <resource method="PUT" path="certification_campaigns_external_user_update_date_expiration">
        <call-query href="certification_campaigns_external_user_update_date_expiration_query">
            <with-param name="expiration_date_user" query-param="expiration_date_user"/>
        </call-query>
    </resource> 
    <resource method="POST" path="add_certification_campaings_retroactive">
        <call-query href="add_certification_campaings_retroactive_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="certificationCampaignsRetroactiveId" query-param="certificationCampaignsRetroactiveId"/>
        </call-query>
    </resource> 
    <resource method="DELETE" path="delete_certification_campaings_retroactive">
        <call-query href="delete_certification_campaings_retroactive_query">
            <with-param name="id" query-param="id"/>
        </call-query>
    </resource> 
    <resource method="GET" path="list_certification_campaings_retroactive">
        <call-query href="list_certification_campaings_retroactive_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource> 
    <resource method="POST" path="certification_campaigns_retroactive_init">
        <call-query href="certification_campaigns_retroactive_init_query">
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
        </call-query>
    </resource>
    <resource method="POST" path="certification_campaigns_retroactive_calculate">
        <call-query href="certification_campaigns_retroactive_calculate_query">
            <with-param name="globalProfileId" query-param="globalProfileId"/>
            <with-param name="certificationCampaignsId" query-param="certificationCampaignsId"/>
            <with-param name="certificationCampaignsRetroactiveId" query-param="certificationCampaignsRetroactiveId"/>
        </call-query>
    </resource>
</data>